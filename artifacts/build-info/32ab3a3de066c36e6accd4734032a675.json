{
	"id": "32ab3a3de066c36e6accd4734032a675",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"AstanaIT_University_Assanali.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.23;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract University_AstanaIT_Assanali is ERC20 {\r\n    // Constants\r\n    string public constant SYMBOL = \"UAA\";\r\n    string public constant NAME = \"University_AstanaIT_Assanali\";\r\n    uint8 public constant DECIMALS = 18;\r\n    uint256 public constant INITIAL_SUPPLY = 2000 * (10**uint256(DECIMALS));\r\n\r\n    // Events\r\n    event LatestTransactionInfo(string timestamp, address sender, address receiver);\r\n\r\n    // Constructor\r\n    constructor() ERC20(NAME, SYMBOL) {\r\n        _mint(msg.sender, INITIAL_SUPPLY);\r\n    }\r\n\r\n    function timestampToDate(uint256 timestamp) internal pure returns (string memory) {\r\n    // Convert the timestamp to a simple date format with time (YYYY-MM-DD HH:mm:ss)\r\n    // Calculate year\r\n    uint256 secondsInYear = 31536000; // seconds in a year\r\n    uint256 year = timestamp / secondsInYear + 1970;\r\n\r\n    // Calculate month\r\n    uint256 secondsInMonth = 2629746; // average seconds in a month\r\n    uint256 month = (timestamp % secondsInYear) / secondsInMonth + 1;\r\n\r\n    // Calculate day\r\n    uint256 secondsInDay = 86400; // seconds in a day\r\n    uint256 day = (timestamp % secondsInMonth) / secondsInDay + 1;\r\n\r\n    // Calculate hour\r\n    uint256 secondsInHour = 3600; // seconds in an hour\r\n    uint256 hour = (timestamp % secondsInDay) / secondsInHour;\r\n\r\n    // Calculate minute\r\n    uint256 secondsInMinute = 60; // seconds in a minute\r\n    uint256 minute = (timestamp % secondsInHour) / secondsInMinute;\r\n\r\n    // Calculate second\r\n    uint256 second = timestamp % secondsInMinute;\r\n\r\n    // Create a string in the format \"YYYY-MM-DD HH:mm:ss\"\r\n    string memory dateTimeString = string(abi.encodePacked(\r\n        _uintToString(year), \"-\",\r\n        _uintToString(month), \"-\",\r\n        _uintToString(day), \" \",\r\n        _uintToString(hour), \":\",\r\n        _uintToString(minute), \":\",\r\n        _uintToString(second)\r\n    ));\r\n\r\n    return dateTimeString;\r\n    }\r\n\r\n    // Function to return the human-readable date of the latest transaction\r\n    function getLatestTransactionTimestamp() external view returns (string memory) {\r\n        require(block.number > 0, \"No transactions have occurred yet\");\r\n        uint256 blockTimestamp = block.timestamp;\r\n        return timestampToDate(blockTimestamp);\r\n    }\r\n\r\n    // Function to retrieve the address of the transaction sender\r\n    function getTransactionSender() external view returns (address) {\r\n        return _msgSender();\r\n    }\r\n\r\n    // Function to retrieve the address of the transaction receiver\r\n    function getTransactionReceiver() external view returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    // Internal function to convert uint256 to a string\r\n    function _uintToString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    // Override transfer function to emit LatestTransactionInfo event\r\n    function transfer(address to, uint256 amount) public override returns (bool) {\r\n        bool success = super.transfer(to, amount);\r\n        if (success) {\r\n            emit LatestTransactionInfo(_uintToString(block.timestamp), _msgSender(), to);\r\n        }\r\n        return success;\r\n    }\r\n\r\n    // Override transferFrom function to emit LatestTransactionInfo event\r\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\r\n        bool success = super.transferFrom(from, to, amount);\r\n        if (success) {\r\n            emit LatestTransactionInfo(_uintToString(block.timestamp), from, to);\r\n        }\r\n        return success;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"AstanaIT_University_Assanali.sol": {
				"University_AstanaIT_Assanali": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "timestamp",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "LatestTransactionInfo",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DECIMALS",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INITIAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NAME",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SYMBOL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestTransactionTimestamp",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTransactionReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTransactionSender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"AstanaIT_University_Assanali.sol\":174:4137  contract University_AstanaIT_Assanali is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"AstanaIT_University_Assanali.sol\":602:688  constructor() ERC20(NAME, SYMBOL) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"AstanaIT_University_Assanali.sol\":622:626  NAME */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1c\n  dup2\n  mstore\n  0x20\n  add\n  0x556e69766572736974795f417374616e6149545f417373616e616c6900000000\n  dup2\n  mstore\n  pop\n    /* \"AstanaIT_University_Assanali.sol\":628:634  SYMBOL */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5541410000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"AstanaIT_University_Assanali.sol\":647:680  _mint(msg.sender, INITIAL_SUPPLY) */\n  tag_9\n    /* \"AstanaIT_University_Assanali.sol\":653:663  msg.sender */\n  caller\n    /* \"AstanaIT_University_Assanali.sol\":390:392  18 */\n  0x12\n    /* \"AstanaIT_University_Assanali.sol\":452:469  uint256(DECIMALS) */\n  0xff\n  and\n    /* \"AstanaIT_University_Assanali.sol\":448:450  10 */\n  0x0a\n    /* \"AstanaIT_University_Assanali.sol\":448:469  10**uint256(DECIMALS) */\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"AstanaIT_University_Assanali.sol\":440:444  2000 */\n  0x07d0\n    /* \"AstanaIT_University_Assanali.sol\":440:470  2000 * (10**uint256(DECIMALS)) */\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"AstanaIT_University_Assanali.sol\":647:652  _mint */\n  shl(0x20, tag_14)\n    /* \"AstanaIT_University_Assanali.sol\":647:680  _mint(msg.sender, INITIAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"AstanaIT_University_Assanali.sol\":174:4137  contract University_AstanaIT_Assanali is ERC20 {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_14:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_26)\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_28\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_31)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_34:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_35:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_36:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_37:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_67:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_69\n  tag_36\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":714:798   */\ntag_68:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_38:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_39:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_40:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_41:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_74\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1429:1468   */\n  tag_75\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_42:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_43:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_44:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_79\n    /* \"#utility.yul\":1818:1852   */\n  tag_80\n    /* \"#utility.yul\":1827:1851   */\n  tag_81\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_42\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1818:1852   */\n  tag_43\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1800:1853   */\n  tag_42\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_45:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_46:\n    /* \"#utility.yul\":2056:2095   */\n  tag_84\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_44\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2117:2208   */\n  tag_85\n    /* \"#utility.yul\":2166:2207   */\n  tag_86\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_45\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_47:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_48:\n    /* \"#utility.yul\":2377:2409   */\n  tag_89\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2418:2483   */\n  tag_90\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_46\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_49:\n    /* \"#utility.yul\":2555:2675   */\ntag_92:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_95\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_92)\ntag_94:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_50:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_98\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_38\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2906:2935   */\n  tag_99\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_39\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_100:\n    /* \"#utility.yul\":3133:3213   */\n  tag_101\n    /* \"#utility.yul\":3189:3211   */\n  tag_102\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_39\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_49\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_97:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_51:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_52:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_105\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_51\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_53:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_107\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_52\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_109\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_34\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_111\n  tag_35\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4038:4094   */\ntag_110:\n    /* \"#utility.yul\":4118:4156   */\n  tag_112\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_37\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4203:4270   */\n  tag_113\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_50\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_116:\n    /* \"#utility.yul\":5144:5211   */\n  tag_117\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_53\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_114)\n    /* \"#utility.yul\":4365:4983   */\ntag_115:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_118\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_119:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_123\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_52\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_122:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_114:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_54:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_55:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_56:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_127:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_131\n  tag_54\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5753:5803   */\ntag_130:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_132:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_133\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_55\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_57:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_134)\n    /* \"#utility.yul\":6617:6657   */\ntag_135:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_134)\n    /* \"#utility.yul\":6666:6702   */\ntag_136:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_137)\n    /* \"#utility.yul\":6805:6832   */\ntag_138:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_134)\n    /* \"#utility.yul\":6841:7032   */\ntag_139:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_141\n  tag_54\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6870:6913   */\ntag_140:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_143\n  tag_54\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6964:7004   */\ntag_142:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_134)\n    /* \"#utility.yul\":6755:7032   */\ntag_137:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_146\n  tag_54\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7219:7259   */\ntag_145:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_134)\n    /* \"#utility.yul\":7041:7287   */\ntag_144:\n    /* \"#utility.yul\":7312:7354   */\n  tag_147\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_56\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_149\n  tag_54\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7364:7415   */\ntag_148:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_134:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7746   */\ntag_11:\n    /* \"#utility.yul\":7521:7526   */\n  0x00\n    /* \"#utility.yul\":7545:7568   */\n  tag_151\n    /* \"#utility.yul\":7563:7567   */\n  dup3\n    /* \"#utility.yul\":7545:7568   */\n  tag_42\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7537:7568   */\n  swap2\n  pop\n    /* \"#utility.yul\":7589:7616   */\n  tag_152\n    /* \"#utility.yul\":7607:7615   */\n  dup4\n    /* \"#utility.yul\":7589:7616   */\n  tag_42\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7577:7616   */\n  swap3\n  pop\n    /* \"#utility.yul\":7635:7739   */\n  tag_153\n    /* \"#utility.yul\":7672:7738   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7662:7670   */\n  dup5\n    /* \"#utility.yul\":7656:7660   */\n  dup5\n    /* \"#utility.yul\":7635:7739   */\n  tag_57\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7626:7739   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7746   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7752:8162   */\ntag_13:\n    /* \"#utility.yul\":7792:7799   */\n  0x00\n    /* \"#utility.yul\":7815:7835   */\n  tag_155\n    /* \"#utility.yul\":7833:7834   */\n  dup3\n    /* \"#utility.yul\":7815:7835   */\n  tag_42\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7810:7835   */\n  swap2\n  pop\n    /* \"#utility.yul\":7849:7869   */\n  tag_156\n    /* \"#utility.yul\":7867:7868   */\n  dup4\n    /* \"#utility.yul\":7849:7869   */\n  tag_42\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7844:7869   */\n  swap3\n  pop\n    /* \"#utility.yul\":7904:7905   */\n  dup3\n    /* \"#utility.yul\":7901:7902   */\n  dup3\n    /* \"#utility.yul\":7897:7906   */\n  mul\n    /* \"#utility.yul\":7926:7956   */\n  tag_157\n    /* \"#utility.yul\":7944:7955   */\n  dup2\n    /* \"#utility.yul\":7926:7956   */\n  tag_42\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7915:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":8105:8106   */\n  dup3\n    /* \"#utility.yul\":8096:8103   */\n  dup3\n    /* \"#utility.yul\":8092:8107   */\n  div\n    /* \"#utility.yul\":8089:8090   */\n  dup5\n    /* \"#utility.yul\":8086:8108   */\n  eq\n    /* \"#utility.yul\":8066:8067   */\n  dup4\n    /* \"#utility.yul\":8059:8068   */\n  iszero\n    /* \"#utility.yul\":8039:8122   */\n  or\n    /* \"#utility.yul\":8016:8155   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":8135:8153   */\n  tag_159\n  tag_54\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8016:8155   */\ntag_158:\n    /* \"#utility.yul\":7800:8162   */\n  pop\n    /* \"#utility.yul\":7752:8162   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8168:8294   */\ntag_58:\n    /* \"#utility.yul\":8205:8212   */\n  0x00\n    /* \"#utility.yul\":8245:8287   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8238:8243   */\n  dup3\n    /* \"#utility.yul\":8234:8288   */\n  and\n    /* \"#utility.yul\":8223:8288   */\n  swap1\n  pop\n    /* \"#utility.yul\":8168:8294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8300:8396   */\ntag_59:\n    /* \"#utility.yul\":8337:8344   */\n  0x00\n    /* \"#utility.yul\":8366:8390   */\n  tag_162\n    /* \"#utility.yul\":8384:8389   */\n  dup3\n    /* \"#utility.yul\":8366:8390   */\n  tag_58\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8355:8390   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8396   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8402:8520   */\ntag_60:\n    /* \"#utility.yul\":8489:8513   */\n  tag_164\n    /* \"#utility.yul\":8507:8512   */\n  dup2\n    /* \"#utility.yul\":8489:8513   */\n  tag_59\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8484:8487   */\n  dup3\n    /* \"#utility.yul\":8477:8514   */\n  mstore\n    /* \"#utility.yul\":8402:8520   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8526:8748   */\ntag_19:\n    /* \"#utility.yul\":8619:8623   */\n  0x00\n    /* \"#utility.yul\":8657:8659   */\n  0x20\n    /* \"#utility.yul\":8646:8655   */\n  dup3\n    /* \"#utility.yul\":8642:8660   */\n  add\n    /* \"#utility.yul\":8634:8660   */\n  swap1\n  pop\n    /* \"#utility.yul\":8670:8741   */\n  tag_166\n    /* \"#utility.yul\":8738:8739   */\n  0x00\n    /* \"#utility.yul\":8727:8736   */\n  dup4\n    /* \"#utility.yul\":8723:8740   */\n  add\n    /* \"#utility.yul\":8714:8720   */\n  dup5\n    /* \"#utility.yul\":8670:8741   */\n  tag_60\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8526:8748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8754:8945   */\ntag_25:\n    /* \"#utility.yul\":8794:8797   */\n  0x00\n    /* \"#utility.yul\":8813:8833   */\n  tag_168\n    /* \"#utility.yul\":8831:8832   */\n  dup3\n    /* \"#utility.yul\":8813:8833   */\n  tag_42\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8808:8833   */\n  swap2\n  pop\n    /* \"#utility.yul\":8847:8867   */\n  tag_169\n    /* \"#utility.yul\":8865:8866   */\n  dup4\n    /* \"#utility.yul\":8847:8867   */\n  tag_42\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8842:8867   */\n  swap3\n  pop\n    /* \"#utility.yul\":8890:8891   */\n  dup3\n    /* \"#utility.yul\":8887:8888   */\n  dup3\n    /* \"#utility.yul\":8883:8892   */\n  add\n    /* \"#utility.yul\":8876:8892   */\n  swap1\n  pop\n    /* \"#utility.yul\":8911:8914   */\n  dup1\n    /* \"#utility.yul\":8908:8909   */\n  dup3\n    /* \"#utility.yul\":8905:8915   */\n  gt\n    /* \"#utility.yul\":8902:8938   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8918:8936   */\n  tag_171\n  tag_54\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8902:8938   */\ntag_170:\n    /* \"#utility.yul\":8754:8945   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8951:9069   */\ntag_61:\n    /* \"#utility.yul\":9038:9062   */\n  tag_173\n    /* \"#utility.yul\":9056:9061   */\n  dup2\n    /* \"#utility.yul\":9038:9062   */\n  tag_42\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":9033:9036   */\n  dup3\n    /* \"#utility.yul\":9026:9063   */\n  mstore\n    /* \"#utility.yul\":8951:9069   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9075:9517   */\ntag_29:\n    /* \"#utility.yul\":9224:9228   */\n  0x00\n    /* \"#utility.yul\":9262:9264   */\n  0x60\n    /* \"#utility.yul\":9251:9260   */\n  dup3\n    /* \"#utility.yul\":9247:9265   */\n  add\n    /* \"#utility.yul\":9239:9265   */\n  swap1\n  pop\n    /* \"#utility.yul\":9275:9346   */\n  tag_175\n    /* \"#utility.yul\":9343:9344   */\n  0x00\n    /* \"#utility.yul\":9332:9341   */\n  dup4\n    /* \"#utility.yul\":9328:9345   */\n  add\n    /* \"#utility.yul\":9319:9325   */\n  dup7\n    /* \"#utility.yul\":9275:9346   */\n  tag_60\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":9356:9428   */\n  tag_176\n    /* \"#utility.yul\":9424:9426   */\n  0x20\n    /* \"#utility.yul\":9413:9422   */\n  dup4\n    /* \"#utility.yul\":9409:9427   */\n  add\n    /* \"#utility.yul\":9400:9406   */\n  dup6\n    /* \"#utility.yul\":9356:9428   */\n  tag_61\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":9438:9510   */\n  tag_177\n    /* \"#utility.yul\":9506:9508   */\n  0x40\n    /* \"#utility.yul\":9495:9504   */\n  dup4\n    /* \"#utility.yul\":9491:9509   */\n  add\n    /* \"#utility.yul\":9482:9488   */\n  dup5\n    /* \"#utility.yul\":9438:9510   */\n  tag_61\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":9075:9517   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9523:9745   */\ntag_33:\n    /* \"#utility.yul\":9616:9620   */\n  0x00\n    /* \"#utility.yul\":9654:9656   */\n  0x20\n    /* \"#utility.yul\":9643:9652   */\n  dup3\n    /* \"#utility.yul\":9639:9657   */\n  add\n    /* \"#utility.yul\":9631:9657   */\n  swap1\n  pop\n    /* \"#utility.yul\":9667:9738   */\n  tag_179\n    /* \"#utility.yul\":9735:9736   */\n  0x00\n    /* \"#utility.yul\":9724:9733   */\n  dup4\n    /* \"#utility.yul\":9720:9737   */\n  add\n    /* \"#utility.yul\":9711:9717   */\n  dup5\n    /* \"#utility.yul\":9667:9738   */\n  tag_61\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9523:9745   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"AstanaIT_University_Assanali.sol\":174:4137  contract University_AstanaIT_Assanali is ERC20 {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"AstanaIT_University_Assanali.sol\":174:4137  contract University_AstanaIT_Assanali is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x841b39fc\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbead3f50\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbead3f50\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd45e3f4a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf76f8d78\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x841b39fc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa3f4df7e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x2e0f2625\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2e0f2625\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ff2e9dc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":3826:4134  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":357:392  uint8 public constant DECIMALS = 18 */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":399:470  uint256 public constant INITIAL_SUPPLY = 2000 * (10**uint256(DECIMALS)) */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":2669:2774  function getTransactionReceiver() external view returns (address) {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":290:350  string public constant NAME = \"University_AstanaIT_Assanali\" */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":3455:3743  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":2490:2592  function getTransactionSender() external view returns (address) {... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":2155:2415  function getLatestTransactionTimestamp() external view returns (string memory) {... */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"AstanaIT_University_Assanali.sol\":246:283  string public constant SYMBOL = \"UAA\" */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":3826:4134  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_39:\n        /* \"AstanaIT_University_Assanali.sol\":3915:3919  bool */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3932:3944  bool success */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":3947:3983  super.transferFrom(from, to, amount) */\n      tag_98\n        /* \"AstanaIT_University_Assanali.sol\":3966:3970  from */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":3972:3974  to */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":3976:3982  amount */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":3947:3965  super.transferFrom */\n      tag_99\n        /* \"AstanaIT_University_Assanali.sol\":3947:3983  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_98:\n        /* \"AstanaIT_University_Assanali.sol\":3932:3983  bool success = super.transferFrom(from, to, amount) */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3998:4005  success */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":3994:4102  if (success) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"AstanaIT_University_Assanali.sol\":4027:4090  LatestTransactionInfo(_uintToString(block.timestamp), from, to) */\n      0x360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd\n        /* \"AstanaIT_University_Assanali.sol\":4049:4079  _uintToString(block.timestamp) */\n      tag_101\n        /* \"AstanaIT_University_Assanali.sol\":4063:4078  block.timestamp */\n      timestamp\n        /* \"AstanaIT_University_Assanali.sol\":4049:4062  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":4049:4079  _uintToString(block.timestamp) */\n      jump\t// in\n    tag_101:\n        /* \"AstanaIT_University_Assanali.sol\":4081:4085  from */\n      dup7\n        /* \"AstanaIT_University_Assanali.sol\":4087:4089  to */\n      dup7\n        /* \"AstanaIT_University_Assanali.sol\":4027:4090  LatestTransactionInfo(_uintToString(block.timestamp), from, to) */\n      mload(0x40)\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AstanaIT_University_Assanali.sol\":3994:4102  if (success) {... */\n    tag_100:\n        /* \"AstanaIT_University_Assanali.sol\":4119:4126  success */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":4112:4126  return success */\n      swap2\n      pop\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3826:4134  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":357:392  uint8 public constant DECIMALS = 18 */\n    tag_42:\n        /* \"AstanaIT_University_Assanali.sol\":390:392  18 */\n      0x12\n        /* \"AstanaIT_University_Assanali.sol\":357:392  uint8 public constant DECIMALS = 18 */\n      dup2\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":399:470  uint256 public constant INITIAL_SUPPLY = 2000 * (10**uint256(DECIMALS)) */\n    tag_46:\n        /* \"AstanaIT_University_Assanali.sol\":390:392  18 */\n      0x12\n        /* \"AstanaIT_University_Assanali.sol\":452:469  uint256(DECIMALS) */\n      0xff\n      and\n        /* \"AstanaIT_University_Assanali.sol\":448:450  10 */\n      0x0a\n        /* \"AstanaIT_University_Assanali.sol\":448:469  10**uint256(DECIMALS) */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"AstanaIT_University_Assanali.sol\":440:444  2000 */\n      0x07d0\n        /* \"AstanaIT_University_Assanali.sol\":440:470  2000 * (10**uint256(DECIMALS)) */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"AstanaIT_University_Assanali.sol\":399:470  uint256 public constant INITIAL_SUPPLY = 2000 * (10**uint256(DECIMALS)) */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":2669:2774  function getTransactionReceiver() external view returns (address) {... */\n    tag_57:\n        /* \"AstanaIT_University_Assanali.sol\":2726:2733  address */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":2761:2765  this */\n      address\n        /* \"AstanaIT_University_Assanali.sol\":2746:2766  return address(this) */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":2669:2774  function getTransactionReceiver() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_86\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_86\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":290:350  string public constant NAME = \"University_AstanaIT_Assanali\" */\n    tag_64:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      0x556e69766572736974795f417374616e6149545f417373616e616c6900000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":3455:3743  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_68:\n        /* \"AstanaIT_University_Assanali.sol\":3526:3530  bool */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3543:3555  bool success */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":3558:3584  super.transfer(to, amount) */\n      tag_119\n        /* \"AstanaIT_University_Assanali.sol\":3573:3575  to */\n      dup5\n        /* \"AstanaIT_University_Assanali.sol\":3577:3583  amount */\n      dup5\n        /* \"AstanaIT_University_Assanali.sol\":3558:3572  super.transfer */\n      tag_120\n        /* \"AstanaIT_University_Assanali.sol\":3558:3584  super.transfer(to, amount) */\n      jump\t// in\n    tag_119:\n        /* \"AstanaIT_University_Assanali.sol\":3543:3584  bool success = super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3599:3606  success */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":3595:3711  if (success) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"AstanaIT_University_Assanali.sol\":3628:3699  LatestTransactionInfo(_uintToString(block.timestamp), _msgSender(), to) */\n      0x360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd\n        /* \"AstanaIT_University_Assanali.sol\":3650:3680  _uintToString(block.timestamp) */\n      tag_122\n        /* \"AstanaIT_University_Assanali.sol\":3664:3679  block.timestamp */\n      timestamp\n        /* \"AstanaIT_University_Assanali.sol\":3650:3663  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":3650:3680  _uintToString(block.timestamp) */\n      jump\t// in\n    tag_122:\n        /* \"AstanaIT_University_Assanali.sol\":3682:3694  _msgSender() */\n      tag_123\n        /* \"AstanaIT_University_Assanali.sol\":3682:3692  _msgSender */\n      tag_93\n        /* \"AstanaIT_University_Assanali.sol\":3682:3694  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"AstanaIT_University_Assanali.sol\":3696:3698  to */\n      dup7\n        /* \"AstanaIT_University_Assanali.sol\":3628:3699  LatestTransactionInfo(_uintToString(block.timestamp), _msgSender(), to) */\n      mload(0x40)\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"AstanaIT_University_Assanali.sol\":3595:3711  if (success) {... */\n    tag_121:\n        /* \"AstanaIT_University_Assanali.sol\":3728:3735  success */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":3721:3735  return success */\n      swap2\n      pop\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3455:3743  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":2490:2592  function getTransactionSender() external view returns (address) {... */\n    tag_71:\n        /* \"AstanaIT_University_Assanali.sol\":2545:2552  address */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":2572:2584  _msgSender() */\n      tag_126\n        /* \"AstanaIT_University_Assanali.sol\":2572:2582  _msgSender */\n      tag_93\n        /* \"AstanaIT_University_Assanali.sol\":2572:2584  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"AstanaIT_University_Assanali.sol\":2565:2584  return _msgSender() */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":2490:2592  function getTransactionSender() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":2155:2415  function getLatestTransactionTimestamp() external view returns (string memory) {... */\n    tag_74:\n        /* \"AstanaIT_University_Assanali.sol\":2219:2232  string memory */\n      0x60\n        /* \"AstanaIT_University_Assanali.sol\":2268:2269  0 */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":2253:2265  block.number */\n      number\n        /* \"AstanaIT_University_Assanali.sol\":2253:2269  block.number > 0 */\n      gt\n        /* \"AstanaIT_University_Assanali.sol\":2245:2307  require(block.number > 0, \"No transactions have occurred yet\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"AstanaIT_University_Assanali.sol\":2318:2340  uint256 blockTimestamp */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":2343:2358  block.timestamp */\n      timestamp\n        /* \"AstanaIT_University_Assanali.sol\":2318:2358  uint256 blockTimestamp = block.timestamp */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":2376:2407  timestampToDate(blockTimestamp) */\n      tag_131\n        /* \"AstanaIT_University_Assanali.sol\":2392:2406  blockTimestamp */\n      dup2\n        /* \"AstanaIT_University_Assanali.sol\":2376:2391  timestampToDate */\n      tag_132\n        /* \"AstanaIT_University_Assanali.sol\":2376:2407  timestampToDate(blockTimestamp) */\n      jump\t// in\n    tag_131:\n        /* \"AstanaIT_University_Assanali.sol\":2369:2407  return timestampToDate(blockTimestamp) */\n      swap2\n      pop\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":2155:2415  function getLatestTransactionTimestamp() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":246:283  string public constant SYMBOL = \"UAA\" */\n    tag_82:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x5541410000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":2839:3376  function _uintToString(uint256 value) internal pure returns (string memory) {... */\n    tag_102:\n        /* \"AstanaIT_University_Assanali.sol\":2900:2913  string memory */\n      0x60\n        /* \"AstanaIT_University_Assanali.sol\":2939:2940  0 */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":2930:2935  value */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":2930:2940  value == 0 */\n      sub\n        /* \"AstanaIT_University_Assanali.sol\":2926:2979  if (value == 0) {... */\n      tag_145\n      jumpi\n        /* \"AstanaIT_University_Assanali.sol\":2957:2967  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_144)\n        /* \"AstanaIT_University_Assanali.sol\":2926:2979  if (value == 0) {... */\n    tag_145:\n        /* \"AstanaIT_University_Assanali.sol\":2989:3001  uint256 temp */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3004:3009  value */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":2989:3009  uint256 temp = value */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3020:3034  uint256 digits */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3045:3123  while (temp != 0) {... */\n    tag_146:\n        /* \"AstanaIT_University_Assanali.sol\":3060:3061  0 */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3052:3056  temp */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":3052:3061  temp != 0 */\n      eq\n        /* \"AstanaIT_University_Assanali.sol\":3045:3123  while (temp != 0) {... */\n      tag_147\n      jumpi\n        /* \"AstanaIT_University_Assanali.sol\":3078:3086  digits++ */\n      dup1\n      dup1\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      swap2\n      pop\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3109:3111  10 */\n      0x0a\n        /* \"AstanaIT_University_Assanali.sol\":3101:3111  temp /= 10 */\n      dup3\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      swap2\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3045:3123  while (temp != 0) {... */\n      jump(tag_146)\n    tag_147:\n        /* \"AstanaIT_University_Assanali.sol\":3133:3152  bytes memory buffer */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3165:3171  digits */\n      dup2\n        /* \"AstanaIT_University_Assanali.sol\":3155:3172  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_152\n      jumpi\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n    tag_152:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_155:\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3133:3172  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3183:3337  while (value != 0) {... */\n    tag_156:\n        /* \"AstanaIT_University_Assanali.sol\":3199:3200  0 */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":3190:3195  value */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":3190:3200  value != 0 */\n      eq\n        /* \"AstanaIT_University_Assanali.sol\":3183:3337  while (value != 0) {... */\n      tag_157\n      jumpi\n        /* \"AstanaIT_University_Assanali.sol\":3227:3228  1 */\n      0x01\n        /* \"AstanaIT_University_Assanali.sol\":3217:3228  digits -= 1 */\n      dup3\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      swap2\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3294:3296  10 */\n      0x0a\n        /* \"AstanaIT_University_Assanali.sol\":3286:3291  value */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":3286:3296  value % 10 */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"AstanaIT_University_Assanali.sol\":3273:3275  48 */\n      0x30\n        /* \"AstanaIT_University_Assanali.sol\":3273:3297  48 + uint256(value % 10) */\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"AstanaIT_University_Assanali.sol\":3260:3299  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"AstanaIT_University_Assanali.sol\":3243:3249  buffer */\n      dup2\n        /* \"AstanaIT_University_Assanali.sol\":3250:3256  digits */\n      dup4\n        /* \"AstanaIT_University_Assanali.sol\":3243:3257  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n    tag_164:\n      0x20\n      add\n      add\n        /* \"AstanaIT_University_Assanali.sol\":3243:3299  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3323:3325  10 */\n      0x0a\n        /* \"AstanaIT_University_Assanali.sol\":3314:3325  value /= 10 */\n      dup6\n      tag_167\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_167:\n      swap5\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":3183:3337  while (value != 0) {... */\n      jump(tag_156)\n    tag_157:\n        /* \"AstanaIT_University_Assanali.sol\":3361:3367  buffer */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":3347:3368  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":2839:3376  function _uintToString(uint256 value) internal pure returns (string memory) {... */\n    tag_144:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"AstanaIT_University_Assanali.sol\":696:2070  function timestampToDate(uint256 timestamp) internal pure returns (string memory) {... */\n    tag_132:\n        /* \"AstanaIT_University_Assanali.sol\":763:776  string memory */\n      0x60\n        /* \"AstanaIT_University_Assanali.sol\":894:915  uint256 secondsInYear */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":918:926  31536000 */\n      0x01e13380\n        /* \"AstanaIT_University_Assanali.sol\":894:926  uint256 secondsInYear = 31536000 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":954:966  uint256 year */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":997:1001  1970 */\n      0x07b2\n        /* \"AstanaIT_University_Assanali.sol\":981:994  secondsInYear */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":969:978  timestamp */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":969:994  timestamp / secondsInYear */\n      tag_172\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_172:\n        /* \"AstanaIT_University_Assanali.sol\":969:1001  timestamp / secondsInYear + 1970 */\n      tag_173\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_173:\n        /* \"AstanaIT_University_Assanali.sol\":954:1001  uint256 year = timestamp / secondsInYear + 1970 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1034:1056  uint256 secondsInMonth */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1059:1066  2629746 */\n      0x282072\n        /* \"AstanaIT_University_Assanali.sol\":1034:1066  uint256 secondsInMonth = 2629746 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1103:1116  uint256 month */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1166:1167  1 */\n      0x01\n        /* \"AstanaIT_University_Assanali.sol\":1149:1163  secondsInMonth */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":1132:1145  secondsInYear */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":1120:1129  timestamp */\n      dup9\n        /* \"AstanaIT_University_Assanali.sol\":1120:1145  timestamp % secondsInYear */\n      tag_174\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_174:\n        /* \"AstanaIT_University_Assanali.sol\":1119:1163  (timestamp % secondsInYear) / secondsInMonth */\n      tag_175\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_175:\n        /* \"AstanaIT_University_Assanali.sol\":1119:1167  (timestamp % secondsInYear) / secondsInMonth + 1 */\n      tag_176\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_176:\n        /* \"AstanaIT_University_Assanali.sol\":1103:1167  uint256 month = (timestamp % secondsInYear) / secondsInMonth + 1 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1198:1218  uint256 secondsInDay */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1221:1226  86400 */\n      0x015180\n        /* \"AstanaIT_University_Assanali.sol\":1198:1226  uint256 secondsInDay = 86400 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1253:1264  uint256 day */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1313:1314  1 */\n      0x01\n        /* \"AstanaIT_University_Assanali.sol\":1298:1310  secondsInDay */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":1280:1294  secondsInMonth */\n      dup6\n        /* \"AstanaIT_University_Assanali.sol\":1268:1277  timestamp */\n      dup11\n        /* \"AstanaIT_University_Assanali.sol\":1268:1294  timestamp % secondsInMonth */\n      tag_177\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_177:\n        /* \"AstanaIT_University_Assanali.sol\":1267:1310  (timestamp % secondsInMonth) / secondsInDay */\n      tag_178\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_178:\n        /* \"AstanaIT_University_Assanali.sol\":1267:1314  (timestamp % secondsInMonth) / secondsInDay + 1 */\n      tag_179\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_179:\n        /* \"AstanaIT_University_Assanali.sol\":1253:1314  uint256 day = (timestamp % secondsInMonth) / secondsInDay + 1 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1346:1367  uint256 secondsInHour */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1370:1374  3600 */\n      0x0e10\n        /* \"AstanaIT_University_Assanali.sol\":1346:1374  uint256 secondsInHour = 3600 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1403:1415  uint256 hour */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1447:1460  secondsInHour */\n      dup2\n        /* \"AstanaIT_University_Assanali.sol\":1431:1443  secondsInDay */\n      dup5\n        /* \"AstanaIT_University_Assanali.sol\":1419:1428  timestamp */\n      dup12\n        /* \"AstanaIT_University_Assanali.sol\":1419:1443  timestamp % secondsInDay */\n      tag_180\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_180:\n        /* \"AstanaIT_University_Assanali.sol\":1418:1460  (timestamp % secondsInDay) / secondsInHour */\n      tag_181\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_181:\n        /* \"AstanaIT_University_Assanali.sol\":1403:1460  uint256 hour = (timestamp % secondsInDay) / secondsInHour */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1494:1517  uint256 secondsInMinute */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1520:1522  60 */\n      0x3c\n        /* \"AstanaIT_University_Assanali.sol\":1494:1522  uint256 secondsInMinute = 60 */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1552:1566  uint256 minute */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1599:1614  secondsInMinute */\n      dup2\n        /* \"AstanaIT_University_Assanali.sol\":1582:1595  secondsInHour */\n      dup5\n        /* \"AstanaIT_University_Assanali.sol\":1570:1579  timestamp */\n      dup14\n        /* \"AstanaIT_University_Assanali.sol\":1570:1595  timestamp % secondsInHour */\n      tag_182\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_182:\n        /* \"AstanaIT_University_Assanali.sol\":1569:1614  (timestamp % secondsInHour) / secondsInMinute */\n      tag_183\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_183:\n        /* \"AstanaIT_University_Assanali.sol\":1552:1614  uint256 minute = (timestamp % secondsInHour) / secondsInMinute */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1648:1662  uint256 second */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1677:1692  secondsInMinute */\n      dup3\n        /* \"AstanaIT_University_Assanali.sol\":1665:1674  timestamp */\n      dup14\n        /* \"AstanaIT_University_Assanali.sol\":1665:1692  timestamp % secondsInMinute */\n      tag_184\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_184:\n        /* \"AstanaIT_University_Assanali.sol\":1648:1692  uint256 second = timestamp % secondsInMinute */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":1761:1789  string memory dateTimeString */\n      0x00\n        /* \"AstanaIT_University_Assanali.sol\":1826:1845  _uintToString(year) */\n      tag_185\n        /* \"AstanaIT_University_Assanali.sol\":1840:1844  year */\n      dup12\n        /* \"AstanaIT_University_Assanali.sol\":1826:1839  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":1826:1845  _uintToString(year) */\n      jump\t// in\n    tag_185:\n        /* \"AstanaIT_University_Assanali.sol\":1861:1881  _uintToString(month) */\n      tag_186\n        /* \"AstanaIT_University_Assanali.sol\":1875:1880  month */\n      dup11\n        /* \"AstanaIT_University_Assanali.sol\":1861:1874  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":1861:1881  _uintToString(month) */\n      jump\t// in\n    tag_186:\n        /* \"AstanaIT_University_Assanali.sol\":1897:1915  _uintToString(day) */\n      tag_187\n        /* \"AstanaIT_University_Assanali.sol\":1911:1914  day */\n      dup10\n        /* \"AstanaIT_University_Assanali.sol\":1897:1910  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":1897:1915  _uintToString(day) */\n      jump\t// in\n    tag_187:\n        /* \"AstanaIT_University_Assanali.sol\":1931:1950  _uintToString(hour) */\n      tag_188\n        /* \"AstanaIT_University_Assanali.sol\":1945:1949  hour */\n      dup9\n        /* \"AstanaIT_University_Assanali.sol\":1931:1944  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":1931:1950  _uintToString(hour) */\n      jump\t// in\n    tag_188:\n        /* \"AstanaIT_University_Assanali.sol\":1966:1987  _uintToString(minute) */\n      tag_189\n        /* \"AstanaIT_University_Assanali.sol\":1980:1986  minute */\n      dup8\n        /* \"AstanaIT_University_Assanali.sol\":1966:1979  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":1966:1987  _uintToString(minute) */\n      jump\t// in\n    tag_189:\n        /* \"AstanaIT_University_Assanali.sol\":2003:2024  _uintToString(second) */\n      tag_190\n        /* \"AstanaIT_University_Assanali.sol\":2017:2023  second */\n      dup8\n        /* \"AstanaIT_University_Assanali.sol\":2003:2016  _uintToString */\n      tag_102\n        /* \"AstanaIT_University_Assanali.sol\":2003:2024  _uintToString(second) */\n      jump\t// in\n    tag_190:\n        /* \"AstanaIT_University_Assanali.sol\":1799:2031  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_191\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"AstanaIT_University_Assanali.sol\":1761:2032  string memory dateTimeString = string(abi.encodePacked(... */\n      swap1\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":2048:2062  dateTimeString */\n      dup1\n        /* \"AstanaIT_University_Assanali.sol\":2041:2062  return dateTimeString */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"AstanaIT_University_Assanali.sol\":696:2070  function timestampToDate(uint256 timestamp) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_216\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_216:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_217)\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_221)\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_223:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_224:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_225:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_264:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_264)\n    tag_266:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_226:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_227:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_269\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_223\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":818:889   */\n      tag_270\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_224\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_271\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":988:1017   */\n      tag_272\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_226\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_274\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_227\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_229:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_231:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_232:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_280\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_231\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_233:\n        /* \"#utility.yul\":1983:2007   */\n      tag_282\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_232\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_283:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_234:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_285\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_233\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_235:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_236:\n        /* \"#utility.yul\":2339:2363   */\n      tag_288\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_235\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_289:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_237:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_291\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_236\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_294\n      tag_229\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2632:2751   */\n    tag_293:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_295\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_234\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_296\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_237\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_238:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_239:\n        /* \"#utility.yul\":3196:3217   */\n      tag_299\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_238\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_301\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_239\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_240:\n        /* \"#utility.yul\":3533:3557   */\n      tag_303\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_235\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_305\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_240\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_308\n      tag_229\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3908:4027   */\n    tag_307:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_309\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_234\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_310\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_234\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_311\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_237\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_241:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_242:\n        /* \"#utility.yul\":4598:4620   */\n      tag_314\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_241\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_316\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_242\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_53:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_319\n      tag_229\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4929:5048   */\n    tag_318:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_320\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_234\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_243:\n        /* \"#utility.yul\":5275:5299   */\n      tag_322\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_232\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_59:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_324\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_243\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_78:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_327\n      tag_229\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5633:5752   */\n    tag_326:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_328\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_234\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_329\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_234\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_244:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_86:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_332:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_334\n      tag_244\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":6436:6520   */\n    tag_333:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:7065   */\n    tag_104:\n        /* \"#utility.yul\":6701:6705   */\n      0x00\n        /* \"#utility.yul\":6739:6741   */\n      0x60\n        /* \"#utility.yul\":6728:6737   */\n      dup3\n        /* \"#utility.yul\":6724:6742   */\n      add\n        /* \"#utility.yul\":6716:6742   */\n      swap1\n      pop\n        /* \"#utility.yul\":6788:6797   */\n      dup2\n        /* \"#utility.yul\":6782:6786   */\n      dup2\n        /* \"#utility.yul\":6778:6798   */\n      sub\n        /* \"#utility.yul\":6774:6775   */\n      0x00\n        /* \"#utility.yul\":6763:6772   */\n      dup4\n        /* \"#utility.yul\":6759:6776   */\n      add\n        /* \"#utility.yul\":6752:6799   */\n      mstore\n        /* \"#utility.yul\":6816:6894   */\n      tag_336\n        /* \"#utility.yul\":6889:6893   */\n      dup2\n        /* \"#utility.yul\":6880:6886   */\n      dup7\n        /* \"#utility.yul\":6816:6894   */\n      tag_227\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6808:6894   */\n      swap1\n      pop\n        /* \"#utility.yul\":6904:6976   */\n      tag_337\n        /* \"#utility.yul\":6972:6974   */\n      0x20\n        /* \"#utility.yul\":6961:6970   */\n      dup4\n        /* \"#utility.yul\":6957:6975   */\n      add\n        /* \"#utility.yul\":6948:6954   */\n      dup6\n        /* \"#utility.yul\":6904:6976   */\n      tag_243\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6986:7058   */\n      tag_338\n        /* \"#utility.yul\":7054:7056   */\n      0x40\n        /* \"#utility.yul\":7043:7052   */\n      dup4\n        /* \"#utility.yul\":7039:7057   */\n      add\n        /* \"#utility.yul\":7030:7036   */\n      dup5\n        /* \"#utility.yul\":6986:7058   */\n      tag_243\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6532:7065   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7071:7251   */\n    tag_245:\n        /* \"#utility.yul\":7119:7196   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7116:7117   */\n      0x00\n        /* \"#utility.yul\":7109:7197   */\n      mstore\n        /* \"#utility.yul\":7216:7220   */\n      0x11\n        /* \"#utility.yul\":7213:7214   */\n      0x04\n        /* \"#utility.yul\":7206:7221   */\n      mstore\n        /* \"#utility.yul\":7240:7244   */\n      0x24\n        /* \"#utility.yul\":7237:7238   */\n      0x00\n        /* \"#utility.yul\":7230:7245   */\n      revert\n        /* \"#utility.yul\":7257:7359   */\n    tag_246:\n        /* \"#utility.yul\":7299:7307   */\n      0x00\n        /* \"#utility.yul\":7346:7351   */\n      dup2\n        /* \"#utility.yul\":7343:7344   */\n      0x01\n        /* \"#utility.yul\":7339:7352   */\n      shr\n        /* \"#utility.yul\":7318:7352   */\n      swap1\n      pop\n        /* \"#utility.yul\":7257:7359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7365:8213   */\n    tag_247:\n        /* \"#utility.yul\":7426:7431   */\n      0x00\n        /* \"#utility.yul\":7433:7437   */\n      dup1\n        /* \"#utility.yul\":7457:7463   */\n      dup3\n        /* \"#utility.yul\":7448:7463   */\n      swap2\n      pop\n        /* \"#utility.yul\":7481:7486   */\n      dup4\n        /* \"#utility.yul\":7472:7486   */\n      swap1\n      pop\n        /* \"#utility.yul\":7495:8207   */\n    tag_342:\n        /* \"#utility.yul\":7516:7517   */\n      0x01\n        /* \"#utility.yul\":7506:7514   */\n      dup6\n        /* \"#utility.yul\":7503:7518   */\n      gt\n        /* \"#utility.yul\":7495:8207   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":7611:7615   */\n      dup1\n        /* \"#utility.yul\":7606:7609   */\n      dup7\n        /* \"#utility.yul\":7602:7616   */\n      div\n        /* \"#utility.yul\":7596:7600   */\n      dup2\n        /* \"#utility.yul\":7593:7617   */\n      gt\n        /* \"#utility.yul\":7590:7640   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":7620:7638   */\n      tag_346\n      tag_245\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7590:7640   */\n    tag_345:\n        /* \"#utility.yul\":7670:7671   */\n      0x01\n        /* \"#utility.yul\":7660:7668   */\n      dup6\n        /* \"#utility.yul\":7656:7672   */\n      and\n        /* \"#utility.yul\":7653:8104   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":8085:8089   */\n      dup1\n        /* \"#utility.yul\":8078:8083   */\n      dup3\n        /* \"#utility.yul\":8074:8090   */\n      mul\n        /* \"#utility.yul\":8065:8090   */\n      swap2\n      pop\n        /* \"#utility.yul\":7653:8104   */\n    tag_347:\n        /* \"#utility.yul\":8135:8139   */\n      dup1\n        /* \"#utility.yul\":8129:8133   */\n      dup2\n        /* \"#utility.yul\":8125:8140   */\n      mul\n        /* \"#utility.yul\":8117:8140   */\n      swap1\n      pop\n        /* \"#utility.yul\":8165:8197   */\n      tag_348\n        /* \"#utility.yul\":8188:8196   */\n      dup6\n        /* \"#utility.yul\":8165:8197   */\n      tag_246\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8153:8197   */\n      swap5\n      pop\n        /* \"#utility.yul\":7495:8207   */\n      jump(tag_342)\n    tag_344:\n        /* \"#utility.yul\":7365:8213   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8219:9292   */\n    tag_248:\n        /* \"#utility.yul\":8273:8278   */\n      0x00\n        /* \"#utility.yul\":8464:8472   */\n      dup3\n        /* \"#utility.yul\":8454:8494   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":8485:8486   */\n      0x01\n        /* \"#utility.yul\":8476:8486   */\n      swap1\n      pop\n        /* \"#utility.yul\":8487:8492   */\n      jump(tag_349)\n        /* \"#utility.yul\":8454:8494   */\n    tag_350:\n        /* \"#utility.yul\":8513:8517   */\n      dup2\n        /* \"#utility.yul\":8503:8539   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8530:8531   */\n      0x00\n        /* \"#utility.yul\":8521:8531   */\n      swap1\n      pop\n        /* \"#utility.yul\":8532:8537   */\n      jump(tag_349)\n        /* \"#utility.yul\":8503:8539   */\n    tag_351:\n        /* \"#utility.yul\":8599:8603   */\n      dup2\n        /* \"#utility.yul\":8647:8648   */\n      0x01\n        /* \"#utility.yul\":8642:8669   */\n      dup2\n      eq\n      tag_353\n      jumpi\n        /* \"#utility.yul\":8683:8684   */\n      0x02\n        /* \"#utility.yul\":8678:8869   */\n      dup2\n      eq\n      tag_354\n      jumpi\n        /* \"#utility.yul\":8592:8869   */\n      jump(tag_352)\n        /* \"#utility.yul\":8642:8669   */\n    tag_353:\n        /* \"#utility.yul\":8660:8661   */\n      0x01\n        /* \"#utility.yul\":8651:8661   */\n      swap2\n      pop\n        /* \"#utility.yul\":8662:8667   */\n      pop\n      jump(tag_349)\n        /* \"#utility.yul\":8678:8869   */\n    tag_354:\n        /* \"#utility.yul\":8723:8726   */\n      0xff\n        /* \"#utility.yul\":8713:8721   */\n      dup5\n        /* \"#utility.yul\":8710:8727   */\n      gt\n        /* \"#utility.yul\":8707:8750   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":8730:8748   */\n      tag_356\n      tag_245\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8707:8750   */\n    tag_355:\n        /* \"#utility.yul\":8779:8787   */\n      dup4\n        /* \"#utility.yul\":8776:8777   */\n      0x02\n        /* \"#utility.yul\":8772:8788   */\n      exp\n        /* \"#utility.yul\":8763:8788   */\n      swap2\n      pop\n        /* \"#utility.yul\":8814:8817   */\n      dup5\n        /* \"#utility.yul\":8807:8812   */\n      dup3\n        /* \"#utility.yul\":8804:8818   */\n      gt\n        /* \"#utility.yul\":8801:8841   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":8821:8839   */\n      tag_358\n      tag_245\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":8801:8841   */\n    tag_357:\n        /* \"#utility.yul\":8854:8859   */\n      pop\n      jump(tag_349)\n        /* \"#utility.yul\":8592:8869   */\n    tag_352:\n      pop\n        /* \"#utility.yul\":8978:8980   */\n      0x20\n        /* \"#utility.yul\":8968:8976   */\n      dup4\n        /* \"#utility.yul\":8965:8981   */\n      lt\n        /* \"#utility.yul\":8959:8962   */\n      0x0133\n        /* \"#utility.yul\":8953:8957   */\n      dup4\n        /* \"#utility.yul\":8950:8963   */\n      lt\n        /* \"#utility.yul\":8946:8982   */\n      and\n        /* \"#utility.yul\":8928:8930   */\n      0x4e\n        /* \"#utility.yul\":8918:8926   */\n      dup5\n        /* \"#utility.yul\":8915:8931   */\n      lt\n        /* \"#utility.yul\":8910:8912   */\n      0x0b\n        /* \"#utility.yul\":8904:8908   */\n      dup5\n        /* \"#utility.yul\":8901:8913   */\n      lt\n        /* \"#utility.yul\":8897:8932   */\n      and\n        /* \"#utility.yul\":8881:8992   */\n      or\n        /* \"#utility.yul\":8878:9124   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":9034:9042   */\n      dup3\n        /* \"#utility.yul\":9028:9032   */\n      dup3\n        /* \"#utility.yul\":9024:9043   */\n      exp\n        /* \"#utility.yul\":9015:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9069:9072   */\n      dup4\n        /* \"#utility.yul\":9062:9067   */\n      dup2\n        /* \"#utility.yul\":9059:9073   */\n      gt\n        /* \"#utility.yul\":9056:9096   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":9076:9094   */\n      tag_361\n      tag_245\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9056:9096   */\n    tag_360:\n        /* \"#utility.yul\":9109:9114   */\n      jump(tag_349)\n        /* \"#utility.yul\":8878:9124   */\n    tag_359:\n        /* \"#utility.yul\":9149:9191   */\n      tag_362\n        /* \"#utility.yul\":9187:9190   */\n      dup5\n        /* \"#utility.yul\":9177:9185   */\n      dup5\n        /* \"#utility.yul\":9171:9175   */\n      dup5\n        /* \"#utility.yul\":9168:9169   */\n      0x01\n        /* \"#utility.yul\":9149:9191   */\n      tag_247\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9134:9191   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":9223:9227   */\n      dup2\n        /* \"#utility.yul\":9218:9221   */\n      dup5\n        /* \"#utility.yul\":9214:9228   */\n      div\n        /* \"#utility.yul\":9207:9212   */\n      dup2\n        /* \"#utility.yul\":9204:9229   */\n      gt\n        /* \"#utility.yul\":9201:9252   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":9232:9250   */\n      tag_364\n      tag_245\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9201:9252   */\n    tag_363:\n        /* \"#utility.yul\":9281:9285   */\n      dup2\n        /* \"#utility.yul\":9274:9279   */\n      dup2\n        /* \"#utility.yul\":9270:9286   */\n      mul\n        /* \"#utility.yul\":9261:9286   */\n      swap1\n      pop\n        /* \"#utility.yul\":8219:9292   */\n    tag_349:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9298:9583   */\n    tag_106:\n        /* \"#utility.yul\":9358:9363   */\n      0x00\n        /* \"#utility.yul\":9382:9405   */\n      tag_366\n        /* \"#utility.yul\":9400:9404   */\n      dup3\n        /* \"#utility.yul\":9382:9405   */\n      tag_235\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9374:9405   */\n      swap2\n      pop\n        /* \"#utility.yul\":9426:9453   */\n      tag_367\n        /* \"#utility.yul\":9444:9452   */\n      dup4\n        /* \"#utility.yul\":9426:9453   */\n      tag_235\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":9414:9453   */\n      swap3\n      pop\n        /* \"#utility.yul\":9472:9576   */\n      tag_368\n        /* \"#utility.yul\":9509:9575   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9499:9507   */\n      dup5\n        /* \"#utility.yul\":9493:9497   */\n      dup5\n        /* \"#utility.yul\":9472:9576   */\n      tag_248\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9463:9576   */\n      swap1\n      pop\n        /* \"#utility.yul\":9298:9583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9589:9999   */\n    tag_108:\n        /* \"#utility.yul\":9629:9636   */\n      0x00\n        /* \"#utility.yul\":9652:9672   */\n      tag_370\n        /* \"#utility.yul\":9670:9671   */\n      dup3\n        /* \"#utility.yul\":9652:9672   */\n      tag_235\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9647:9672   */\n      swap2\n      pop\n        /* \"#utility.yul\":9686:9706   */\n      tag_371\n        /* \"#utility.yul\":9704:9705   */\n      dup4\n        /* \"#utility.yul\":9686:9706   */\n      tag_235\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9681:9706   */\n      swap3\n      pop\n        /* \"#utility.yul\":9741:9742   */\n      dup3\n        /* \"#utility.yul\":9738:9739   */\n      dup3\n        /* \"#utility.yul\":9734:9743   */\n      mul\n        /* \"#utility.yul\":9763:9793   */\n      tag_372\n        /* \"#utility.yul\":9781:9792   */\n      dup2\n        /* \"#utility.yul\":9763:9793   */\n      tag_235\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9752:9793   */\n      swap2\n      pop\n        /* \"#utility.yul\":9942:9943   */\n      dup3\n        /* \"#utility.yul\":9933:9940   */\n      dup3\n        /* \"#utility.yul\":9929:9944   */\n      div\n        /* \"#utility.yul\":9926:9927   */\n      dup5\n        /* \"#utility.yul\":9923:9945   */\n      eq\n        /* \"#utility.yul\":9903:9904   */\n      dup4\n        /* \"#utility.yul\":9896:9905   */\n      iszero\n        /* \"#utility.yul\":9876:9959   */\n      or\n        /* \"#utility.yul\":9853:9992   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9972:9990   */\n      tag_374\n      tag_245\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9853:9992   */\n    tag_373:\n        /* \"#utility.yul\":9637:9999   */\n      pop\n        /* \"#utility.yul\":9589:9999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10005:10225   */\n    tag_249:\n        /* \"#utility.yul\":10145:10179   */\n      0x4e6f207472616e73616374696f6e732068617665206f63637572726564207965\n        /* \"#utility.yul\":10141:10142   */\n      0x00\n        /* \"#utility.yul\":10133:10139   */\n      dup3\n        /* \"#utility.yul\":10129:10143   */\n      add\n        /* \"#utility.yul\":10122:10180   */\n      mstore\n        /* \"#utility.yul\":10214:10217   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10209:10211   */\n      0x20\n        /* \"#utility.yul\":10201:10207   */\n      dup3\n        /* \"#utility.yul\":10197:10212   */\n      add\n        /* \"#utility.yul\":10190:10218   */\n      mstore\n        /* \"#utility.yul\":10005:10225   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10231:10597   */\n    tag_250:\n        /* \"#utility.yul\":10373:10376   */\n      0x00\n        /* \"#utility.yul\":10394:10461   */\n      tag_377\n        /* \"#utility.yul\":10458:10460   */\n      0x21\n        /* \"#utility.yul\":10453:10456   */\n      dup4\n        /* \"#utility.yul\":10394:10461   */\n      tag_224\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10387:10461   */\n      swap2\n      pop\n        /* \"#utility.yul\":10470:10563   */\n      tag_378\n        /* \"#utility.yul\":10559:10562   */\n      dup3\n        /* \"#utility.yul\":10470:10563   */\n      tag_249\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10588:10590   */\n      0x40\n        /* \"#utility.yul\":10583:10586   */\n      dup3\n        /* \"#utility.yul\":10579:10591   */\n      add\n        /* \"#utility.yul\":10572:10591   */\n      swap1\n      pop\n        /* \"#utility.yul\":10231:10597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10603:11022   */\n    tag_130:\n        /* \"#utility.yul\":10769:10773   */\n      0x00\n        /* \"#utility.yul\":10807:10809   */\n      0x20\n        /* \"#utility.yul\":10796:10805   */\n      dup3\n        /* \"#utility.yul\":10792:10810   */\n      add\n        /* \"#utility.yul\":10784:10810   */\n      swap1\n      pop\n        /* \"#utility.yul\":10856:10865   */\n      dup2\n        /* \"#utility.yul\":10850:10854   */\n      dup2\n        /* \"#utility.yul\":10846:10866   */\n      sub\n        /* \"#utility.yul\":10842:10843   */\n      0x00\n        /* \"#utility.yul\":10831:10840   */\n      dup4\n        /* \"#utility.yul\":10827:10844   */\n      add\n        /* \"#utility.yul\":10820:10867   */\n      mstore\n        /* \"#utility.yul\":10884:11015   */\n      tag_380\n        /* \"#utility.yul\":11010:11014   */\n      dup2\n        /* \"#utility.yul\":10884:11015   */\n      tag_250\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10876:11015   */\n      swap1\n      pop\n        /* \"#utility.yul\":10603:11022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11028:11261   */\n    tag_149:\n        /* \"#utility.yul\":11067:11070   */\n      0x00\n        /* \"#utility.yul\":11090:11114   */\n      tag_382\n        /* \"#utility.yul\":11108:11113   */\n      dup3\n        /* \"#utility.yul\":11090:11114   */\n      tag_235\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11081:11114   */\n      swap2\n      pop\n        /* \"#utility.yul\":11136:11202   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11129:11134   */\n      dup3\n        /* \"#utility.yul\":11126:11203   */\n      sub\n        /* \"#utility.yul\":11123:11226   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":11206:11224   */\n      tag_384\n      tag_245\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11123:11226   */\n    tag_383:\n        /* \"#utility.yul\":11253:11254   */\n      0x01\n        /* \"#utility.yul\":11246:11251   */\n      dup3\n        /* \"#utility.yul\":11242:11255   */\n      add\n        /* \"#utility.yul\":11235:11255   */\n      swap1\n      pop\n        /* \"#utility.yul\":11028:11261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11267:11447   */\n    tag_251:\n        /* \"#utility.yul\":11315:11392   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11312:11313   */\n      0x00\n        /* \"#utility.yul\":11305:11393   */\n      mstore\n        /* \"#utility.yul\":11412:11416   */\n      0x12\n        /* \"#utility.yul\":11409:11410   */\n      0x04\n        /* \"#utility.yul\":11402:11417   */\n      mstore\n        /* \"#utility.yul\":11436:11440   */\n      0x24\n        /* \"#utility.yul\":11433:11434   */\n      0x00\n        /* \"#utility.yul\":11426:11441   */\n      revert\n        /* \"#utility.yul\":11453:11638   */\n    tag_151:\n        /* \"#utility.yul\":11493:11494   */\n      0x00\n        /* \"#utility.yul\":11510:11530   */\n      tag_387\n        /* \"#utility.yul\":11528:11529   */\n      dup3\n        /* \"#utility.yul\":11510:11530   */\n      tag_235\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11505:11530   */\n      swap2\n      pop\n        /* \"#utility.yul\":11544:11564   */\n      tag_388\n        /* \"#utility.yul\":11562:11563   */\n      dup4\n        /* \"#utility.yul\":11544:11564   */\n      tag_235\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11539:11564   */\n      swap3\n      pop\n        /* \"#utility.yul\":11583:11584   */\n      dup3\n        /* \"#utility.yul\":11573:11608   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":11588:11606   */\n      tag_390\n      tag_251\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11573:11608   */\n    tag_389:\n        /* \"#utility.yul\":11630:11631   */\n      dup3\n        /* \"#utility.yul\":11627:11628   */\n      dup3\n        /* \"#utility.yul\":11623:11632   */\n      div\n        /* \"#utility.yul\":11618:11632   */\n      swap1\n      pop\n        /* \"#utility.yul\":11453:11638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11644:11824   */\n    tag_154:\n        /* \"#utility.yul\":11692:11769   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11689:11690   */\n      0x00\n        /* \"#utility.yul\":11682:11770   */\n      mstore\n        /* \"#utility.yul\":11789:11793   */\n      0x41\n        /* \"#utility.yul\":11786:11787   */\n      0x04\n        /* \"#utility.yul\":11779:11794   */\n      mstore\n        /* \"#utility.yul\":11813:11817   */\n      0x24\n        /* \"#utility.yul\":11810:11811   */\n      0x00\n        /* \"#utility.yul\":11803:11818   */\n      revert\n        /* \"#utility.yul\":11830:12024   */\n    tag_159:\n        /* \"#utility.yul\":11870:11874   */\n      0x00\n        /* \"#utility.yul\":11890:11910   */\n      tag_393\n        /* \"#utility.yul\":11908:11909   */\n      dup3\n        /* \"#utility.yul\":11890:11910   */\n      tag_235\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11885:11910   */\n      swap2\n      pop\n        /* \"#utility.yul\":11924:11944   */\n      tag_394\n        /* \"#utility.yul\":11942:11943   */\n      dup4\n        /* \"#utility.yul\":11924:11944   */\n      tag_235\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11919:11944   */\n      swap3\n      pop\n        /* \"#utility.yul\":11968:11969   */\n      dup3\n        /* \"#utility.yul\":11965:11966   */\n      dup3\n        /* \"#utility.yul\":11961:11970   */\n      sub\n        /* \"#utility.yul\":11953:11970   */\n      swap1\n      pop\n        /* \"#utility.yul\":11992:11993   */\n      dup2\n        /* \"#utility.yul\":11986:11990   */\n      dup2\n        /* \"#utility.yul\":11983:11994   */\n      gt\n        /* \"#utility.yul\":11980:12017   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":11997:12015   */\n      tag_396\n      tag_245\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":11980:12017   */\n    tag_395:\n        /* \"#utility.yul\":11830:12024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12030:12206   */\n    tag_161:\n        /* \"#utility.yul\":12062:12063   */\n      0x00\n        /* \"#utility.yul\":12079:12099   */\n      tag_398\n        /* \"#utility.yul\":12097:12098   */\n      dup3\n        /* \"#utility.yul\":12079:12099   */\n      tag_235\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":12074:12099   */\n      swap2\n      pop\n        /* \"#utility.yul\":12113:12133   */\n      tag_399\n        /* \"#utility.yul\":12131:12132   */\n      dup4\n        /* \"#utility.yul\":12113:12133   */\n      tag_235\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12108:12133   */\n      swap3\n      pop\n        /* \"#utility.yul\":12152:12153   */\n      dup3\n        /* \"#utility.yul\":12142:12177   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":12157:12175   */\n      tag_401\n      tag_251\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12142:12177   */\n    tag_400:\n        /* \"#utility.yul\":12198:12199   */\n      dup3\n        /* \"#utility.yul\":12195:12196   */\n      dup3\n        /* \"#utility.yul\":12191:12200   */\n      mod\n        /* \"#utility.yul\":12186:12200   */\n      swap1\n      pop\n        /* \"#utility.yul\":12030:12206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12403   */\n    tag_163:\n        /* \"#utility.yul\":12252:12255   */\n      0x00\n        /* \"#utility.yul\":12271:12291   */\n      tag_403\n        /* \"#utility.yul\":12289:12290   */\n      dup3\n        /* \"#utility.yul\":12271:12291   */\n      tag_235\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12266:12291   */\n      swap2\n      pop\n        /* \"#utility.yul\":12305:12325   */\n      tag_404\n        /* \"#utility.yul\":12323:12324   */\n      dup4\n        /* \"#utility.yul\":12305:12325   */\n      tag_235\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12300:12325   */\n      swap3\n      pop\n        /* \"#utility.yul\":12348:12349   */\n      dup3\n        /* \"#utility.yul\":12345:12346   */\n      dup3\n        /* \"#utility.yul\":12341:12350   */\n      add\n        /* \"#utility.yul\":12334:12350   */\n      swap1\n      pop\n        /* \"#utility.yul\":12369:12372   */\n      dup1\n        /* \"#utility.yul\":12366:12367   */\n      dup3\n        /* \"#utility.yul\":12363:12373   */\n      gt\n        /* \"#utility.yul\":12360:12396   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":12376:12394   */\n      tag_406\n      tag_245\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12360:12396   */\n    tag_405:\n        /* \"#utility.yul\":12212:12403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12409:12589   */\n    tag_166:\n        /* \"#utility.yul\":12457:12534   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12454:12455   */\n      0x00\n        /* \"#utility.yul\":12447:12535   */\n      mstore\n        /* \"#utility.yul\":12554:12558   */\n      0x32\n        /* \"#utility.yul\":12551:12552   */\n      0x04\n        /* \"#utility.yul\":12544:12559   */\n      mstore\n        /* \"#utility.yul\":12578:12582   */\n      0x24\n        /* \"#utility.yul\":12575:12576   */\n      0x00\n        /* \"#utility.yul\":12568:12583   */\n      revert\n        /* \"#utility.yul\":12595:12743   */\n    tag_252:\n        /* \"#utility.yul\":12697:12708   */\n      0x00\n        /* \"#utility.yul\":12734:12737   */\n      dup2\n        /* \"#utility.yul\":12719:12737   */\n      swap1\n      pop\n        /* \"#utility.yul\":12595:12743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:13139   */\n    tag_253:\n        /* \"#utility.yul\":12855:12858   */\n      0x00\n        /* \"#utility.yul\":12883:12922   */\n      tag_410\n        /* \"#utility.yul\":12916:12921   */\n      dup3\n        /* \"#utility.yul\":12883:12922   */\n      tag_223\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12938:13027   */\n      tag_411\n        /* \"#utility.yul\":13020:13026   */\n      dup2\n        /* \"#utility.yul\":13015:13018   */\n      dup6\n        /* \"#utility.yul\":12938:13027   */\n      tag_252\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12931:13027   */\n      swap4\n      pop\n        /* \"#utility.yul\":13036:13101   */\n      tag_412\n        /* \"#utility.yul\":13094:13100   */\n      dup2\n        /* \"#utility.yul\":13089:13092   */\n      dup6\n        /* \"#utility.yul\":13082:13086   */\n      0x20\n        /* \"#utility.yul\":13075:13080   */\n      dup7\n        /* \"#utility.yul\":13071:13087   */\n      add\n        /* \"#utility.yul\":13036:13101   */\n      tag_225\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13126:13132   */\n      dup1\n        /* \"#utility.yul\":13121:13124   */\n      dup5\n        /* \"#utility.yul\":13117:13133   */\n      add\n        /* \"#utility.yul\":13110:13133   */\n      swap2\n      pop\n        /* \"#utility.yul\":12859:13139   */\n      pop\n        /* \"#utility.yul\":12749:13139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13145:13296   */\n    tag_254:\n        /* \"#utility.yul\":13285:13288   */\n      0x2d00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13281:13282   */\n      0x00\n        /* \"#utility.yul\":13273:13279   */\n      dup3\n        /* \"#utility.yul\":13269:13283   */\n      add\n        /* \"#utility.yul\":13262:13289   */\n      mstore\n        /* \"#utility.yul\":13145:13296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13302:13702   */\n    tag_255:\n        /* \"#utility.yul\":13462:13465   */\n      0x00\n        /* \"#utility.yul\":13483:13567   */\n      tag_415\n        /* \"#utility.yul\":13565:13566   */\n      0x01\n        /* \"#utility.yul\":13560:13563   */\n      dup4\n        /* \"#utility.yul\":13483:13567   */\n      tag_252\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13476:13567   */\n      swap2\n      pop\n        /* \"#utility.yul\":13576:13669   */\n      tag_416\n        /* \"#utility.yul\":13665:13668   */\n      dup3\n        /* \"#utility.yul\":13576:13669   */\n      tag_254\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13694:13695   */\n      0x01\n        /* \"#utility.yul\":13689:13692   */\n      dup3\n        /* \"#utility.yul\":13685:13696   */\n      add\n        /* \"#utility.yul\":13678:13696   */\n      swap1\n      pop\n        /* \"#utility.yul\":13302:13702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13708:13859   */\n    tag_256:\n        /* \"#utility.yul\":13848:13851   */\n      0x2000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13844:13845   */\n      0x00\n        /* \"#utility.yul\":13836:13842   */\n      dup3\n        /* \"#utility.yul\":13832:13846   */\n      add\n        /* \"#utility.yul\":13825:13852   */\n      mstore\n        /* \"#utility.yul\":13708:13859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13865:14265   */\n    tag_257:\n        /* \"#utility.yul\":14025:14028   */\n      0x00\n        /* \"#utility.yul\":14046:14130   */\n      tag_419\n        /* \"#utility.yul\":14128:14129   */\n      0x01\n        /* \"#utility.yul\":14123:14126   */\n      dup4\n        /* \"#utility.yul\":14046:14130   */\n      tag_252\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14039:14130   */\n      swap2\n      pop\n        /* \"#utility.yul\":14139:14232   */\n      tag_420\n        /* \"#utility.yul\":14228:14231   */\n      dup3\n        /* \"#utility.yul\":14139:14232   */\n      tag_256\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":14257:14258   */\n      0x01\n        /* \"#utility.yul\":14252:14255   */\n      dup3\n        /* \"#utility.yul\":14248:14259   */\n      add\n        /* \"#utility.yul\":14241:14259   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:14265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14271:14422   */\n    tag_258:\n        /* \"#utility.yul\":14411:14414   */\n      0x3a00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14407:14408   */\n      0x00\n        /* \"#utility.yul\":14399:14405   */\n      dup3\n        /* \"#utility.yul\":14395:14409   */\n      add\n        /* \"#utility.yul\":14388:14415   */\n      mstore\n        /* \"#utility.yul\":14271:14422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14428:14828   */\n    tag_259:\n        /* \"#utility.yul\":14588:14591   */\n      0x00\n        /* \"#utility.yul\":14609:14693   */\n      tag_423\n        /* \"#utility.yul\":14691:14692   */\n      0x01\n        /* \"#utility.yul\":14686:14689   */\n      dup4\n        /* \"#utility.yul\":14609:14693   */\n      tag_252\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14602:14693   */\n      swap2\n      pop\n        /* \"#utility.yul\":14702:14795   */\n      tag_424\n        /* \"#utility.yul\":14791:14794   */\n      dup3\n        /* \"#utility.yul\":14702:14795   */\n      tag_258\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14820:14821   */\n      0x01\n        /* \"#utility.yul\":14815:14818   */\n      dup3\n        /* \"#utility.yul\":14811:14822   */\n      add\n        /* \"#utility.yul\":14804:14822   */\n      swap1\n      pop\n        /* \"#utility.yul\":14428:14828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14834:17239   */\n    tag_192:\n        /* \"#utility.yul\":15711:15714   */\n      0x00\n        /* \"#utility.yul\":15733:15828   */\n      tag_426\n        /* \"#utility.yul\":15824:15827   */\n      dup3\n        /* \"#utility.yul\":15815:15821   */\n      dup10\n        /* \"#utility.yul\":15733:15828   */\n      tag_253\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15726:15828   */\n      swap2\n      pop\n        /* \"#utility.yul\":15845:15993   */\n      tag_427\n        /* \"#utility.yul\":15989:15992   */\n      dup3\n        /* \"#utility.yul\":15845:15993   */\n      tag_255\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15838:15993   */\n      swap2\n      pop\n        /* \"#utility.yul\":16010:16105   */\n      tag_428\n        /* \"#utility.yul\":16101:16104   */\n      dup3\n        /* \"#utility.yul\":16092:16098   */\n      dup9\n        /* \"#utility.yul\":16010:16105   */\n      tag_253\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":16003:16105   */\n      swap2\n      pop\n        /* \"#utility.yul\":16122:16270   */\n      tag_429\n        /* \"#utility.yul\":16266:16269   */\n      dup3\n        /* \"#utility.yul\":16122:16270   */\n      tag_255\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":16115:16270   */\n      swap2\n      pop\n        /* \"#utility.yul\":16287:16382   */\n      tag_430\n        /* \"#utility.yul\":16378:16381   */\n      dup3\n        /* \"#utility.yul\":16369:16375   */\n      dup8\n        /* \"#utility.yul\":16287:16382   */\n      tag_253\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":16280:16382   */\n      swap2\n      pop\n        /* \"#utility.yul\":16399:16547   */\n      tag_431\n        /* \"#utility.yul\":16543:16546   */\n      dup3\n        /* \"#utility.yul\":16399:16547   */\n      tag_257\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":16392:16547   */\n      swap2\n      pop\n        /* \"#utility.yul\":16564:16659   */\n      tag_432\n        /* \"#utility.yul\":16655:16658   */\n      dup3\n        /* \"#utility.yul\":16646:16652   */\n      dup7\n        /* \"#utility.yul\":16564:16659   */\n      tag_253\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":16557:16659   */\n      swap2\n      pop\n        /* \"#utility.yul\":16676:16824   */\n      tag_433\n        /* \"#utility.yul\":16820:16823   */\n      dup3\n        /* \"#utility.yul\":16676:16824   */\n      tag_259\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":16669:16824   */\n      swap2\n      pop\n        /* \"#utility.yul\":16841:16936   */\n      tag_434\n        /* \"#utility.yul\":16932:16935   */\n      dup3\n        /* \"#utility.yul\":16923:16929   */\n      dup6\n        /* \"#utility.yul\":16841:16936   */\n      tag_253\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":16834:16936   */\n      swap2\n      pop\n        /* \"#utility.yul\":16953:17101   */\n      tag_435\n        /* \"#utility.yul\":17097:17100   */\n      dup3\n        /* \"#utility.yul\":16953:17101   */\n      tag_259\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16946:17101   */\n      swap2\n      pop\n        /* \"#utility.yul\":17118:17213   */\n      tag_436\n        /* \"#utility.yul\":17209:17212   */\n      dup3\n        /* \"#utility.yul\":17200:17206   */\n      dup5\n        /* \"#utility.yul\":17118:17213   */\n      tag_253\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":17111:17213   */\n      swap2\n      pop\n        /* \"#utility.yul\":17230:17233   */\n      dup2\n        /* \"#utility.yul\":17223:17233   */\n      swap1\n      pop\n        /* \"#utility.yul\":14834:17239   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17245:17687   */\n    tag_205:\n        /* \"#utility.yul\":17394:17398   */\n      0x00\n        /* \"#utility.yul\":17432:17434   */\n      0x60\n        /* \"#utility.yul\":17421:17430   */\n      dup3\n        /* \"#utility.yul\":17417:17435   */\n      add\n        /* \"#utility.yul\":17409:17435   */\n      swap1\n      pop\n        /* \"#utility.yul\":17445:17516   */\n      tag_438\n        /* \"#utility.yul\":17513:17514   */\n      0x00\n        /* \"#utility.yul\":17502:17511   */\n      dup4\n        /* \"#utility.yul\":17498:17515   */\n      add\n        /* \"#utility.yul\":17489:17495   */\n      dup7\n        /* \"#utility.yul\":17445:17516   */\n      tag_243\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":17526:17598   */\n      tag_439\n        /* \"#utility.yul\":17594:17596   */\n      0x20\n        /* \"#utility.yul\":17583:17592   */\n      dup4\n        /* \"#utility.yul\":17579:17597   */\n      add\n        /* \"#utility.yul\":17570:17576   */\n      dup6\n        /* \"#utility.yul\":17526:17598   */\n      tag_240\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17608:17680   */\n      tag_440\n        /* \"#utility.yul\":17676:17678   */\n      0x40\n        /* \"#utility.yul\":17665:17674   */\n      dup4\n        /* \"#utility.yul\":17661:17679   */\n      add\n        /* \"#utility.yul\":17652:17658   */\n      dup5\n        /* \"#utility.yul\":17608:17680   */\n      tag_240\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":17245:17687   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220019850ab23b908c5e02652c920fe65e506d4895d8d94382bab70b7fa1ae00b6664736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 220,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 358,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9748:7",
										"nodeType": "YulBlock",
										"src": "0:9748:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5262:152:7",
													"nodeType": "YulBlock",
													"src": "5262:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:7"
																},
																"nativeSrc": "5272:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:7"
															},
															"nativeSrc": "5272:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:7"
																},
																"nativeSrc": "5369:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:7"
															},
															"nativeSrc": "5369:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:7"
																},
																"nativeSrc": "5393:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:7"
															},
															"nativeSrc": "5393:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:7"
											},
											{
												"body": {
													"nativeSrc": "5471:51:7",
													"nodeType": "YulBlock",
													"src": "5471:51:7",
													"statements": [
														{
															"nativeSrc": "5481:34:7",
															"nodeType": "YulAssignment",
															"src": "5481:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:7"
																},
																"nativeSrc": "5502:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:7",
														"nodeType": "YulTypedName",
														"src": "5452:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:7",
														"nodeType": "YulTypedName",
														"src": "5462:8:7",
														"type": ""
													}
												],
												"src": "5420:102:7"
											},
											{
												"body": {
													"nativeSrc": "5601:775:7",
													"nodeType": "YulBlock",
													"src": "5601:775:7",
													"statements": [
														{
															"nativeSrc": "5611:15:7",
															"nodeType": "YulAssignment",
															"src": "5611:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:7",
																"nodeType": "YulIdentifier",
																"src": "5620:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:7"
																}
															]
														},
														{
															"nativeSrc": "5635:14:7",
															"nodeType": "YulAssignment",
															"src": "5635:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:7",
																"nodeType": "YulIdentifier",
																"src": "5644:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:7",
																"nodeType": "YulBlock",
																"src": "5693:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:7",
																			"nodeType": "YulBlock",
																			"src": "5781:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:7"
																						},
																						"nativeSrc": "5783:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:7"
																					},
																					"nativeSrc": "5783:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:7"
																					},
																					"nativeSrc": "5765:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:7"
																			},
																			"nativeSrc": "5756:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:7"
																		},
																		"nativeSrc": "5753:50:7",
																		"nodeType": "YulIf",
																		"src": "5753:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:7",
																			"nodeType": "YulBlock",
																			"src": "5848:419:7",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:7",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:7"
																						},
																						"nativeSrc": "6237:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:7"
																			},
																			"nativeSrc": "5819:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:7"
																		},
																		"nativeSrc": "5816:451:7",
																		"nodeType": "YulIf",
																		"src": "5816:451:7"
																	},
																	{
																		"nativeSrc": "6280:23:7",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:7"
																			},
																			"nativeSrc": "6288:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:7",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:7"
																			},
																			"nativeSrc": "6328:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:7"
																},
																"nativeSrc": "5666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:7"
															},
															"nativeSrc": "5658:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:7",
																"nodeType": "YulBlock",
																"src": "5682:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:7",
																"nodeType": "YulBlock",
																"src": "5662:3:7",
																"statements": []
															},
															"src": "5658:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:7",
														"nodeType": "YulTypedName",
														"src": "5556:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:7",
														"nodeType": "YulTypedName",
														"src": "5564:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:7",
														"nodeType": "YulTypedName",
														"src": "5571:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:7",
														"nodeType": "YulTypedName",
														"src": "5581:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:7",
														"nodeType": "YulTypedName",
														"src": "5589:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:7",
														"nodeType": "YulTypedName",
														"src": "5596:4:7",
														"type": ""
													}
												],
												"src": "5528:848:7"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:7",
													"nodeType": "YulBlock",
													"src": "6442:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:7",
																"nodeType": "YulBlock",
																"src": "6637:20:7",
																"statements": [
																	{
																		"nativeSrc": "6639:10:7",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:7",
																		"nodeType": "YulLeave",
																		"src": "6650:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:7"
																},
																"nativeSrc": "6620:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:7"
															},
															"nativeSrc": "6617:40:7",
															"nodeType": "YulIf",
															"src": "6617:40:7"
														},
														{
															"body": {
																"nativeSrc": "6682:20:7",
																"nodeType": "YulBlock",
																"src": "6682:20:7",
																"statements": [
																	{
																		"nativeSrc": "6684:10:7",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:7",
																		"nodeType": "YulLeave",
																		"src": "6695:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:7"
																},
																"nativeSrc": "6669:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:7"
															},
															"nativeSrc": "6666:36:7",
															"nodeType": "YulIf",
															"src": "6666:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:7",
																		"nodeType": "YulBlock",
																		"src": "6812:20:7",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:7",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:7",
																				"nodeType": "YulLeave",
																				"src": "6825:5:7"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:7",
																	"nodeType": "YulCase",
																	"src": "6805:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:7",
																		"nodeType": "YulBlock",
																		"src": "6856:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:7",
																					"nodeType": "YulBlock",
																					"src": "6891:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:7"
																								},
																								"nativeSrc": "6893:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:7"
																							},
																							"nativeSrc": "6893:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:7",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:7"
																					},
																					"nativeSrc": "6873:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:7"
																				},
																				"nativeSrc": "6870:43:7",
																				"nodeType": "YulIf",
																				"src": "6870:43:7"
																			},
																			{
																				"nativeSrc": "6926:25:7",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:7",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:7"
																					},
																					"nativeSrc": "6935:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:7",
																					"nodeType": "YulBlock",
																					"src": "6982:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:7"
																								},
																								"nativeSrc": "6984:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:7"
																							},
																							"nativeSrc": "6984:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:7"
																					},
																					"nativeSrc": "6967:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:7"
																				},
																				"nativeSrc": "6964:40:7",
																				"nodeType": "YulIf",
																				"src": "6964:40:7"
																			},
																			{
																				"nativeSrc": "7017:5:7",
																				"nodeType": "YulLeave",
																				"src": "7017:5:7"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:7",
																	"nodeType": "YulCase",
																	"src": "6841:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:7",
																"nodeType": "YulIdentifier",
																"src": "6762:4:7"
															},
															"nativeSrc": "6755:277:7",
															"nodeType": "YulSwitch",
															"src": "6755:277:7"
														},
														{
															"body": {
																"nativeSrc": "7164:123:7",
																"nodeType": "YulBlock",
																"src": "7164:123:7",
																"statements": [
																	{
																		"nativeSrc": "7178:28:7",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:7"
																			},
																			"nativeSrc": "7187:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:7",
																			"nodeType": "YulBlock",
																			"src": "7237:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:7"
																						},
																						"nativeSrc": "7239:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:7"
																					},
																					"nativeSrc": "7239:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:7"
																			},
																			"nativeSrc": "7222:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:7"
																		},
																		"nativeSrc": "7219:40:7",
																		"nodeType": "YulIf",
																		"src": "7219:40:7"
																	},
																	{
																		"nativeSrc": "7272:5:7",
																		"nodeType": "YulLeave",
																		"src": "7272:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:7"
																				},
																				"nativeSrc": "7064:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:7"
																				},
																				"nativeSrc": "7078:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:7"
																		},
																		"nativeSrc": "7060:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:7",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:7"
																				},
																				"nativeSrc": "7113:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:7"
																				},
																				"nativeSrc": "7128:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:7"
																		},
																		"nativeSrc": "7109:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:7"
																},
																"nativeSrc": "7044:111:7",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:7"
															},
															"nativeSrc": "7041:246:7",
															"nodeType": "YulIf",
															"src": "7041:246:7"
														},
														{
															"nativeSrc": "7297:57:7",
															"nodeType": "YulAssignment",
															"src": "7297:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:7"
																},
																"nativeSrc": "7312:42:7",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:7",
																"nodeType": "YulBlock",
																"src": "7393:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:7"
																			},
																			"nativeSrc": "7395:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:7"
																		},
																		"nativeSrc": "7395:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:7"
																		},
																		"nativeSrc": "7377:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:7"
																},
																"nativeSrc": "7367:25:7",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:7"
															},
															"nativeSrc": "7364:51:7",
															"nodeType": "YulIf",
															"src": "7364:51:7"
														},
														{
															"nativeSrc": "7424:25:7",
															"nodeType": "YulAssignment",
															"src": "7424:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:7"
																},
																"nativeSrc": "7433:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:7",
														"nodeType": "YulTypedName",
														"src": "6412:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:7",
														"nodeType": "YulTypedName",
														"src": "6418:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:7",
														"nodeType": "YulTypedName",
														"src": "6428:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:7",
														"nodeType": "YulTypedName",
														"src": "6436:5:7",
														"type": ""
													}
												],
												"src": "6382:1073:7"
											},
											{
												"body": {
													"nativeSrc": "7527:219:7",
													"nodeType": "YulBlock",
													"src": "7527:219:7",
													"statements": [
														{
															"nativeSrc": "7537:31:7",
															"nodeType": "YulAssignment",
															"src": "7537:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7563:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7563:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7545:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7545:17:7"
																},
																"nativeSrc": "7545:23:7",
																"nodeType": "YulFunctionCall",
																"src": "7545:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7537:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7537:4:7"
																}
															]
														},
														{
															"nativeSrc": "7577:39:7",
															"nodeType": "YulAssignment",
															"src": "7577:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7607:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7607:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7589:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7589:17:7"
																},
																"nativeSrc": "7589:27:7",
																"nodeType": "YulFunctionCall",
																"src": "7589:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7577:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7577:8:7"
																}
															]
														},
														{
															"nativeSrc": "7626:113:7",
															"nodeType": "YulAssignment",
															"src": "7626:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7656:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7656:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7662:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7662:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7672:66:7",
																		"nodeType": "YulLiteral",
																		"src": "7672:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7635:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "7635:20:7"
																},
																"nativeSrc": "7635:104:7",
																"nodeType": "YulFunctionCall",
																"src": "7635:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7626:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7626:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "7461:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7502:4:7",
														"nodeType": "YulTypedName",
														"src": "7502:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7508:8:7",
														"nodeType": "YulTypedName",
														"src": "7508:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7521:5:7",
														"nodeType": "YulTypedName",
														"src": "7521:5:7",
														"type": ""
													}
												],
												"src": "7461:285:7"
											},
											{
												"body": {
													"nativeSrc": "7800:362:7",
													"nodeType": "YulBlock",
													"src": "7800:362:7",
													"statements": [
														{
															"nativeSrc": "7810:25:7",
															"nodeType": "YulAssignment",
															"src": "7810:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7833:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7815:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7815:17:7"
																},
																"nativeSrc": "7815:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7815:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7810:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7810:1:7"
																}
															]
														},
														{
															"nativeSrc": "7844:25:7",
															"nodeType": "YulAssignment",
															"src": "7844:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7867:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7867:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7849:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7849:17:7"
																},
																"nativeSrc": "7849:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7849:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7844:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7844:1:7"
																}
															]
														},
														{
															"nativeSrc": "7878:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7878:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7901:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7901:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7904:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7904:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:7"
																},
																"nativeSrc": "7897:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7882:11:7",
																	"nodeType": "YulTypedName",
																	"src": "7882:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7915:41:7",
															"nodeType": "YulAssignment",
															"src": "7915:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7944:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "7944:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7926:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7926:17:7"
																},
																"nativeSrc": "7926:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7926:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7915:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7915:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8133:22:7",
																"nodeType": "YulBlock",
																"src": "8133:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8135:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8135:16:7"
																			},
																			"nativeSrc": "8135:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8135:18:7"
																		},
																		"nativeSrc": "8135:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8135:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8066:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8066:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8059:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8059:6:7"
																				},
																				"nativeSrc": "8059:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8059:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8089:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8089:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8096:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8096:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8105:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8105:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8092:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8092:3:7"
																						},
																						"nativeSrc": "8092:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8092:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8086:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8086:2:7"
																				},
																				"nativeSrc": "8086:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8039:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8039:2:7"
																		},
																		"nativeSrc": "8039:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8039:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8019:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8019:6:7"
																},
																"nativeSrc": "8019:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8019:113:7"
															},
															"nativeSrc": "8016:139:7",
															"nodeType": "YulIf",
															"src": "8016:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7752:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7783:1:7",
														"nodeType": "YulTypedName",
														"src": "7783:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7786:1:7",
														"nodeType": "YulTypedName",
														"src": "7786:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7792:7:7",
														"nodeType": "YulTypedName",
														"src": "7792:7:7",
														"type": ""
													}
												],
												"src": "7752:410:7"
											},
											{
												"body": {
													"nativeSrc": "8213:81:7",
													"nodeType": "YulBlock",
													"src": "8213:81:7",
													"statements": [
														{
															"nativeSrc": "8223:65:7",
															"nodeType": "YulAssignment",
															"src": "8223:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8238:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8238:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8245:42:7",
																		"nodeType": "YulLiteral",
																		"src": "8245:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8234:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:7"
																},
																"nativeSrc": "8234:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8234:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8223:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8223:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8168:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8195:5:7",
														"nodeType": "YulTypedName",
														"src": "8195:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8205:7:7",
														"nodeType": "YulTypedName",
														"src": "8205:7:7",
														"type": ""
													}
												],
												"src": "8168:126:7"
											},
											{
												"body": {
													"nativeSrc": "8345:51:7",
													"nodeType": "YulBlock",
													"src": "8345:51:7",
													"statements": [
														{
															"nativeSrc": "8355:35:7",
															"nodeType": "YulAssignment",
															"src": "8355:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8384:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8366:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8366:17:7"
																},
																"nativeSrc": "8366:24:7",
																"nodeType": "YulFunctionCall",
																"src": "8366:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8355:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8355:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8300:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8327:5:7",
														"nodeType": "YulTypedName",
														"src": "8327:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8337:7:7",
														"nodeType": "YulTypedName",
														"src": "8337:7:7",
														"type": ""
													}
												],
												"src": "8300:96:7"
											},
											{
												"body": {
													"nativeSrc": "8467:53:7",
													"nodeType": "YulBlock",
													"src": "8467:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8484:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8484:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8489:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8489:17:7"
																		},
																		"nativeSrc": "8489:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8489:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8477:6:7"
																},
																"nativeSrc": "8477:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8477:37:7"
															},
															"nativeSrc": "8477:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8477:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8402:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8455:5:7",
														"nodeType": "YulTypedName",
														"src": "8455:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8462:3:7",
														"nodeType": "YulTypedName",
														"src": "8462:3:7",
														"type": ""
													}
												],
												"src": "8402:118:7"
											},
											{
												"body": {
													"nativeSrc": "8624:124:7",
													"nodeType": "YulBlock",
													"src": "8624:124:7",
													"statements": [
														{
															"nativeSrc": "8634:26:7",
															"nodeType": "YulAssignment",
															"src": "8634:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8646:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8646:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8657:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8657:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8642:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8642:3:7"
																},
																"nativeSrc": "8642:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8642:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8634:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8634:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8714:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8714:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8738:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8738:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8723:3:7"
																		},
																		"nativeSrc": "8723:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8723:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8670:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8670:43:7"
																},
																"nativeSrc": "8670:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8670:71:7"
															},
															"nativeSrc": "8670:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8670:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8526:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8596:9:7",
														"nodeType": "YulTypedName",
														"src": "8596:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8608:6:7",
														"nodeType": "YulTypedName",
														"src": "8608:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8619:4:7",
														"nodeType": "YulTypedName",
														"src": "8619:4:7",
														"type": ""
													}
												],
												"src": "8526:222:7"
											},
											{
												"body": {
													"nativeSrc": "8798:147:7",
													"nodeType": "YulBlock",
													"src": "8798:147:7",
													"statements": [
														{
															"nativeSrc": "8808:25:7",
															"nodeType": "YulAssignment",
															"src": "8808:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8831:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8831:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8813:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8813:17:7"
																},
																"nativeSrc": "8813:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8813:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8808:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8808:1:7"
																}
															]
														},
														{
															"nativeSrc": "8842:25:7",
															"nodeType": "YulAssignment",
															"src": "8842:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8865:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8865:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8847:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8847:17:7"
																},
																"nativeSrc": "8847:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8847:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8842:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8842:1:7"
																}
															]
														},
														{
															"nativeSrc": "8876:16:7",
															"nodeType": "YulAssignment",
															"src": "8876:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8887:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8887:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8890:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8890:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:7"
																},
																"nativeSrc": "8883:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8883:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8876:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8916:22:7",
																"nodeType": "YulBlock",
																"src": "8916:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8918:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8918:16:7"
																			},
																			"nativeSrc": "8918:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8918:18:7"
																		},
																		"nativeSrc": "8918:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8918:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8908:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8908:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8911:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8911:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8905:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8905:2:7"
																},
																"nativeSrc": "8905:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8905:10:7"
															},
															"nativeSrc": "8902:36:7",
															"nodeType": "YulIf",
															"src": "8902:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8754:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8785:1:7",
														"nodeType": "YulTypedName",
														"src": "8785:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8788:1:7",
														"nodeType": "YulTypedName",
														"src": "8788:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8794:3:7",
														"nodeType": "YulTypedName",
														"src": "8794:3:7",
														"type": ""
													}
												],
												"src": "8754:191:7"
											},
											{
												"body": {
													"nativeSrc": "9016:53:7",
													"nodeType": "YulBlock",
													"src": "9016:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9033:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9033:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9056:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9056:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9038:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9038:17:7"
																		},
																		"nativeSrc": "9038:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9038:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9026:6:7"
																},
																"nativeSrc": "9026:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9026:37:7"
															},
															"nativeSrc": "9026:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9026:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8951:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9004:5:7",
														"nodeType": "YulTypedName",
														"src": "9004:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9011:3:7",
														"nodeType": "YulTypedName",
														"src": "9011:3:7",
														"type": ""
													}
												],
												"src": "8951:118:7"
											},
											{
												"body": {
													"nativeSrc": "9229:288:7",
													"nodeType": "YulBlock",
													"src": "9229:288:7",
													"statements": [
														{
															"nativeSrc": "9239:26:7",
															"nodeType": "YulAssignment",
															"src": "9239:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9251:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9251:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9262:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9247:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9247:3:7"
																},
																"nativeSrc": "9247:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9247:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9239:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9239:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9319:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9319:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9332:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9332:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9343:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9343:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9328:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9328:3:7"
																		},
																		"nativeSrc": "9328:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9328:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9275:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9275:43:7"
																},
																"nativeSrc": "9275:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9275:71:7"
															},
															"nativeSrc": "9275:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9275:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9400:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9400:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9413:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9413:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9424:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9424:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9409:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9409:3:7"
																		},
																		"nativeSrc": "9409:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9409:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9356:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9356:43:7"
																},
																"nativeSrc": "9356:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9356:72:7"
															},
															"nativeSrc": "9356:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9356:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9482:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9482:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9495:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9495:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9506:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9506:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9491:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9491:3:7"
																		},
																		"nativeSrc": "9491:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9491:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9438:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9438:43:7"
																},
																"nativeSrc": "9438:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9438:72:7"
															},
															"nativeSrc": "9438:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9438:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9075:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9185:9:7",
														"nodeType": "YulTypedName",
														"src": "9185:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9197:6:7",
														"nodeType": "YulTypedName",
														"src": "9197:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9205:6:7",
														"nodeType": "YulTypedName",
														"src": "9205:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9213:6:7",
														"nodeType": "YulTypedName",
														"src": "9213:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9224:4:7",
														"nodeType": "YulTypedName",
														"src": "9224:4:7",
														"type": ""
													}
												],
												"src": "9075:442:7"
											},
											{
												"body": {
													"nativeSrc": "9621:124:7",
													"nodeType": "YulBlock",
													"src": "9621:124:7",
													"statements": [
														{
															"nativeSrc": "9631:26:7",
															"nodeType": "YulAssignment",
															"src": "9631:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9643:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9643:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9654:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9654:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9639:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9639:3:7"
																},
																"nativeSrc": "9639:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9639:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9631:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9631:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9711:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9711:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9724:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9724:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9735:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9735:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9720:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:7"
																		},
																		"nativeSrc": "9720:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9667:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9667:43:7"
																},
																"nativeSrc": "9667:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9667:71:7"
															},
															"nativeSrc": "9667:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9667:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9523:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9593:9:7",
														"nodeType": "YulTypedName",
														"src": "9593:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9605:6:7",
														"nodeType": "YulTypedName",
														"src": "9605:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9616:4:7",
														"nodeType": "YulTypedName",
														"src": "9616:4:7",
														"type": ""
													}
												],
												"src": "9523:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280601c81526020017f556e69766572736974795f417374616e6149545f417373616e616c69000000008152506040518060400160405280600381526020017f554141000000000000000000000000000000000000000000000000000000000081525081600390816200008e9190620005ee565b508060049081620000a09190620005ee565b505050620000d633601260ff16600a620000bb91906200084f565b6107d0620000ca91906200089f565b620000dc60201b60201c565b620009e8565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200014f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200014691906200092c565b60405180910390fd5b620001625f83836200016660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001ba578060025f828254620001ad919062000947565b925050819055506200028b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000246578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200023d9392919062000992565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002d4578060025f82825403925050819055506200031e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200037d9190620009cd565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200040657607f821691505b6020821081036200041c576200041b620003c1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000443565b6200048c868362000443565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004d6620004d0620004ca84620004a4565b620004ad565b620004a4565b9050919050565b5f819050919050565b620004f183620004b6565b620005096200050082620004dd565b8484546200044f565b825550505050565b5f90565b6200051f62000511565b6200052c818484620004e6565b505050565b5b818110156200055357620005475f8262000515565b60018101905062000532565b5050565b601f821115620005a2576200056c8162000422565b620005778462000434565b8101602085101562000587578190505b6200059f620005968562000434565b83018262000531565b50505b505050565b5f82821c905092915050565b5f620005c45f1984600802620005a7565b1980831691505092915050565b5f620005de8383620005b3565b9150826002028217905092915050565b620005f9826200038a565b67ffffffffffffffff81111562000615576200061462000394565b5b620006218254620003ee565b6200062e82828562000557565b5f60209050601f83116001811462000664575f84156200064f578287015190505b6200065b8582620005d1565b865550620006ca565b601f198416620006748662000422565b5f5b828110156200069d5784890151825560018201915060208501945060208101905062000676565b86831015620006bd5784890151620006b9601f891682620005b3565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200075c57808604811115620007345762000733620006d2565b5b6001851615620007445780820291505b80810290506200075485620006ff565b945062000714565b94509492505050565b5f8262000776576001905062000848565b8162000785575f905062000848565b81600181146200079e5760028114620007a957620007df565b600191505062000848565b60ff841115620007be57620007bd620006d2565b5b8360020a915084821115620007d857620007d7620006d2565b5b5062000848565b5060208310610133831016604e8410600b8410161715620008195782820a905083811115620008135762000812620006d2565b5b62000848565b6200082884848460016200070b565b92509050818404811115620008425762000841620006d2565b5b81810290505b9392505050565b5f6200085b82620004a4565b91506200086883620004a4565b9250620008977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000765565b905092915050565b5f620008ab82620004a4565b9150620008b883620004a4565b9250828202620008c881620004a4565b91508282048414831517620008e257620008e1620006d2565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200091482620008e9565b9050919050565b620009268162000908565b82525050565b5f602082019050620009415f8301846200091b565b92915050565b5f6200095382620004a4565b91506200096083620004a4565b92508282019050808211156200097b576200097a620006d2565b5b92915050565b6200098c81620004a4565b82525050565b5f606082019050620009a75f8301866200091b565b620009b6602083018562000981565b620009c5604083018462000981565b949350505050565b5f602082019050620009e25f83018462000981565b92915050565b61192e80620009f65f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063841b39fc11610095578063bead3f5011610064578063bead3f50146102b2578063d45e3f4a146102d0578063dd62ed3e146102ee578063f76f8d781461031e576100fe565b8063841b39fc1461022857806395d89b4114610246578063a3f4df7e14610264578063a9059cbb14610282576100fe565b80632e0f2625116100d15780632e0f26251461019e5780632ff2e9dc146101bc578063313ce567146101da57806370a08231146101f8576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61033c565b604051610117919061101c565b60405180910390f35b61013a600480360381019061013591906110cd565b6103cc565b6040516101479190611125565b60405180910390f35b6101586103ee565b604051610165919061114d565b60405180910390f35b61018860048036038101906101839190611166565b6103f7565b6040516101959190611125565b60405180910390f35b6101a661045b565b6040516101b391906111d1565b60405180910390f35b6101c4610460565b6040516101d1919061114d565b60405180910390f35b6101e2610481565b6040516101ef91906111d1565b60405180910390f35b610212600480360381019061020d91906111ea565b610489565b60405161021f919061114d565b60405180910390f35b6102306104ce565b60405161023d9190611224565b60405180910390f35b61024e6104d5565b60405161025b919061101c565b60405180910390f35b61026c610565565b604051610279919061101c565b60405180910390f35b61029c600480360381019061029791906110cd565b61059e565b6040516102a99190611125565b60405180910390f35b6102ba610607565b6040516102c79190611224565b60405180910390f35b6102d8610615565b6040516102e5919061101c565b60405180910390f35b6103086004803603810190610303919061123d565b61066c565b604051610315919061114d565b60405180910390f35b6103266106ee565b604051610333919061101c565b60405180910390f35b60606003805461034b906112a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610377906112a8565b80156103c25780601f10610399576101008083540402835291602001916103c2565b820191905f5260205f20905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b5f806103d6610727565b90506103e381858561072e565b600191505092915050565b5f600254905090565b5f80610404858585610740565b90508015610450577f360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd6104364261076e565b8686604051610447939291906112d8565b60405180910390a15b809150509392505050565b601281565b601260ff16600a6104719190611470565b6107d061047e91906114ba565b81565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f30905090565b6060600480546104e4906112a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610510906112a8565b801561055b5780601f106105325761010080835404028352916020019161055b565b820191905f5260205f20905b81548152906001019060200180831161053e57829003601f168201915b5050505050905090565b6040518060400160405280601c81526020017f556e69766572736974795f417374616e6149545f417373616e616c690000000081525081565b5f806105aa84846108c7565b905080156105fd577f360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd6105dc4261076e565b6105e4610727565b866040516105f4939291906112d8565b60405180910390a15b8091505092915050565b5f610610610727565b905090565b60605f4311610659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106509061156b565b60405180910390fd5b5f429050610666816108e9565b91505090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6040518060400160405280600381526020017f554141000000000000000000000000000000000000000000000000000000000081525081565b5f33905090565b61073b8383836001610a28565b505050565b5f8061074a610727565b9050610757858285610bf7565b610762858585610c89565b60019150509392505050565b60605f82036107b4576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506108c2565b5f8290505f5b5f82146107e35780806107cc90611589565b915050600a826107dc91906115fd565b91506107ba565b5f8167ffffffffffffffff8111156107fe576107fd61162d565b5b6040519080825280601f01601f1916602001820160405280156108305781602001600182028036833780820191505090505b5090505b5f85146108bb57600182610848919061165a565b9150600a85610857919061168d565b603061086391906116bd565b60f81b818381518110610879576108786116f0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a856108b491906115fd565b9450610834565b8093505050505b919050565b5f806108d1610727565b90506108de818585610c89565b600191505092915050565b60605f6301e1338090505f6107b2828561090391906115fd565b61090d91906116bd565b90505f6228207290505f6001828588610926919061168d565b61093091906115fd565b61093a91906116bd565b90505f6201518090505f600182858a610953919061168d565b61095d91906115fd565b61096791906116bd565b90505f610e1090505f81848b61097d919061168d565b61098791906115fd565b90505f603c90505f81848d61099c919061168d565b6109a691906115fd565b90505f828d6109b5919061168d565b90505f6109c18b61076e565b6109ca8a61076e565b6109d38961076e565b6109dc8861076e565b6109e58761076e565b6109ee8761076e565b604051602001610a0396959493929190611835565b6040516020818303038152906040529050809c50505050505050505050505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a98575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a8f9190611224565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b08575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610aff9190611224565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bf1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610be8919061114d565b60405180910390a35b50505050565b5f610c02848461066c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c835781811015610c74578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c6b939291906118c3565b60405180910390fd5b610c8284848484035f610a28565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cf9575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cf09190611224565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d69575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d609190611224565b60405180910390fd5b610d74838383610d79565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dc9578060025f828254610dbd91906116bd565b92505081905550610e97565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e52578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e49939291906118c3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ede578060025f8282540392505081905550610f28565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f85919061114d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610fc9578082015181840152602081019050610fae565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fee82610f92565b610ff88185610f9c565b9350611008818560208601610fac565b61101181610fd4565b840191505092915050565b5f6020820190508181035f8301526110348184610fe4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61106982611040565b9050919050565b6110798161105f565b8114611083575f80fd5b50565b5f8135905061109481611070565b92915050565b5f819050919050565b6110ac8161109a565b81146110b6575f80fd5b50565b5f813590506110c7816110a3565b92915050565b5f80604083850312156110e3576110e261103c565b5b5f6110f085828601611086565b9250506020611101858286016110b9565b9150509250929050565b5f8115159050919050565b61111f8161110b565b82525050565b5f6020820190506111385f830184611116565b92915050565b6111478161109a565b82525050565b5f6020820190506111605f83018461113e565b92915050565b5f805f6060848603121561117d5761117c61103c565b5b5f61118a86828701611086565b935050602061119b86828701611086565b92505060406111ac868287016110b9565b9150509250925092565b5f60ff82169050919050565b6111cb816111b6565b82525050565b5f6020820190506111e45f8301846111c2565b92915050565b5f602082840312156111ff576111fe61103c565b5b5f61120c84828501611086565b91505092915050565b61121e8161105f565b82525050565b5f6020820190506112375f830184611215565b92915050565b5f80604083850312156112535761125261103c565b5b5f61126085828601611086565b925050602061127185828601611086565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112bf57607f821691505b6020821081036112d2576112d161127b565b5b50919050565b5f6060820190508181035f8301526112f08186610fe4565b90506112ff6020830185611215565b61130c6040830184611215565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156113965780860481111561137257611371611314565b5b60018516156113815780820291505b808102905061138f85611341565b9450611356565b94509492505050565b5f826113ae5760019050611469565b816113bb575f9050611469565b81600181146113d157600281146113db5761140a565b6001915050611469565b60ff8411156113ed576113ec611314565b5b8360020a91508482111561140457611403611314565b5b50611469565b5060208310610133831016604e8410600b841016171561143f5782820a90508381111561143a57611439611314565b5b611469565b61144c848484600161134d565b9250905081840481111561146357611462611314565b5b81810290505b9392505050565b5f61147a8261109a565b91506114858361109a565b92506114b27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461139f565b905092915050565b5f6114c48261109a565b91506114cf8361109a565b92508282026114dd8161109a565b915082820484148315176114f4576114f3611314565b5b5092915050565b7f4e6f207472616e73616374696f6e732068617665206f636375727265642079655f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f611555602183610f9c565b9150611560826114fb565b604082019050919050565b5f6020820190508181035f83015261158281611549565b9050919050565b5f6115938261109a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115c5576115c4611314565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6116078261109a565b91506116128361109a565b925082611622576116216115d0565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6116648261109a565b915061166f8361109a565b925082820390508181111561168757611686611314565b5b92915050565b5f6116978261109a565b91506116a28361109a565b9250826116b2576116b16115d0565b5b828206905092915050565b5f6116c78261109a565b91506116d28361109a565b92508282019050808211156116ea576116e9611314565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b5f61173182610f92565b61173b818561171d565b935061174b818560208601610fac565b80840191505092915050565b7f2d000000000000000000000000000000000000000000000000000000000000005f82015250565b5f61178b60018361171d565b915061179682611757565b600182019050919050565b7f20000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6117d560018361171d565b91506117e0826117a1565b600182019050919050565b7f3a000000000000000000000000000000000000000000000000000000000000005f82015250565b5f61181f60018361171d565b915061182a826117eb565b600182019050919050565b5f6118408289611727565b915061184b8261177f565b91506118578288611727565b91506118628261177f565b915061186e8287611727565b9150611879826117c9565b91506118858286611727565b915061189082611813565b915061189c8285611727565b91506118a782611813565b91506118b38284611727565b9150819050979650505050505050565b5f6060820190506118d65f830186611215565b6118e3602083018561113e565b6118f0604083018461113e565b94935050505056fea2646970667358221220019850ab23b908c5e02652c920fe65e506d4895d8d94382bab70b7fa1ae00b6664736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E69766572736974795F417374616E6149545F417373616E616C6900000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5541410000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x5EE JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x5EE JUMP JUMPDEST POP POP POP PUSH3 0xD6 CALLER PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA PUSH3 0xBB SWAP2 SWAP1 PUSH3 0x84F JUMP JUMPDEST PUSH2 0x7D0 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x89F JUMP JUMPDEST PUSH3 0xDC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9E8 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x14F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x146 SWAP2 SWAP1 PUSH3 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x162 PUSH0 DUP4 DUP4 PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1BA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x1AD SWAP2 SWAP1 PUSH3 0x947 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x28B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x246 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x23D SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x31E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x37D SWAP2 SWAP1 PUSH3 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x406 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x41C JUMPI PUSH3 0x41B PUSH3 0x3C1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x480 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x443 JUMP JUMPDEST PUSH3 0x48C DUP7 DUP4 PUSH3 0x443 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4D6 PUSH3 0x4D0 PUSH3 0x4CA DUP5 PUSH3 0x4A4 JUMP JUMPDEST PUSH3 0x4AD JUMP JUMPDEST PUSH3 0x4A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4F1 DUP4 PUSH3 0x4B6 JUMP JUMPDEST PUSH3 0x509 PUSH3 0x500 DUP3 PUSH3 0x4DD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x44F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x51F PUSH3 0x511 JUMP JUMPDEST PUSH3 0x52C DUP2 DUP5 DUP5 PUSH3 0x4E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x553 JUMPI PUSH3 0x547 PUSH0 DUP3 PUSH3 0x515 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x532 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x5A2 JUMPI PUSH3 0x56C DUP2 PUSH3 0x422 JUMP JUMPDEST PUSH3 0x577 DUP5 PUSH3 0x434 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x587 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x59F PUSH3 0x596 DUP6 PUSH3 0x434 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x531 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5C4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x5A7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5DE DUP4 DUP4 PUSH3 0x5B3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5F9 DUP3 PUSH3 0x38A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x615 JUMPI PUSH3 0x614 PUSH3 0x394 JUMP JUMPDEST JUMPDEST PUSH3 0x621 DUP3 SLOAD PUSH3 0x3EE JUMP JUMPDEST PUSH3 0x62E DUP3 DUP3 DUP6 PUSH3 0x557 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x664 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x64F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x65B DUP6 DUP3 PUSH3 0x5D1 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6CA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x674 DUP7 PUSH3 0x422 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x69D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x676 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x6BD JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x6B9 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x5B3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x75C JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x734 JUMPI PUSH3 0x733 PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x744 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x754 DUP6 PUSH3 0x6FF JUMP JUMPDEST SWAP5 POP PUSH3 0x714 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x776 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x848 JUMP JUMPDEST DUP2 PUSH3 0x785 JUMPI PUSH0 SWAP1 POP PUSH3 0x848 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x79E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x7A9 JUMPI PUSH3 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x848 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x7BE JUMPI PUSH3 0x7BD PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x7D8 JUMPI PUSH3 0x7D7 PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST POP PUSH3 0x848 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x819 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x813 JUMPI PUSH3 0x812 PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST PUSH3 0x848 JUMP JUMPDEST PUSH3 0x828 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x70B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x842 JUMPI PUSH3 0x841 PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x85B DUP3 PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x868 DUP4 PUSH3 0x4A4 JUMP JUMPDEST SWAP3 POP PUSH3 0x897 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x765 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x8AB DUP3 PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x8B8 DUP4 PUSH3 0x4A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x8C8 DUP2 PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x8E2 JUMPI PUSH3 0x8E1 PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x914 DUP3 PUSH3 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x926 DUP2 PUSH3 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x941 PUSH0 DUP4 ADD DUP5 PUSH3 0x91B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x953 DUP3 PUSH3 0x4A4 JUMP JUMPDEST SWAP2 POP PUSH3 0x960 DUP4 PUSH3 0x4A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x97B JUMPI PUSH3 0x97A PUSH3 0x6D2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x98C DUP2 PUSH3 0x4A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x9A7 PUSH0 DUP4 ADD DUP7 PUSH3 0x91B JUMP JUMPDEST PUSH3 0x9B6 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x981 JUMP JUMPDEST PUSH3 0x9C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x981 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9E2 PUSH0 DUP4 ADD DUP5 PUSH3 0x981 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192E DUP1 PUSH3 0x9F6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x841B39FC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBEAD3F50 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBEAD3F50 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xD45E3F4A EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x31E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x841B39FC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x2E0F2625 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F8 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x399 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D6 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E3 DUP2 DUP6 DUP6 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x450 JUMPI PUSH32 0x360B0720D9FA9B8BAC8C66AEE32C6D152199E1FCDDE1447D98BDE22348F201BD PUSH2 0x436 TIMESTAMP PUSH2 0x76E JUMP JUMPDEST DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x447 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x7D0 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x532 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E69766572736974795F417374616E6149545F417373616E616C6900000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AA DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5FD JUMPI PUSH32 0x360B0720D9FA9B8BAC8C66AEE32C6D152199E1FCDDE1447D98BDE22348F201BD PUSH2 0x5DC TIMESTAMP PUSH2 0x76E JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x727 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x610 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 NUMBER GT PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH2 0x666 DUP2 PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5541410000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x74A PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x757 DUP6 DUP3 DUP6 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x762 DUP6 DUP6 DUP6 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SUB PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x8C2 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 JUMPDEST PUSH0 DUP3 EQ PUSH2 0x7E3 JUMPI DUP1 DUP1 PUSH2 0x7CC SWAP1 PUSH2 0x1589 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP PUSH2 0x7BA JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x830 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH0 DUP6 EQ PUSH2 0x8BB JUMPI PUSH1 0x1 DUP3 PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x16F0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP5 POP PUSH2 0x834 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8D1 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x8DE DUP2 DUP6 DUP6 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH4 0x1E13380 SWAP1 POP PUSH0 PUSH2 0x7B2 DUP3 DUP6 PUSH2 0x903 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x282072 SWAP1 POP PUSH0 PUSH1 0x1 DUP3 DUP6 DUP9 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x15180 SWAP1 POP PUSH0 PUSH1 0x1 DUP3 DUP6 DUP11 PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE10 SWAP1 POP PUSH0 DUP2 DUP5 DUP12 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3C SWAP1 POP PUSH0 DUP2 DUP5 DUP14 PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP14 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 DUP12 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9CA DUP11 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9D3 DUP10 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9DC DUP9 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9E5 DUP8 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9EE DUP8 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA03 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA98 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBF1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC02 DUP5 DUP5 PUSH2 0x66C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC83 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC74 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC82 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA28 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD69 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD74 DUP4 DUP4 DUP4 PUSH2 0xD79 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE97 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE52 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF28 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF85 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFC9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFAE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFEE DUP3 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xFF8 DUP2 DUP6 PUSH2 0xF9C JUMP JUMPDEST SWAP4 POP PUSH2 0x1008 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1034 DUP2 DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1069 DUP3 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1079 DUP2 PUSH2 0x105F JUMP JUMPDEST DUP2 EQ PUSH2 0x1083 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1094 DUP2 PUSH2 0x1070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AC DUP2 PUSH2 0x109A JUMP JUMPDEST DUP2 EQ PUSH2 0x10B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C7 DUP2 PUSH2 0x10A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1101 DUP6 DUP3 DUP7 ADD PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x110B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1138 PUSH0 DUP4 ADD DUP5 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1147 DUP2 PUSH2 0x109A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1160 PUSH0 DUP4 ADD DUP5 PUSH2 0x113E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117D JUMPI PUSH2 0x117C PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x118A DUP7 DUP3 DUP8 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x119B DUP7 DUP3 DUP8 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11AC DUP7 DUP3 DUP8 ADD PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CB DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x120C DUP5 DUP3 DUP6 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x121E DUP2 PUSH2 0x105F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1237 PUSH0 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1253 JUMPI PUSH2 0x1252 PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1260 DUP6 DUP3 DUP7 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1271 DUP6 DUP3 DUP7 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x127B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F0 DUP2 DUP7 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x12FF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x130C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1396 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1372 JUMPI PUSH2 0x1371 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1381 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x138F DUP6 PUSH2 0x1341 JUMP JUMPDEST SWAP5 POP PUSH2 0x1356 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x13AE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1469 JUMP JUMPDEST DUP2 PUSH2 0x13BB JUMPI PUSH0 SWAP1 POP PUSH2 0x1469 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x13D1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x13DB JUMPI PUSH2 0x140A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1469 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0x1314 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1469 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x143F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x143A JUMPI PUSH2 0x1439 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x144C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x134D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x147A DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x1485 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP PUSH2 0x14B2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14C4 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x14CF DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14DD DUP2 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207472616E73616374696F6E732068617665206F63637572726564207965 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1555 PUSH1 0x21 DUP4 PUSH2 0xF9C JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1582 DUP2 PUSH2 0x1549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15C5 JUMPI PUSH2 0x15C4 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1607 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x1612 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1622 JUMPI PUSH2 0x1621 PUSH2 0x15D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1697 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x16A2 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x15D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C7 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x16D2 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16EA JUMPI PUSH2 0x16E9 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1731 DUP3 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x173B DUP2 DUP6 PUSH2 0x171D JUMP JUMPDEST SWAP4 POP PUSH2 0x174B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x178B PUSH1 0x1 DUP4 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP PUSH2 0x1796 DUP3 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17D5 PUSH1 0x1 DUP4 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E0 DUP3 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3A00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181F PUSH1 0x1 DUP4 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP PUSH2 0x182A DUP3 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 DUP3 DUP10 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x177F JUMP JUMPDEST SWAP2 POP PUSH2 0x1857 DUP3 DUP9 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1862 DUP3 PUSH2 0x177F JUMP JUMPDEST SWAP2 POP PUSH2 0x186E DUP3 DUP8 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1879 DUP3 PUSH2 0x17C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1885 DUP3 DUP7 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1890 DUP3 PUSH2 0x1813 JUMP JUMPDEST SWAP2 POP PUSH2 0x189C DUP3 DUP6 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1813 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B3 DUP3 DUP5 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18D6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x18E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x18F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x113E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD SWAP9 POP 0xAB 0x23 0xB9 ADDMOD 0xC5 0xE0 0x26 MSTORE 0xC9 KECCAK256 INVALID PUSH6 0xE506D4895D8D SWAP5 CODESIZE 0x2B 0xAB PUSH17 0xB7FA1AE00B6664736F6C63430008170033 ",
							"sourceMap": "174:3963:6:-:0;;;602:86;;;;;;;;;;622:4;;;;;;;;;;;;;;;;;628:6;;;;;;;;;;;;;;;;;1970:5:2;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;647:33:6::1;653:10;390:2;452:17;;448:2;:21;;;;:::i;:::-;440:4;:30;;;;:::i;:::-;647:5;;;:33;;:::i;:::-;174:3963:::0;;7721:208:2;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:285::-;7521:5;7545:23;7563:4;7545:23;:::i;:::-;7537:31;;7589:27;7607:8;7589:27;:::i;:::-;7577:39;;7635:104;7672:66;7662:8;7656:4;7635:104;:::i;:::-;7626:113;;7461:285;;;;:::o;7752:410::-;7792:7;7815:20;7833:1;7815:20;:::i;:::-;7810:25;;7849:20;7867:1;7849:20;:::i;:::-;7844:25;;7904:1;7901;7897:9;7926:30;7944:11;7926:30;:::i;:::-;7915:41;;8105:1;8096:7;8092:15;8089:1;8086:22;8066:1;8059:9;8039:83;8016:139;;8135:18;;:::i;:::-;8016:139;7800:362;7752:410;;;;:::o;8168:126::-;8205:7;8245:42;8238:5;8234:54;8223:65;;8168:126;;;:::o;8300:96::-;8337:7;8366:24;8384:5;8366:24;:::i;:::-;8355:35;;8300:96;;;:::o;8402:118::-;8489:24;8507:5;8489:24;:::i;:::-;8484:3;8477:37;8402:118;;:::o;8526:222::-;8619:4;8657:2;8646:9;8642:18;8634:26;;8670:71;8738:1;8727:9;8723:17;8714:6;8670:71;:::i;:::-;8526:222;;;;:::o;8754:191::-;8794:3;8813:20;8831:1;8813:20;:::i;:::-;8808:25;;8847:20;8865:1;8847:20;:::i;:::-;8842:25;;8890:1;8887;8883:9;8876:16;;8911:3;8908:1;8905:10;8902:36;;;8918:18;;:::i;:::-;8902:36;8754:191;;;;:::o;8951:118::-;9038:24;9056:5;9038:24;:::i;:::-;9033:3;9026:37;8951:118;;:::o;9075:442::-;9224:4;9262:2;9251:9;9247:18;9239:26;;9275:71;9343:1;9332:9;9328:17;9319:6;9275:71;:::i;:::-;9356:72;9424:2;9413:9;9409:18;9400:6;9356:72;:::i;:::-;9438;9506:2;9495:9;9491:18;9482:6;9438:72;:::i;:::-;9075:442;;;;;;:::o;9523:222::-;9616:4;9654:2;9643:9;9639:18;9631:26;;9667:71;9735:1;9724:9;9720:17;9711:6;9667:71;:::i;:::-;9523:222;;;;:::o;174:3963:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DECIMALS_948": {
									"entryPoint": 1115,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INITIAL_SUPPLY_959": {
									"entryPoint": 1120,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NAME_945": {
									"entryPoint": 1381,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SYMBOL_942": {
									"entryPoint": 1774,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 1838,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2600,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1831,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3063,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3209,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_uintToString_1218": {
									"entryPoint": 1902,
									"id": 1218,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_update_606": {
									"entryPoint": 3449,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1644,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 972,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1161,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1153,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLatestTransactionTimestamp_1120": {
									"entryPoint": 1557,
									"id": 1120,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTransactionReceiver_1140": {
									"entryPoint": 1230,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTransactionSender_1129": {
									"entryPoint": 1543,
									"id": 1129,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 828,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 1237,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@timestampToDate_1097": {
									"entryPoint": 2281,
									"id": 1097,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1006,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1288": {
									"entryPoint": 1015,
									"id": 1288,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1856,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1252": {
									"entryPoint": 1438,
									"id": 1252,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2247,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_string_memory_ptr_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_t_string_memory_ptr_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_t_string_memory_ptr_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6339,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 5232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a": {
									"entryPoint": 6049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17690:7",
										"nodeType": "YulBlock",
										"src": "0:17690:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:184:7",
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nativeSrc": "359:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:7",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:7",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:7",
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nativeSrc": "449:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nativeSrc": "468:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nativeSrc": "462:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nativeSrc": "442:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nativeSrc": "442:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nativeSrc": "386:13:7",
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nativeSrc": "378:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:7",
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nativeSrc": "402:15:7",
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:7",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nativeSrc": "407:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:7",
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nativeSrc": "507:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nativeSrc": "500:27:7",
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nativeSrc": "500:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nativeSrc": "587:54:7",
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nativeSrc": "597:38:7",
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nativeSrc": "611:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:7",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nativeSrc": "607:28:7",
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:7",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:7",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nativeSrc": "739:285:7",
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nativeSrc": "749:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nativeSrc": "763:39:7",
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:7",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:7",
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nativeSrc": "818:71:7",
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:7",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nativeSrc": "933:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nativeSrc": "898:65:7",
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nativeSrc": "898:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nativeSrc": "972:46:7",
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nativeSrc": "988:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nativeSrc": "979:39:7",
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:7",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:7",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:7",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nativeSrc": "1148:195:7",
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nativeSrc": "1158:26:7",
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nativeSrc": "1166:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nativeSrc": "1201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nativeSrc": "1220:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nativeSrc": "1194:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nativeSrc": "1250:86:7",
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nativeSrc": "1258:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:7",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:7",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nativeSrc": "1389:35:7",
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nativeSrc": "1399:19:7",
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nativeSrc": "1409:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:7",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nativeSrc": "1519:28:7",
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nativeSrc": "1529:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nativeSrc": "1529:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nativeSrc": "1642:28:7",
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nativeSrc": "1652:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nativeSrc": "1721:81:7",
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nativeSrc": "1731:65:7",
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nativeSrc": "1742:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:7",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:7",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nativeSrc": "1853:51:7",
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nativeSrc": "1863:35:7",
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nativeSrc": "1874:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:7",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:7",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nativeSrc": "1953:79:7",
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:7",
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nativeSrc": "2012:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nativeSrc": "2012:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nativeSrc": "1983:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nativeSrc": "1973:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nativeSrc": "1966:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nativeSrc": "1963:63:7",
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:7",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nativeSrc": "2090:87:7",
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nativeSrc": "2100:29:7",
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nativeSrc": "2109:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nativeSrc": "2138:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nativeSrc": "2138:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:7",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:7",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:7",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nativeSrc": "2228:32:7",
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nativeSrc": "2238:16:7",
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:7",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:7",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:7",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nativeSrc": "2309:79:7",
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:7",
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nativeSrc": "2368:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nativeSrc": "2368:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nativeSrc": "2339:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nativeSrc": "2329:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nativeSrc": "2322:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nativeSrc": "2319:63:7",
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:7",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nativeSrc": "2446:87:7",
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nativeSrc": "2456:29:7",
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nativeSrc": "2465:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nativeSrc": "2494:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nativeSrc": "2494:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:7",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:7",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:7",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nativeSrc": "2622:391:7",
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:7",
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nativeSrc": "2670:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nativeSrc": "2670:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nativeSrc": "2639:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nativeSrc": "2635:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nativeSrc": "2632:119:7",
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nativeSrc": "2761:117:7",
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nativeSrc": "2776:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nativeSrc": "2836:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nativeSrc": "2815:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:7",
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nativeSrc": "2903:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nativeSrc": "2964:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nativeSrc": "2943:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:7",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:7",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:7",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:7",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nativeSrc": "3061:48:7",
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nativeSrc": "3071:32:7",
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nativeSrc": "3089:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nativeSrc": "3082:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:7",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:7",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nativeSrc": "3174:50:7",
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nativeSrc": "3196:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nativeSrc": "3184:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nativeSrc": "3184:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:7",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:7",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nativeSrc": "3322:118:7",
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nativeSrc": "3332:26:7",
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nativeSrc": "3340:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nativeSrc": "3415:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nativeSrc": "3368:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nativeSrc": "3368:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:7",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:7",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nativeSrc": "3511:53:7",
													"nodeType": "YulBlock",
													"src": "3511:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:7"
																		},
																		"nativeSrc": "3533:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:7"
																},
																"nativeSrc": "3521:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:7"
															},
															"nativeSrc": "3521:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:7",
														"nodeType": "YulTypedName",
														"src": "3499:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:7",
														"nodeType": "YulTypedName",
														"src": "3506:3:7",
														"type": ""
													}
												],
												"src": "3446:118:7"
											},
											{
												"body": {
													"nativeSrc": "3668:124:7",
													"nodeType": "YulBlock",
													"src": "3668:124:7",
													"statements": [
														{
															"nativeSrc": "3678:26:7",
															"nodeType": "YulAssignment",
															"src": "3678:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:7"
																},
																"nativeSrc": "3686:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nativeSrc": "3767:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:7"
																},
																"nativeSrc": "3714:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:7"
															},
															"nativeSrc": "3714:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:7",
														"nodeType": "YulTypedName",
														"src": "3640:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:7",
														"nodeType": "YulTypedName",
														"src": "3652:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:7",
														"nodeType": "YulTypedName",
														"src": "3663:4:7",
														"type": ""
													}
												],
												"src": "3570:222:7"
											},
											{
												"body": {
													"nativeSrc": "3898:519:7",
													"nodeType": "YulBlock",
													"src": "3898:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:7",
																"nodeType": "YulBlock",
																"src": "3944:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:7"
																			},
																			"nativeSrc": "3946:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:7"
																		},
																		"nativeSrc": "3946:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:7"
																		},
																		"nativeSrc": "3915:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:7"
																},
																"nativeSrc": "3911:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:7"
															},
															"nativeSrc": "3908:119:7",
															"nodeType": "YulIf",
															"src": "3908:119:7"
														},
														{
															"nativeSrc": "4037:117:7",
															"nodeType": "YulBlock",
															"src": "4037:117:7",
															"statements": [
																{
																	"nativeSrc": "4052:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nativeSrc": "4112:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:7"
																		},
																		"nativeSrc": "4091:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:7",
															"nodeType": "YulBlock",
															"src": "4164:118:7",
															"statements": [
																{
																	"nativeSrc": "4179:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nativeSrc": "4240:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:7"
																		},
																		"nativeSrc": "4219:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:7",
															"nodeType": "YulBlock",
															"src": "4292:118:7",
															"statements": [
																{
																	"nativeSrc": "4307:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:7"
																				},
																				"nativeSrc": "4368:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:7"
																		},
																		"nativeSrc": "4347:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:7",
														"nodeType": "YulTypedName",
														"src": "3852:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:7",
														"nodeType": "YulTypedName",
														"src": "3863:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:7",
														"nodeType": "YulTypedName",
														"src": "3875:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:7",
														"nodeType": "YulTypedName",
														"src": "3883:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:7",
														"nodeType": "YulTypedName",
														"src": "3891:6:7",
														"type": ""
													}
												],
												"src": "3798:619:7"
											},
											{
												"body": {
													"nativeSrc": "4466:43:7",
													"nodeType": "YulBlock",
													"src": "4466:43:7",
													"statements": [
														{
															"nativeSrc": "4476:27:7",
															"nodeType": "YulAssignment",
															"src": "4476:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:7"
																},
																"nativeSrc": "4487:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:7",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:7",
														"nodeType": "YulTypedName",
														"src": "4458:7:7",
														"type": ""
													}
												],
												"src": "4423:86:7"
											},
											{
												"body": {
													"nativeSrc": "4576:51:7",
													"nodeType": "YulBlock",
													"src": "4576:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:7"
																		},
																		"nativeSrc": "4598:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:7"
																},
																"nativeSrc": "4586:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:7"
															},
															"nativeSrc": "4586:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:7",
														"nodeType": "YulTypedName",
														"src": "4564:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:7",
														"nodeType": "YulTypedName",
														"src": "4571:3:7",
														"type": ""
													}
												],
												"src": "4515:112:7"
											},
											{
												"body": {
													"nativeSrc": "4727:120:7",
													"nodeType": "YulBlock",
													"src": "4727:120:7",
													"statements": [
														{
															"nativeSrc": "4737:26:7",
															"nodeType": "YulAssignment",
															"src": "4737:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:7"
																},
																"nativeSrc": "4745:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:7"
																		},
																		"nativeSrc": "4822:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:7"
																},
																"nativeSrc": "4773:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:7"
															},
															"nativeSrc": "4773:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:7",
														"nodeType": "YulTypedName",
														"src": "4699:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:7",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:7",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"src": "4633:214:7"
											},
											{
												"body": {
													"nativeSrc": "4919:263:7",
													"nodeType": "YulBlock",
													"src": "4919:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:7",
																"nodeType": "YulBlock",
																"src": "4965:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:7"
																			},
																			"nativeSrc": "4967:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:7"
																		},
																		"nativeSrc": "4967:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:7"
																		},
																		"nativeSrc": "4936:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nativeSrc": "4932:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:7"
															},
															"nativeSrc": "4929:119:7",
															"nodeType": "YulIf",
															"src": "4929:119:7"
														},
														{
															"nativeSrc": "5058:117:7",
															"nodeType": "YulBlock",
															"src": "5058:117:7",
															"statements": [
																{
																	"nativeSrc": "5073:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:7"
																				},
																				"nativeSrc": "5133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:7"
																		},
																		"nativeSrc": "5112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:7",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:7",
														"nodeType": "YulTypedName",
														"src": "4900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:7",
														"nodeType": "YulTypedName",
														"src": "4912:6:7",
														"type": ""
													}
												],
												"src": "4853:329:7"
											},
											{
												"body": {
													"nativeSrc": "5253:53:7",
													"nodeType": "YulBlock",
													"src": "5253:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:7"
																		},
																		"nativeSrc": "5275:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:7"
																},
																"nativeSrc": "5263:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:7"
															},
															"nativeSrc": "5263:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:7",
														"nodeType": "YulTypedName",
														"src": "5241:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:7",
														"nodeType": "YulTypedName",
														"src": "5248:3:7",
														"type": ""
													}
												],
												"src": "5188:118:7"
											},
											{
												"body": {
													"nativeSrc": "5410:124:7",
													"nodeType": "YulBlock",
													"src": "5410:124:7",
													"statements": [
														{
															"nativeSrc": "5420:26:7",
															"nodeType": "YulAssignment",
															"src": "5420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:7"
																},
																"nativeSrc": "5428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:7"
																		},
																		"nativeSrc": "5509:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:7"
																},
																"nativeSrc": "5456:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:7"
															},
															"nativeSrc": "5456:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:7",
														"nodeType": "YulTypedName",
														"src": "5382:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:7",
														"nodeType": "YulTypedName",
														"src": "5394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:7",
														"nodeType": "YulTypedName",
														"src": "5405:4:7",
														"type": ""
													}
												],
												"src": "5312:222:7"
											},
											{
												"body": {
													"nativeSrc": "5623:391:7",
													"nodeType": "YulBlock",
													"src": "5623:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:7",
																"nodeType": "YulBlock",
																"src": "5669:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:7"
																			},
																			"nativeSrc": "5671:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:7"
																		},
																		"nativeSrc": "5671:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:7"
																		},
																		"nativeSrc": "5640:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:7"
																},
																"nativeSrc": "5636:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:7"
															},
															"nativeSrc": "5633:119:7",
															"nodeType": "YulIf",
															"src": "5633:119:7"
														},
														{
															"nativeSrc": "5762:117:7",
															"nodeType": "YulBlock",
															"src": "5762:117:7",
															"statements": [
																{
																	"nativeSrc": "5777:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:7"
																				},
																				"nativeSrc": "5837:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:7"
																		},
																		"nativeSrc": "5816:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:7",
															"nodeType": "YulBlock",
															"src": "5889:118:7",
															"statements": [
																{
																	"nativeSrc": "5904:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:7"
																				},
																				"nativeSrc": "5965:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:7"
																		},
																		"nativeSrc": "5944:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:7",
														"nodeType": "YulTypedName",
														"src": "5585:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:7",
														"nodeType": "YulTypedName",
														"src": "5596:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:7",
														"nodeType": "YulTypedName",
														"src": "5608:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:7",
														"nodeType": "YulTypedName",
														"src": "5616:6:7",
														"type": ""
													}
												],
												"src": "5540:474:7"
											},
											{
												"body": {
													"nativeSrc": "6048:152:7",
													"nodeType": "YulBlock",
													"src": "6048:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:7"
																},
																"nativeSrc": "6058:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6058:88:7"
															},
															"nativeSrc": "6058:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:7"
																},
																"nativeSrc": "6155:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6155:15:7"
															},
															"nativeSrc": "6155:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6179:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:7"
																},
																"nativeSrc": "6179:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6179:15:7"
															},
															"nativeSrc": "6179:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6020:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:7"
											},
											{
												"body": {
													"nativeSrc": "6257:269:7",
													"nodeType": "YulBlock",
													"src": "6257:269:7",
													"statements": [
														{
															"nativeSrc": "6267:22:7",
															"nodeType": "YulAssignment",
															"src": "6267:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6277:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:7"
																},
																"nativeSrc": "6277:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6267:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:7"
																}
															]
														},
														{
															"nativeSrc": "6298:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6328:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6324:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:7"
																},
																"nativeSrc": "6324:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6324:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6302:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6375:51:7",
																"nodeType": "YulBlock",
																"src": "6375:51:7",
																"statements": [
																	{
																		"nativeSrc": "6389:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6389:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6403:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6411:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6399:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:7"
																			},
																			"nativeSrc": "6399:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6389:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6355:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:7"
																},
																"nativeSrc": "6348:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6348:26:7"
															},
															"nativeSrc": "6345:81:7",
															"nodeType": "YulIf",
															"src": "6345:81:7"
														},
														{
															"body": {
																"nativeSrc": "6478:42:7",
																"nodeType": "YulBlock",
																"src": "6478:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6492:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:7"
																			},
																			"nativeSrc": "6492:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:7"
																		},
																		"nativeSrc": "6492:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6442:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6465:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6473:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6462:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:7"
																		},
																		"nativeSrc": "6462:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:7"
																},
																"nativeSrc": "6439:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6439:38:7"
															},
															"nativeSrc": "6436:84:7",
															"nodeType": "YulIf",
															"src": "6436:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6206:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6241:4:7",
														"nodeType": "YulTypedName",
														"src": "6241:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6250:6:7",
														"nodeType": "YulTypedName",
														"src": "6250:6:7",
														"type": ""
													}
												],
												"src": "6206:320:7"
											},
											{
												"body": {
													"nativeSrc": "6706:359:7",
													"nodeType": "YulBlock",
													"src": "6706:359:7",
													"statements": [
														{
															"nativeSrc": "6716:26:7",
															"nodeType": "YulAssignment",
															"src": "6716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6728:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6728:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6739:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6724:3:7"
																},
																"nativeSrc": "6724:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6716:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6716:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6763:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6763:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6774:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6774:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6759:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:7"
																		},
																		"nativeSrc": "6759:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6782:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6782:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6788:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6788:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:7"
																		},
																		"nativeSrc": "6778:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6778:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6752:6:7"
																},
																"nativeSrc": "6752:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6752:47:7"
															},
															"nativeSrc": "6752:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6752:47:7"
														},
														{
															"nativeSrc": "6808:86:7",
															"nodeType": "YulAssignment",
															"src": "6808:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6880:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6880:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6889:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6889:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6816:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "6816:63:7"
																},
																"nativeSrc": "6816:78:7",
																"nodeType": "YulFunctionCall",
																"src": "6816:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6808:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6808:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6948:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6948:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6961:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6961:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6972:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6972:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6957:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6957:3:7"
																		},
																		"nativeSrc": "6957:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6957:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6904:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6904:43:7"
																},
																"nativeSrc": "6904:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6904:72:7"
															},
															"nativeSrc": "6904:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6904:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7030:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7030:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7043:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7043:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7054:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7039:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7039:3:7"
																		},
																		"nativeSrc": "7039:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7039:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6986:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6986:43:7"
																},
																"nativeSrc": "6986:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6986:72:7"
															},
															"nativeSrc": "6986:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6986:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed",
												"nativeSrc": "6532:533:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6662:9:7",
														"nodeType": "YulTypedName",
														"src": "6662:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6674:6:7",
														"nodeType": "YulTypedName",
														"src": "6674:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6682:6:7",
														"nodeType": "YulTypedName",
														"src": "6682:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6690:6:7",
														"nodeType": "YulTypedName",
														"src": "6690:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6701:4:7",
														"nodeType": "YulTypedName",
														"src": "6701:4:7",
														"type": ""
													}
												],
												"src": "6532:533:7"
											},
											{
												"body": {
													"nativeSrc": "7099:152:7",
													"nodeType": "YulBlock",
													"src": "7099:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7116:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7116:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7119:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7119:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7109:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7109:6:7"
																},
																"nativeSrc": "7109:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7109:88:7"
															},
															"nativeSrc": "7109:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7109:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7213:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7213:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7216:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7216:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:7"
																},
																"nativeSrc": "7206:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7206:15:7"
															},
															"nativeSrc": "7206:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7206:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7237:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7237:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7240:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7240:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:7"
																},
																"nativeSrc": "7230:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7230:15:7"
															},
															"nativeSrc": "7230:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7230:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7071:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7071:180:7"
											},
											{
												"body": {
													"nativeSrc": "7308:51:7",
													"nodeType": "YulBlock",
													"src": "7308:51:7",
													"statements": [
														{
															"nativeSrc": "7318:34:7",
															"nodeType": "YulAssignment",
															"src": "7318:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7343:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7346:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7346:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7339:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7339:3:7"
																},
																"nativeSrc": "7339:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7339:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7318:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7318:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7257:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7289:5:7",
														"nodeType": "YulTypedName",
														"src": "7289:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7299:8:7",
														"nodeType": "YulTypedName",
														"src": "7299:8:7",
														"type": ""
													}
												],
												"src": "7257:102:7"
											},
											{
												"body": {
													"nativeSrc": "7438:775:7",
													"nodeType": "YulBlock",
													"src": "7438:775:7",
													"statements": [
														{
															"nativeSrc": "7448:15:7",
															"nodeType": "YulAssignment",
															"src": "7448:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "7457:6:7",
																"nodeType": "YulIdentifier",
																"src": "7457:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7448:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7448:5:7"
																}
															]
														},
														{
															"nativeSrc": "7472:14:7",
															"nodeType": "YulAssignment",
															"src": "7472:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "7481:5:7",
																"nodeType": "YulIdentifier",
																"src": "7481:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7472:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7472:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7530:677:7",
																"nodeType": "YulBlock",
																"src": "7530:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7618:22:7",
																			"nodeType": "YulBlock",
																			"src": "7618:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7620:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7620:16:7"
																						},
																						"nativeSrc": "7620:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7620:18:7"
																					},
																					"nativeSrc": "7620:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7620:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7596:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7596:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7606:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7606:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7611:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7611:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7602:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7602:3:7"
																					},
																					"nativeSrc": "7602:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7602:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7593:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7593:2:7"
																			},
																			"nativeSrc": "7593:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:24:7"
																		},
																		"nativeSrc": "7590:50:7",
																		"nodeType": "YulIf",
																		"src": "7590:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "7685:419:7",
																			"nodeType": "YulBlock",
																			"src": "7685:419:7",
																			"statements": [
																				{
																					"nativeSrc": "8065:25:7",
																					"nodeType": "YulAssignment",
																					"src": "8065:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8078:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "8078:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8085:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "8085:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8074:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8074:3:7"
																						},
																						"nativeSrc": "8074:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8074:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8065:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8065:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7660:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7660:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7670:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7670:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7656:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7656:3:7"
																			},
																			"nativeSrc": "7656:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7656:16:7"
																		},
																		"nativeSrc": "7653:451:7",
																		"nodeType": "YulIf",
																		"src": "7653:451:7"
																	},
																	{
																		"nativeSrc": "8117:23:7",
																		"nodeType": "YulAssignment",
																		"src": "8117:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8129:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8129:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8135:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8135:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8125:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8125:3:7"
																			},
																			"nativeSrc": "8125:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8125:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8117:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8153:44:7",
																		"nodeType": "YulAssignment",
																		"src": "8153:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8188:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8188:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8165:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "8165:22:7"
																			},
																			"nativeSrc": "8165:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8165:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8153:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "8153:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7506:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7506:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7516:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7516:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7503:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7503:2:7"
																},
																"nativeSrc": "7503:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7503:15:7"
															},
															"nativeSrc": "7495:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7519:2:7",
																"nodeType": "YulBlock",
																"src": "7519:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7499:3:7",
																"nodeType": "YulBlock",
																"src": "7499:3:7",
																"statements": []
															},
															"src": "7495:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7365:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7393:6:7",
														"nodeType": "YulTypedName",
														"src": "7393:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7401:5:7",
														"nodeType": "YulTypedName",
														"src": "7401:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7408:8:7",
														"nodeType": "YulTypedName",
														"src": "7408:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7418:3:7",
														"nodeType": "YulTypedName",
														"src": "7418:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7426:5:7",
														"nodeType": "YulTypedName",
														"src": "7426:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7433:4:7",
														"nodeType": "YulTypedName",
														"src": "7433:4:7",
														"type": ""
													}
												],
												"src": "7365:848:7"
											},
											{
												"body": {
													"nativeSrc": "8279:1013:7",
													"nodeType": "YulBlock",
													"src": "8279:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8474:20:7",
																"nodeType": "YulBlock",
																"src": "8474:20:7",
																"statements": [
																	{
																		"nativeSrc": "8476:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8476:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8485:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8485:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8476:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8476:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8487:5:7",
																		"nodeType": "YulLeave",
																		"src": "8487:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8464:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8464:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:7"
																},
																"nativeSrc": "8457:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8457:16:7"
															},
															"nativeSrc": "8454:40:7",
															"nodeType": "YulIf",
															"src": "8454:40:7"
														},
														{
															"body": {
																"nativeSrc": "8519:20:7",
																"nodeType": "YulBlock",
																"src": "8519:20:7",
																"statements": [
																	{
																		"nativeSrc": "8521:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8521:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8530:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8530:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8521:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8521:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8532:5:7",
																		"nodeType": "YulLeave",
																		"src": "8532:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8513:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8513:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:7"
																},
																"nativeSrc": "8506:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8506:12:7"
															},
															"nativeSrc": "8503:36:7",
															"nodeType": "YulIf",
															"src": "8503:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8649:20:7",
																		"nodeType": "YulBlock",
																		"src": "8649:20:7",
																		"statements": [
																			{
																				"nativeSrc": "8651:10:7",
																				"nodeType": "YulAssignment",
																				"src": "8651:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8660:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8660:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8651:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8651:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8662:5:7",
																				"nodeType": "YulLeave",
																				"src": "8662:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8642:27:7",
																	"nodeType": "YulCase",
																	"src": "8642:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8647:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8647:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8693:176:7",
																		"nodeType": "YulBlock",
																		"src": "8693:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8728:22:7",
																					"nodeType": "YulBlock",
																					"src": "8728:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8730:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8730:16:7"
																								},
																								"nativeSrc": "8730:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8730:18:7"
																							},
																							"nativeSrc": "8730:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8730:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8713:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8713:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8723:3:7",
																							"nodeType": "YulLiteral",
																							"src": "8723:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8710:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8710:2:7"
																					},
																					"nativeSrc": "8710:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8710:17:7"
																				},
																				"nativeSrc": "8707:43:7",
																				"nodeType": "YulIf",
																				"src": "8707:43:7"
																			},
																			{
																				"nativeSrc": "8763:25:7",
																				"nodeType": "YulAssignment",
																				"src": "8763:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8776:1:7",
																							"nodeType": "YulLiteral",
																							"src": "8776:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8779:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8779:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8772:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8772:3:7"
																					},
																					"nativeSrc": "8772:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8772:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8763:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8763:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8819:22:7",
																					"nodeType": "YulBlock",
																					"src": "8819:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8821:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8821:16:7"
																								},
																								"nativeSrc": "8821:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8821:18:7"
																							},
																							"nativeSrc": "8821:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8821:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8807:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8807:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8814:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8814:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8804:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8804:2:7"
																					},
																					"nativeSrc": "8804:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8804:14:7"
																				},
																				"nativeSrc": "8801:40:7",
																				"nodeType": "YulIf",
																				"src": "8801:40:7"
																			},
																			{
																				"nativeSrc": "8854:5:7",
																				"nodeType": "YulLeave",
																				"src": "8854:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8678:191:7",
																	"nodeType": "YulCase",
																	"src": "8678:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8683:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8599:4:7",
																"nodeType": "YulIdentifier",
																"src": "8599:4:7"
															},
															"nativeSrc": "8592:277:7",
															"nodeType": "YulSwitch",
															"src": "8592:277:7"
														},
														{
															"body": {
																"nativeSrc": "9001:123:7",
																"nodeType": "YulBlock",
																"src": "9001:123:7",
																"statements": [
																	{
																		"nativeSrc": "9015:28:7",
																		"nodeType": "YulAssignment",
																		"src": "9015:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9028:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9028:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9034:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "9034:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9024:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9024:3:7"
																			},
																			"nativeSrc": "9024:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9024:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9015:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9015:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9074:22:7",
																			"nodeType": "YulBlock",
																			"src": "9074:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9076:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "9076:16:7"
																						},
																						"nativeSrc": "9076:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9076:18:7"
																					},
																					"nativeSrc": "9076:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9076:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9062:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "9062:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9069:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9069:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9059:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "9059:2:7"
																			},
																			"nativeSrc": "9059:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9059:14:7"
																		},
																		"nativeSrc": "9056:40:7",
																		"nodeType": "YulIf",
																		"src": "9056:40:7"
																	},
																	{
																		"nativeSrc": "9109:5:7",
																		"nodeType": "YulLeave",
																		"src": "9109:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8904:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8904:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8910:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8910:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8901:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8901:2:7"
																				},
																				"nativeSrc": "8901:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8901:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8918:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8918:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8928:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8928:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8915:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8915:2:7"
																				},
																				"nativeSrc": "8915:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8915:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8897:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8897:3:7"
																		},
																		"nativeSrc": "8897:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8897:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8953:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8953:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8959:3:7",
																						"nodeType": "YulLiteral",
																						"src": "8959:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8950:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8950:2:7"
																				},
																				"nativeSrc": "8950:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8950:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8968:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8968:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8978:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8978:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8965:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8965:2:7"
																				},
																				"nativeSrc": "8965:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8965:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8946:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8946:3:7"
																		},
																		"nativeSrc": "8946:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8946:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8881:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8881:2:7"
																},
																"nativeSrc": "8881:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8881:111:7"
															},
															"nativeSrc": "8878:246:7",
															"nodeType": "YulIf",
															"src": "8878:246:7"
														},
														{
															"nativeSrc": "9134:57:7",
															"nodeType": "YulAssignment",
															"src": "9134:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9168:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9168:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9171:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9171:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9177:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9177:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9187:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9187:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9149:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9149:18:7"
																},
																"nativeSrc": "9149:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9149:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9134:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9134:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "9141:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9141:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9230:22:7",
																"nodeType": "YulBlock",
																"src": "9230:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9232:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9232:16:7"
																			},
																			"nativeSrc": "9232:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9232:18:7"
																		},
																		"nativeSrc": "9232:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9232:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9207:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9207:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9218:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9218:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9223:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9223:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9214:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9214:3:7"
																		},
																		"nativeSrc": "9214:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9214:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9204:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9204:2:7"
																},
																"nativeSrc": "9204:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9204:25:7"
															},
															"nativeSrc": "9201:51:7",
															"nodeType": "YulIf",
															"src": "9201:51:7"
														},
														{
															"nativeSrc": "9261:25:7",
															"nodeType": "YulAssignment",
															"src": "9261:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9274:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9274:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9281:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9270:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9270:3:7"
																},
																"nativeSrc": "9270:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9270:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8219:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8249:4:7",
														"nodeType": "YulTypedName",
														"src": "8249:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8255:8:7",
														"nodeType": "YulTypedName",
														"src": "8255:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8265:3:7",
														"nodeType": "YulTypedName",
														"src": "8265:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8273:5:7",
														"nodeType": "YulTypedName",
														"src": "8273:5:7",
														"type": ""
													}
												],
												"src": "8219:1073:7"
											},
											{
												"body": {
													"nativeSrc": "9364:219:7",
													"nodeType": "YulBlock",
													"src": "9364:219:7",
													"statements": [
														{
															"nativeSrc": "9374:31:7",
															"nodeType": "YulAssignment",
															"src": "9374:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9400:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9400:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9382:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9382:17:7"
																},
																"nativeSrc": "9382:23:7",
																"nodeType": "YulFunctionCall",
																"src": "9382:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9374:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9374:4:7"
																}
															]
														},
														{
															"nativeSrc": "9414:39:7",
															"nodeType": "YulAssignment",
															"src": "9414:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9444:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9444:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9426:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9426:17:7"
																},
																"nativeSrc": "9426:27:7",
																"nodeType": "YulFunctionCall",
																"src": "9426:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9414:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9414:8:7"
																}
															]
														},
														{
															"nativeSrc": "9463:113:7",
															"nodeType": "YulAssignment",
															"src": "9463:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9493:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9493:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9499:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9499:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9509:66:7",
																		"nodeType": "YulLiteral",
																		"src": "9509:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9472:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "9472:20:7"
																},
																"nativeSrc": "9472:104:7",
																"nodeType": "YulFunctionCall",
																"src": "9472:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9463:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9463:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "9298:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9339:4:7",
														"nodeType": "YulTypedName",
														"src": "9339:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9345:8:7",
														"nodeType": "YulTypedName",
														"src": "9345:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9358:5:7",
														"nodeType": "YulTypedName",
														"src": "9358:5:7",
														"type": ""
													}
												],
												"src": "9298:285:7"
											},
											{
												"body": {
													"nativeSrc": "9637:362:7",
													"nodeType": "YulBlock",
													"src": "9637:362:7",
													"statements": [
														{
															"nativeSrc": "9647:25:7",
															"nodeType": "YulAssignment",
															"src": "9647:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9670:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9670:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9652:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9652:17:7"
																},
																"nativeSrc": "9652:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9652:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9647:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9647:1:7"
																}
															]
														},
														{
															"nativeSrc": "9681:25:7",
															"nodeType": "YulAssignment",
															"src": "9681:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9704:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9704:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9686:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9686:17:7"
																},
																"nativeSrc": "9686:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9686:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9681:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9681:1:7"
																}
															]
														},
														{
															"nativeSrc": "9715:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9715:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9738:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9738:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9741:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9741:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9734:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9734:3:7"
																},
																"nativeSrc": "9734:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9734:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9719:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9719:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9752:41:7",
															"nodeType": "YulAssignment",
															"src": "9752:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9781:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9781:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9763:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9763:17:7"
																},
																"nativeSrc": "9763:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9763:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9752:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9752:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9970:22:7",
																"nodeType": "YulBlock",
																"src": "9970:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9972:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9972:16:7"
																			},
																			"nativeSrc": "9972:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9972:18:7"
																		},
																		"nativeSrc": "9972:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9972:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9903:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9903:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9896:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9896:6:7"
																				},
																				"nativeSrc": "9896:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9896:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9926:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9926:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9933:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9933:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9942:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9942:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9929:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9929:3:7"
																						},
																						"nativeSrc": "9929:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9929:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9923:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9923:2:7"
																				},
																				"nativeSrc": "9923:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9923:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9876:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9876:2:7"
																		},
																		"nativeSrc": "9876:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9876:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:7"
																},
																"nativeSrc": "9856:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9856:113:7"
															},
															"nativeSrc": "9853:139:7",
															"nodeType": "YulIf",
															"src": "9853:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9589:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9620:1:7",
														"nodeType": "YulTypedName",
														"src": "9620:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9623:1:7",
														"nodeType": "YulTypedName",
														"src": "9623:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9629:7:7",
														"nodeType": "YulTypedName",
														"src": "9629:7:7",
														"type": ""
													}
												],
												"src": "9589:410:7"
											},
											{
												"body": {
													"nativeSrc": "10111:114:7",
													"nodeType": "YulBlock",
													"src": "10111:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10133:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10133:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10141:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10141:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10129:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10129:3:7"
																		},
																		"nativeSrc": "10129:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10129:14:7"
																	},
																	{
																		"hexValue": "4e6f207472616e73616374696f6e732068617665206f63637572726564207965",
																		"kind": "string",
																		"nativeSrc": "10145:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10145:34:7",
																		"type": "",
																		"value": "No transactions have occurred ye"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10122:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10122:6:7"
																},
																"nativeSrc": "10122:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10122:58:7"
															},
															"nativeSrc": "10122:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10122:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10201:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10201:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10209:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10209:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10197:3:7"
																		},
																		"nativeSrc": "10197:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10197:15:7"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nativeSrc": "10214:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10214:3:7",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10190:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10190:6:7"
																},
																"nativeSrc": "10190:28:7",
																"nodeType": "YulFunctionCall",
																"src": "10190:28:7"
															},
															"nativeSrc": "10190:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "10190:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c",
												"nativeSrc": "10005:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10103:6:7",
														"nodeType": "YulTypedName",
														"src": "10103:6:7",
														"type": ""
													}
												],
												"src": "10005:220:7"
											},
											{
												"body": {
													"nativeSrc": "10377:220:7",
													"nodeType": "YulBlock",
													"src": "10377:220:7",
													"statements": [
														{
															"nativeSrc": "10387:74:7",
															"nodeType": "YulAssignment",
															"src": "10387:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10453:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10453:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10458:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10458:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10394:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10394:58:7"
																},
																"nativeSrc": "10394:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10394:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10387:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10387:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10559:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10559:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c",
																	"nativeSrc": "10470:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10470:88:7"
																},
																"nativeSrc": "10470:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10470:93:7"
															},
															"nativeSrc": "10470:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10470:93:7"
														},
														{
															"nativeSrc": "10572:19:7",
															"nodeType": "YulAssignment",
															"src": "10572:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10583:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10583:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10588:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10588:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10579:3:7"
																},
																"nativeSrc": "10579:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10579:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10231:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10365:3:7",
														"nodeType": "YulTypedName",
														"src": "10365:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10373:3:7",
														"nodeType": "YulTypedName",
														"src": "10373:3:7",
														"type": ""
													}
												],
												"src": "10231:366:7"
											},
											{
												"body": {
													"nativeSrc": "10774:248:7",
													"nodeType": "YulBlock",
													"src": "10774:248:7",
													"statements": [
														{
															"nativeSrc": "10784:26:7",
															"nodeType": "YulAssignment",
															"src": "10784:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10796:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10796:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10807:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10807:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10792:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10792:3:7"
																},
																"nativeSrc": "10792:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10792:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10784:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10784:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10842:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10842:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:7"
																		},
																		"nativeSrc": "10827:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10827:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10850:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10850:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10856:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10856:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10846:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10846:3:7"
																		},
																		"nativeSrc": "10846:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10846:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10820:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:7"
																},
																"nativeSrc": "10820:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10820:47:7"
															},
															"nativeSrc": "10820:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10820:47:7"
														},
														{
															"nativeSrc": "10876:139:7",
															"nodeType": "YulAssignment",
															"src": "10876:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11010:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11010:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10884:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10884:124:7"
																},
																"nativeSrc": "10884:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10884:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10876:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10876:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10603:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10754:9:7",
														"nodeType": "YulTypedName",
														"src": "10754:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10769:4:7",
														"nodeType": "YulTypedName",
														"src": "10769:4:7",
														"type": ""
													}
												],
												"src": "10603:419:7"
											},
											{
												"body": {
													"nativeSrc": "11071:190:7",
													"nodeType": "YulBlock",
													"src": "11071:190:7",
													"statements": [
														{
															"nativeSrc": "11081:33:7",
															"nodeType": "YulAssignment",
															"src": "11081:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11108:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11108:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11090:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11090:17:7"
																},
																"nativeSrc": "11090:24:7",
																"nodeType": "YulFunctionCall",
																"src": "11090:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11081:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11081:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11204:22:7",
																"nodeType": "YulBlock",
																"src": "11204:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11206:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11206:16:7"
																			},
																			"nativeSrc": "11206:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11206:18:7"
																		},
																		"nativeSrc": "11206:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11206:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11129:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11129:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11136:66:7",
																		"nodeType": "YulLiteral",
																		"src": "11136:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11126:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11126:2:7"
																},
																"nativeSrc": "11126:77:7",
																"nodeType": "YulFunctionCall",
																"src": "11126:77:7"
															},
															"nativeSrc": "11123:103:7",
															"nodeType": "YulIf",
															"src": "11123:103:7"
														},
														{
															"nativeSrc": "11235:20:7",
															"nodeType": "YulAssignment",
															"src": "11235:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11246:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11246:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11253:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11253:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11242:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11242:3:7"
																},
																"nativeSrc": "11242:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11242:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11235:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11235:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11028:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11057:5:7",
														"nodeType": "YulTypedName",
														"src": "11057:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11067:3:7",
														"nodeType": "YulTypedName",
														"src": "11067:3:7",
														"type": ""
													}
												],
												"src": "11028:233:7"
											},
											{
												"body": {
													"nativeSrc": "11295:152:7",
													"nodeType": "YulBlock",
													"src": "11295:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11312:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11312:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11315:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11315:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11305:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:7"
																},
																"nativeSrc": "11305:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11305:88:7"
															},
															"nativeSrc": "11305:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11305:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11409:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11412:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11412:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11402:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11402:6:7"
																},
																"nativeSrc": "11402:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11402:15:7"
															},
															"nativeSrc": "11402:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11402:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11433:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11436:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11436:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11426:6:7"
																},
																"nativeSrc": "11426:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11426:15:7"
															},
															"nativeSrc": "11426:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11426:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11267:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11267:180:7"
											},
											{
												"body": {
													"nativeSrc": "11495:143:7",
													"nodeType": "YulBlock",
													"src": "11495:143:7",
													"statements": [
														{
															"nativeSrc": "11505:25:7",
															"nodeType": "YulAssignment",
															"src": "11505:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11528:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11528:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11510:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11510:17:7"
																},
																"nativeSrc": "11510:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11510:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11505:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11505:1:7"
																}
															]
														},
														{
															"nativeSrc": "11539:25:7",
															"nodeType": "YulAssignment",
															"src": "11539:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11562:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11562:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11544:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11544:17:7"
																},
																"nativeSrc": "11544:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11544:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11539:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11539:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11586:22:7",
																"nodeType": "YulBlock",
																"src": "11586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11588:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11588:16:7"
																			},
																			"nativeSrc": "11588:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11588:18:7"
																		},
																		"nativeSrc": "11588:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11583:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11583:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:7"
																},
																"nativeSrc": "11576:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11576:9:7"
															},
															"nativeSrc": "11573:35:7",
															"nodeType": "YulIf",
															"src": "11573:35:7"
														},
														{
															"nativeSrc": "11618:14:7",
															"nodeType": "YulAssignment",
															"src": "11618:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11627:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11627:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11630:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11630:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11623:3:7"
																},
																"nativeSrc": "11623:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11623:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11618:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11618:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11453:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11484:1:7",
														"nodeType": "YulTypedName",
														"src": "11484:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11487:1:7",
														"nodeType": "YulTypedName",
														"src": "11487:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11493:1:7",
														"nodeType": "YulTypedName",
														"src": "11493:1:7",
														"type": ""
													}
												],
												"src": "11453:185:7"
											},
											{
												"body": {
													"nativeSrc": "11672:152:7",
													"nodeType": "YulBlock",
													"src": "11672:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11689:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11689:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11692:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11692:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11682:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:7"
																},
																"nativeSrc": "11682:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11682:88:7"
															},
															"nativeSrc": "11682:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11682:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11786:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11786:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11789:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11789:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11779:6:7"
																},
																"nativeSrc": "11779:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11779:15:7"
															},
															"nativeSrc": "11779:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11779:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11810:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11810:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11813:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11813:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11803:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11803:6:7"
																},
																"nativeSrc": "11803:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11803:15:7"
															},
															"nativeSrc": "11803:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11803:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11644:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11644:180:7"
											},
											{
												"body": {
													"nativeSrc": "11875:149:7",
													"nodeType": "YulBlock",
													"src": "11875:149:7",
													"statements": [
														{
															"nativeSrc": "11885:25:7",
															"nodeType": "YulAssignment",
															"src": "11885:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11908:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11908:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11890:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11890:17:7"
																},
																"nativeSrc": "11890:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11890:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11885:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11885:1:7"
																}
															]
														},
														{
															"nativeSrc": "11919:25:7",
															"nodeType": "YulAssignment",
															"src": "11919:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11942:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11942:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11924:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11924:17:7"
																},
																"nativeSrc": "11924:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11924:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11919:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11919:1:7"
																}
															]
														},
														{
															"nativeSrc": "11953:17:7",
															"nodeType": "YulAssignment",
															"src": "11953:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11965:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11965:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11968:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11968:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11961:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11961:3:7"
																},
																"nativeSrc": "11961:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11961:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11953:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11953:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11995:22:7",
																"nodeType": "YulBlock",
																"src": "11995:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11997:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11997:16:7"
																			},
																			"nativeSrc": "11997:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11997:18:7"
																		},
																		"nativeSrc": "11997:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11997:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11986:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11986:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11992:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11992:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11983:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11983:2:7"
																},
																"nativeSrc": "11983:11:7",
																"nodeType": "YulFunctionCall",
																"src": "11983:11:7"
															},
															"nativeSrc": "11980:37:7",
															"nodeType": "YulIf",
															"src": "11980:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11830:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11861:1:7",
														"nodeType": "YulTypedName",
														"src": "11861:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11864:1:7",
														"nodeType": "YulTypedName",
														"src": "11864:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11870:4:7",
														"nodeType": "YulTypedName",
														"src": "11870:4:7",
														"type": ""
													}
												],
												"src": "11830:194:7"
											},
											{
												"body": {
													"nativeSrc": "12064:142:7",
													"nodeType": "YulBlock",
													"src": "12064:142:7",
													"statements": [
														{
															"nativeSrc": "12074:25:7",
															"nodeType": "YulAssignment",
															"src": "12074:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12097:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12097:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12079:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12079:17:7"
																},
																"nativeSrc": "12079:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12079:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12074:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12074:1:7"
																}
															]
														},
														{
															"nativeSrc": "12108:25:7",
															"nodeType": "YulAssignment",
															"src": "12108:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12131:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12131:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12113:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12113:17:7"
																},
																"nativeSrc": "12113:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12113:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12108:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12108:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12155:22:7",
																"nodeType": "YulBlock",
																"src": "12155:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12157:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12157:16:7"
																			},
																			"nativeSrc": "12157:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12157:18:7"
																		},
																		"nativeSrc": "12157:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12157:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12152:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12152:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12145:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12145:6:7"
																},
																"nativeSrc": "12145:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12145:9:7"
															},
															"nativeSrc": "12142:35:7",
															"nodeType": "YulIf",
															"src": "12142:35:7"
														},
														{
															"nativeSrc": "12186:14:7",
															"nodeType": "YulAssignment",
															"src": "12186:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12195:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12195:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12198:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12198:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "12191:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12191:3:7"
																},
																"nativeSrc": "12191:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12191:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12186:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12186:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "12030:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12053:1:7",
														"nodeType": "YulTypedName",
														"src": "12053:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12056:1:7",
														"nodeType": "YulTypedName",
														"src": "12056:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12062:1:7",
														"nodeType": "YulTypedName",
														"src": "12062:1:7",
														"type": ""
													}
												],
												"src": "12030:176:7"
											},
											{
												"body": {
													"nativeSrc": "12256:147:7",
													"nodeType": "YulBlock",
													"src": "12256:147:7",
													"statements": [
														{
															"nativeSrc": "12266:25:7",
															"nodeType": "YulAssignment",
															"src": "12266:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12289:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12289:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12271:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12271:17:7"
																},
																"nativeSrc": "12271:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12271:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12266:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12266:1:7"
																}
															]
														},
														{
															"nativeSrc": "12300:25:7",
															"nodeType": "YulAssignment",
															"src": "12300:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12323:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12323:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12305:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12305:17:7"
																},
																"nativeSrc": "12305:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12305:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12300:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12300:1:7"
																}
															]
														},
														{
															"nativeSrc": "12334:16:7",
															"nodeType": "YulAssignment",
															"src": "12334:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12345:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12345:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12348:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12348:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12341:3:7"
																},
																"nativeSrc": "12341:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12341:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12334:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12334:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12374:22:7",
																"nodeType": "YulBlock",
																"src": "12374:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12376:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12376:16:7"
																			},
																			"nativeSrc": "12376:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12376:18:7"
																		},
																		"nativeSrc": "12376:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12376:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12366:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12366:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12369:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12369:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12363:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12363:2:7"
																},
																"nativeSrc": "12363:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12363:10:7"
															},
															"nativeSrc": "12360:36:7",
															"nodeType": "YulIf",
															"src": "12360:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12212:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12243:1:7",
														"nodeType": "YulTypedName",
														"src": "12243:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12246:1:7",
														"nodeType": "YulTypedName",
														"src": "12246:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12252:3:7",
														"nodeType": "YulTypedName",
														"src": "12252:3:7",
														"type": ""
													}
												],
												"src": "12212:191:7"
											},
											{
												"body": {
													"nativeSrc": "12437:152:7",
													"nodeType": "YulBlock",
													"src": "12437:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12454:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12454:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12457:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12457:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12447:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12447:6:7"
																},
																"nativeSrc": "12447:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12447:88:7"
															},
															"nativeSrc": "12447:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12447:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12551:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12554:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12554:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:7"
																},
																"nativeSrc": "12544:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12544:15:7"
															},
															"nativeSrc": "12544:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12544:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12575:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12575:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12578:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12578:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12568:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12568:6:7"
																},
																"nativeSrc": "12568:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12568:15:7"
															},
															"nativeSrc": "12568:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12568:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12409:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12409:180:7"
											},
											{
												"body": {
													"nativeSrc": "12709:34:7",
													"nodeType": "YulBlock",
													"src": "12709:34:7",
													"statements": [
														{
															"nativeSrc": "12719:18:7",
															"nodeType": "YulAssignment",
															"src": "12719:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "12734:3:7",
																"nodeType": "YulIdentifier",
																"src": "12734:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12719:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "12719:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12595:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12681:3:7",
														"nodeType": "YulTypedName",
														"src": "12681:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12686:6:7",
														"nodeType": "YulTypedName",
														"src": "12686:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12697:11:7",
														"nodeType": "YulTypedName",
														"src": "12697:11:7",
														"type": ""
													}
												],
												"src": "12595:148:7"
											},
											{
												"body": {
													"nativeSrc": "12859:280:7",
													"nodeType": "YulBlock",
													"src": "12859:280:7",
													"statements": [
														{
															"nativeSrc": "12869:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12869:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12916:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12916:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12883:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "12883:32:7"
																},
																"nativeSrc": "12883:39:7",
																"nodeType": "YulFunctionCall",
																"src": "12883:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12873:6:7",
																	"nodeType": "YulTypedName",
																	"src": "12873:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12931:96:7",
															"nodeType": "YulAssignment",
															"src": "12931:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13015:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13015:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13020:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13020:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12938:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "12938:76:7"
																},
																"nativeSrc": "12938:89:7",
																"nodeType": "YulFunctionCall",
																"src": "12938:89:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12931:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13075:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13075:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13082:4:7",
																				"nodeType": "YulLiteral",
																				"src": "13082:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13071:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:7"
																		},
																		"nativeSrc": "13071:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13071:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13089:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13089:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13094:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13094:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13036:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "13036:34:7"
																},
																"nativeSrc": "13036:65:7",
																"nodeType": "YulFunctionCall",
																"src": "13036:65:7"
															},
															"nativeSrc": "13036:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "13036:65:7"
														},
														{
															"nativeSrc": "13110:23:7",
															"nodeType": "YulAssignment",
															"src": "13110:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13121:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13121:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13126:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13126:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13117:3:7"
																},
																"nativeSrc": "13117:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13117:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13110:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13110:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12749:390:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12840:5:7",
														"nodeType": "YulTypedName",
														"src": "12840:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12847:3:7",
														"nodeType": "YulTypedName",
														"src": "12847:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12855:3:7",
														"nodeType": "YulTypedName",
														"src": "12855:3:7",
														"type": ""
													}
												],
												"src": "12749:390:7"
											},
											{
												"body": {
													"nativeSrc": "13251:45:7",
													"nodeType": "YulBlock",
													"src": "13251:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13273:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13273:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13281:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13281:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13269:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13269:3:7"
																		},
																		"nativeSrc": "13269:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13269:14:7"
																	},
																	{
																		"hexValue": "2d",
																		"kind": "string",
																		"nativeSrc": "13285:3:7",
																		"nodeType": "YulLiteral",
																		"src": "13285:3:7",
																		"type": "",
																		"value": "-"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13262:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13262:6:7"
																},
																"nativeSrc": "13262:27:7",
																"nodeType": "YulFunctionCall",
																"src": "13262:27:7"
															},
															"nativeSrc": "13262:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "13262:27:7"
														}
													]
												},
												"name": "store_literal_in_memory_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
												"nativeSrc": "13145:151:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13243:6:7",
														"nodeType": "YulTypedName",
														"src": "13243:6:7",
														"type": ""
													}
												],
												"src": "13145:151:7"
											},
											{
												"body": {
													"nativeSrc": "13466:236:7",
													"nodeType": "YulBlock",
													"src": "13466:236:7",
													"statements": [
														{
															"nativeSrc": "13476:91:7",
															"nodeType": "YulAssignment",
															"src": "13476:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13560:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13560:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13565:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13483:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "13483:76:7"
																},
																"nativeSrc": "13483:84:7",
																"nodeType": "YulFunctionCall",
																"src": "13483:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13476:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13476:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13665:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13665:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"nativeSrc": "13576:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13576:88:7"
																},
																"nativeSrc": "13576:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13576:93:7"
															},
															"nativeSrc": "13576:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13576:93:7"
														},
														{
															"nativeSrc": "13678:18:7",
															"nodeType": "YulAssignment",
															"src": "13678:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13689:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13694:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13694:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13685:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13685:3:7"
																},
																"nativeSrc": "13685:11:7",
																"nodeType": "YulFunctionCall",
																"src": "13685:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13678:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13302:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13454:3:7",
														"nodeType": "YulTypedName",
														"src": "13454:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13462:3:7",
														"nodeType": "YulTypedName",
														"src": "13462:3:7",
														"type": ""
													}
												],
												"src": "13302:400:7"
											},
											{
												"body": {
													"nativeSrc": "13814:45:7",
													"nodeType": "YulBlock",
													"src": "13814:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13836:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13836:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13844:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13844:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13832:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13832:3:7"
																		},
																		"nativeSrc": "13832:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13832:14:7"
																	},
																	{
																		"hexValue": "20",
																		"kind": "string",
																		"nativeSrc": "13848:3:7",
																		"nodeType": "YulLiteral",
																		"src": "13848:3:7",
																		"type": "",
																		"value": " "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13825:6:7"
																},
																"nativeSrc": "13825:27:7",
																"nodeType": "YulFunctionCall",
																"src": "13825:27:7"
															},
															"nativeSrc": "13825:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "13825:27:7"
														}
													]
												},
												"name": "store_literal_in_memory_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
												"nativeSrc": "13708:151:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13806:6:7",
														"nodeType": "YulTypedName",
														"src": "13806:6:7",
														"type": ""
													}
												],
												"src": "13708:151:7"
											},
											{
												"body": {
													"nativeSrc": "14029:236:7",
													"nodeType": "YulBlock",
													"src": "14029:236:7",
													"statements": [
														{
															"nativeSrc": "14039:91:7",
															"nodeType": "YulAssignment",
															"src": "14039:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14123:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14128:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14128:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14046:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "14046:76:7"
																},
																"nativeSrc": "14046:84:7",
																"nodeType": "YulFunctionCall",
																"src": "14046:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14039:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14039:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14228:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14228:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
																	"nativeSrc": "14139:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14139:88:7"
																},
																"nativeSrc": "14139:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14139:93:7"
															},
															"nativeSrc": "14139:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14139:93:7"
														},
														{
															"nativeSrc": "14241:18:7",
															"nodeType": "YulAssignment",
															"src": "14241:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14252:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14252:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14257:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14257:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14248:3:7"
																},
																"nativeSrc": "14248:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14248:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14241:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13865:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14017:3:7",
														"nodeType": "YulTypedName",
														"src": "14017:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14025:3:7",
														"nodeType": "YulTypedName",
														"src": "14025:3:7",
														"type": ""
													}
												],
												"src": "13865:400:7"
											},
											{
												"body": {
													"nativeSrc": "14377:45:7",
													"nodeType": "YulBlock",
													"src": "14377:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14399:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14399:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14407:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14407:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14395:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14395:3:7"
																		},
																		"nativeSrc": "14395:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14395:14:7"
																	},
																	{
																		"hexValue": "3a",
																		"kind": "string",
																		"nativeSrc": "14411:3:7",
																		"nodeType": "YulLiteral",
																		"src": "14411:3:7",
																		"type": "",
																		"value": ":"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14388:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14388:6:7"
																},
																"nativeSrc": "14388:27:7",
																"nodeType": "YulFunctionCall",
																"src": "14388:27:7"
															},
															"nativeSrc": "14388:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "14388:27:7"
														}
													]
												},
												"name": "store_literal_in_memory_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
												"nativeSrc": "14271:151:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14369:6:7",
														"nodeType": "YulTypedName",
														"src": "14369:6:7",
														"type": ""
													}
												],
												"src": "14271:151:7"
											},
											{
												"body": {
													"nativeSrc": "14592:236:7",
													"nodeType": "YulBlock",
													"src": "14592:236:7",
													"statements": [
														{
															"nativeSrc": "14602:91:7",
															"nodeType": "YulAssignment",
															"src": "14602:91:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14686:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14686:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14691:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14691:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14609:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "14609:76:7"
																},
																"nativeSrc": "14609:84:7",
																"nodeType": "YulFunctionCall",
																"src": "14609:84:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14602:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14791:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14791:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																	"nativeSrc": "14702:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14702:88:7"
																},
																"nativeSrc": "14702:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14702:93:7"
															},
															"nativeSrc": "14702:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14702:93:7"
														},
														{
															"nativeSrc": "14804:18:7",
															"nodeType": "YulAssignment",
															"src": "14804:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14815:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14815:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14820:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14820:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14811:3:7"
																},
																"nativeSrc": "14811:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14811:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14804:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14428:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14580:3:7",
														"nodeType": "YulTypedName",
														"src": "14580:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14588:3:7",
														"nodeType": "YulTypedName",
														"src": "14588:3:7",
														"type": ""
													}
												],
												"src": "14428:400:7"
											},
											{
												"body": {
													"nativeSrc": "15715:1524:7",
													"nodeType": "YulBlock",
													"src": "15715:1524:7",
													"statements": [
														{
															"nativeSrc": "15726:102:7",
															"nodeType": "YulAssignment",
															"src": "15726:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15815:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15815:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15824:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15824:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15733:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "15733:81:7"
																},
																"nativeSrc": "15733:95:7",
																"nodeType": "YulFunctionCall",
																"src": "15733:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15726:3:7"
																}
															]
														},
														{
															"nativeSrc": "15838:155:7",
															"nodeType": "YulAssignment",
															"src": "15838:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15989:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15989:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15845:142:7",
																	"nodeType": "YulIdentifier",
																	"src": "15845:142:7"
																},
																"nativeSrc": "15845:148:7",
																"nodeType": "YulFunctionCall",
																"src": "15845:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15838:3:7"
																}
															]
														},
														{
															"nativeSrc": "16003:102:7",
															"nodeType": "YulAssignment",
															"src": "16003:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16092:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16092:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16101:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16101:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16010:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "16010:81:7"
																},
																"nativeSrc": "16010:95:7",
																"nodeType": "YulFunctionCall",
																"src": "16010:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16003:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16003:3:7"
																}
															]
														},
														{
															"nativeSrc": "16115:155:7",
															"nodeType": "YulAssignment",
															"src": "16115:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16266:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16266:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16122:142:7",
																	"nodeType": "YulIdentifier",
																	"src": "16122:142:7"
																},
																"nativeSrc": "16122:148:7",
																"nodeType": "YulFunctionCall",
																"src": "16122:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16115:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16115:3:7"
																}
															]
														},
														{
															"nativeSrc": "16280:102:7",
															"nodeType": "YulAssignment",
															"src": "16280:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16369:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16369:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16378:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16378:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16287:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "16287:81:7"
																},
																"nativeSrc": "16287:95:7",
																"nodeType": "YulFunctionCall",
																"src": "16287:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16280:3:7"
																}
															]
														},
														{
															"nativeSrc": "16392:155:7",
															"nodeType": "YulAssignment",
															"src": "16392:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16543:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16543:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16399:142:7",
																	"nodeType": "YulIdentifier",
																	"src": "16399:142:7"
																},
																"nativeSrc": "16399:148:7",
																"nodeType": "YulFunctionCall",
																"src": "16399:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16392:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16392:3:7"
																}
															]
														},
														{
															"nativeSrc": "16557:102:7",
															"nodeType": "YulAssignment",
															"src": "16557:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16646:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16646:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16655:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16655:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16564:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "16564:81:7"
																},
																"nativeSrc": "16564:95:7",
																"nodeType": "YulFunctionCall",
																"src": "16564:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16557:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16557:3:7"
																}
															]
														},
														{
															"nativeSrc": "16669:155:7",
															"nodeType": "YulAssignment",
															"src": "16669:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16820:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16820:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16676:142:7",
																	"nodeType": "YulIdentifier",
																	"src": "16676:142:7"
																},
																"nativeSrc": "16676:148:7",
																"nodeType": "YulFunctionCall",
																"src": "16676:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16669:3:7"
																}
															]
														},
														{
															"nativeSrc": "16834:102:7",
															"nodeType": "YulAssignment",
															"src": "16834:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "16923:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16923:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16932:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16932:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16841:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "16841:81:7"
																},
																"nativeSrc": "16841:95:7",
																"nodeType": "YulFunctionCall",
																"src": "16841:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16834:3:7"
																}
															]
														},
														{
															"nativeSrc": "16946:155:7",
															"nodeType": "YulAssignment",
															"src": "16946:155:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17097:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17097:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16953:142:7",
																	"nodeType": "YulIdentifier",
																	"src": "16953:142:7"
																},
																"nativeSrc": "16953:148:7",
																"nodeType": "YulFunctionCall",
																"src": "16953:148:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16946:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16946:3:7"
																}
															]
														},
														{
															"nativeSrc": "17111:102:7",
															"nodeType": "YulAssignment",
															"src": "17111:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "17200:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17200:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17209:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17118:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "17118:81:7"
																},
																"nativeSrc": "17118:95:7",
																"nodeType": "YulFunctionCall",
																"src": "17118:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17111:3:7"
																}
															]
														},
														{
															"nativeSrc": "17223:10:7",
															"nodeType": "YulAssignment",
															"src": "17223:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "17230:3:7",
																"nodeType": "YulIdentifier",
																"src": "17230:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17223:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17223:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_string_memory_ptr_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_t_string_memory_ptr_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_t_string_memory_ptr_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14834:2405:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15654:3:7",
														"nodeType": "YulTypedName",
														"src": "15654:3:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "15660:6:7",
														"nodeType": "YulTypedName",
														"src": "15660:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15668:6:7",
														"nodeType": "YulTypedName",
														"src": "15668:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15676:6:7",
														"nodeType": "YulTypedName",
														"src": "15676:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15684:6:7",
														"nodeType": "YulTypedName",
														"src": "15684:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15692:6:7",
														"nodeType": "YulTypedName",
														"src": "15692:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15700:6:7",
														"nodeType": "YulTypedName",
														"src": "15700:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15711:3:7",
														"nodeType": "YulTypedName",
														"src": "15711:3:7",
														"type": ""
													}
												],
												"src": "14834:2405:7"
											},
											{
												"body": {
													"nativeSrc": "17399:288:7",
													"nodeType": "YulBlock",
													"src": "17399:288:7",
													"statements": [
														{
															"nativeSrc": "17409:26:7",
															"nodeType": "YulAssignment",
															"src": "17409:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17421:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17421:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17432:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17432:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17417:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17417:3:7"
																},
																"nativeSrc": "17417:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17417:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17409:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17409:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17489:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17489:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17502:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17502:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17513:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17513:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17498:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17498:3:7"
																		},
																		"nativeSrc": "17498:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17498:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17445:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17445:43:7"
																},
																"nativeSrc": "17445:71:7",
																"nodeType": "YulFunctionCall",
																"src": "17445:71:7"
															},
															"nativeSrc": "17445:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "17445:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17570:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17570:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17583:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17583:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17594:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17594:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17579:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17579:3:7"
																		},
																		"nativeSrc": "17579:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17579:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17526:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17526:43:7"
																},
																"nativeSrc": "17526:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17526:72:7"
															},
															"nativeSrc": "17526:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17526:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17652:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17652:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17665:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17665:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17676:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17676:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17661:3:7"
																		},
																		"nativeSrc": "17661:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17661:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17608:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17608:43:7"
																},
																"nativeSrc": "17608:72:7",
																"nodeType": "YulFunctionCall",
																"src": "17608:72:7"
															},
															"nativeSrc": "17608:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "17608:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17245:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17355:9:7",
														"nodeType": "YulTypedName",
														"src": "17355:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17367:6:7",
														"nodeType": "YulTypedName",
														"src": "17367:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17375:6:7",
														"nodeType": "YulTypedName",
														"src": "17375:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17383:6:7",
														"nodeType": "YulTypedName",
														"src": "17383:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17394:4:7",
														"nodeType": "YulTypedName",
														"src": "17394:4:7",
														"type": ""
													}
												],
												"src": "17245:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_address__to_t_string_memory_ptr_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No transactions have occurred ye\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561(memPtr) {\n\n        mstore(add(memPtr, 0), \"-\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561(pos)\n        end := add(pos, 1)\n    }\n\n    function store_literal_in_memory_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a(memPtr) {\n\n        mstore(add(memPtr, 0), \" \")\n\n    }\n\n    function abi_encode_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a(pos)\n        end := add(pos, 1)\n    }\n\n    function store_literal_in_memory_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c(memPtr) {\n\n        mstore(add(memPtr, 0), \":\")\n\n    }\n\n    function abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_string_memory_ptr_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_t_string_memory_ptr_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_t_string_memory_ptr_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_t_string_memory_ptr_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value5, value4, value3, value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        pos := abi_encode_t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n        pos := abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n\n        pos := abi_encode_t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value5,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c8063841b39fc11610095578063bead3f5011610064578063bead3f50146102b2578063d45e3f4a146102d0578063dd62ed3e146102ee578063f76f8d781461031e576100fe565b8063841b39fc1461022857806395d89b4114610246578063a3f4df7e14610264578063a9059cbb14610282576100fe565b80632e0f2625116100d15780632e0f26251461019e5780632ff2e9dc146101bc578063313ce567146101da57806370a08231146101f8576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61033c565b604051610117919061101c565b60405180910390f35b61013a600480360381019061013591906110cd565b6103cc565b6040516101479190611125565b60405180910390f35b6101586103ee565b604051610165919061114d565b60405180910390f35b61018860048036038101906101839190611166565b6103f7565b6040516101959190611125565b60405180910390f35b6101a661045b565b6040516101b391906111d1565b60405180910390f35b6101c4610460565b6040516101d1919061114d565b60405180910390f35b6101e2610481565b6040516101ef91906111d1565b60405180910390f35b610212600480360381019061020d91906111ea565b610489565b60405161021f919061114d565b60405180910390f35b6102306104ce565b60405161023d9190611224565b60405180910390f35b61024e6104d5565b60405161025b919061101c565b60405180910390f35b61026c610565565b604051610279919061101c565b60405180910390f35b61029c600480360381019061029791906110cd565b61059e565b6040516102a99190611125565b60405180910390f35b6102ba610607565b6040516102c79190611224565b60405180910390f35b6102d8610615565b6040516102e5919061101c565b60405180910390f35b6103086004803603810190610303919061123d565b61066c565b604051610315919061114d565b60405180910390f35b6103266106ee565b604051610333919061101c565b60405180910390f35b60606003805461034b906112a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610377906112a8565b80156103c25780601f10610399576101008083540402835291602001916103c2565b820191905f5260205f20905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b5f806103d6610727565b90506103e381858561072e565b600191505092915050565b5f600254905090565b5f80610404858585610740565b90508015610450577f360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd6104364261076e565b8686604051610447939291906112d8565b60405180910390a15b809150509392505050565b601281565b601260ff16600a6104719190611470565b6107d061047e91906114ba565b81565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f30905090565b6060600480546104e4906112a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610510906112a8565b801561055b5780601f106105325761010080835404028352916020019161055b565b820191905f5260205f20905b81548152906001019060200180831161053e57829003601f168201915b5050505050905090565b6040518060400160405280601c81526020017f556e69766572736974795f417374616e6149545f417373616e616c690000000081525081565b5f806105aa84846108c7565b905080156105fd577f360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd6105dc4261076e565b6105e4610727565b866040516105f4939291906112d8565b60405180910390a15b8091505092915050565b5f610610610727565b905090565b60605f4311610659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106509061156b565b60405180910390fd5b5f429050610666816108e9565b91505090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6040518060400160405280600381526020017f554141000000000000000000000000000000000000000000000000000000000081525081565b5f33905090565b61073b8383836001610a28565b505050565b5f8061074a610727565b9050610757858285610bf7565b610762858585610c89565b60019150509392505050565b60605f82036107b4576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506108c2565b5f8290505f5b5f82146107e35780806107cc90611589565b915050600a826107dc91906115fd565b91506107ba565b5f8167ffffffffffffffff8111156107fe576107fd61162d565b5b6040519080825280601f01601f1916602001820160405280156108305781602001600182028036833780820191505090505b5090505b5f85146108bb57600182610848919061165a565b9150600a85610857919061168d565b603061086391906116bd565b60f81b818381518110610879576108786116f0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600a856108b491906115fd565b9450610834565b8093505050505b919050565b5f806108d1610727565b90506108de818585610c89565b600191505092915050565b60605f6301e1338090505f6107b2828561090391906115fd565b61090d91906116bd565b90505f6228207290505f6001828588610926919061168d565b61093091906115fd565b61093a91906116bd565b90505f6201518090505f600182858a610953919061168d565b61095d91906115fd565b61096791906116bd565b90505f610e1090505f81848b61097d919061168d565b61098791906115fd565b90505f603c90505f81848d61099c919061168d565b6109a691906115fd565b90505f828d6109b5919061168d565b90505f6109c18b61076e565b6109ca8a61076e565b6109d38961076e565b6109dc8861076e565b6109e58761076e565b6109ee8761076e565b604051602001610a0396959493929190611835565b6040516020818303038152906040529050809c50505050505050505050505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a98575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a8f9190611224565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b08575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610aff9190611224565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bf1578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610be8919061114d565b60405180910390a35b50505050565b5f610c02848461066c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c835781811015610c74578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c6b939291906118c3565b60405180910390fd5b610c8284848484035f610a28565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cf9575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cf09190611224565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d69575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d609190611224565b60405180910390fd5b610d74838383610d79565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610dc9578060025f828254610dbd91906116bd565b92505081905550610e97565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e52578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e49939291906118c3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ede578060025f8282540392505081905550610f28565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f85919061114d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610fc9578082015181840152602081019050610fae565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fee82610f92565b610ff88185610f9c565b9350611008818560208601610fac565b61101181610fd4565b840191505092915050565b5f6020820190508181035f8301526110348184610fe4565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61106982611040565b9050919050565b6110798161105f565b8114611083575f80fd5b50565b5f8135905061109481611070565b92915050565b5f819050919050565b6110ac8161109a565b81146110b6575f80fd5b50565b5f813590506110c7816110a3565b92915050565b5f80604083850312156110e3576110e261103c565b5b5f6110f085828601611086565b9250506020611101858286016110b9565b9150509250929050565b5f8115159050919050565b61111f8161110b565b82525050565b5f6020820190506111385f830184611116565b92915050565b6111478161109a565b82525050565b5f6020820190506111605f83018461113e565b92915050565b5f805f6060848603121561117d5761117c61103c565b5b5f61118a86828701611086565b935050602061119b86828701611086565b92505060406111ac868287016110b9565b9150509250925092565b5f60ff82169050919050565b6111cb816111b6565b82525050565b5f6020820190506111e45f8301846111c2565b92915050565b5f602082840312156111ff576111fe61103c565b5b5f61120c84828501611086565b91505092915050565b61121e8161105f565b82525050565b5f6020820190506112375f830184611215565b92915050565b5f80604083850312156112535761125261103c565b5b5f61126085828601611086565b925050602061127185828601611086565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112bf57607f821691505b6020821081036112d2576112d161127b565b5b50919050565b5f6060820190508181035f8301526112f08186610fe4565b90506112ff6020830185611215565b61130c6040830184611215565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156113965780860481111561137257611371611314565b5b60018516156113815780820291505b808102905061138f85611341565b9450611356565b94509492505050565b5f826113ae5760019050611469565b816113bb575f9050611469565b81600181146113d157600281146113db5761140a565b6001915050611469565b60ff8411156113ed576113ec611314565b5b8360020a91508482111561140457611403611314565b5b50611469565b5060208310610133831016604e8410600b841016171561143f5782820a90508381111561143a57611439611314565b5b611469565b61144c848484600161134d565b9250905081840481111561146357611462611314565b5b81810290505b9392505050565b5f61147a8261109a565b91506114858361109a565b92506114b27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461139f565b905092915050565b5f6114c48261109a565b91506114cf8361109a565b92508282026114dd8161109a565b915082820484148315176114f4576114f3611314565b5b5092915050565b7f4e6f207472616e73616374696f6e732068617665206f636375727265642079655f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f611555602183610f9c565b9150611560826114fb565b604082019050919050565b5f6020820190508181035f83015261158281611549565b9050919050565b5f6115938261109a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115c5576115c4611314565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6116078261109a565b91506116128361109a565b925082611622576116216115d0565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6116648261109a565b915061166f8361109a565b925082820390508181111561168757611686611314565b5b92915050565b5f6116978261109a565b91506116a28361109a565b9250826116b2576116b16115d0565b5b828206905092915050565b5f6116c78261109a565b91506116d28361109a565b92508282019050808211156116ea576116e9611314565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b5f61173182610f92565b61173b818561171d565b935061174b818560208601610fac565b80840191505092915050565b7f2d000000000000000000000000000000000000000000000000000000000000005f82015250565b5f61178b60018361171d565b915061179682611757565b600182019050919050565b7f20000000000000000000000000000000000000000000000000000000000000005f82015250565b5f6117d560018361171d565b91506117e0826117a1565b600182019050919050565b7f3a000000000000000000000000000000000000000000000000000000000000005f82015250565b5f61181f60018361171d565b915061182a826117eb565b600182019050919050565b5f6118408289611727565b915061184b8261177f565b91506118578288611727565b91506118628261177f565b915061186e8287611727565b9150611879826117c9565b91506118858286611727565b915061189082611813565b915061189c8285611727565b91506118a782611813565b91506118b38284611727565b9150819050979650505050505050565b5f6060820190506118d65f830186611215565b6118e3602083018561113e565b6118f0604083018461113e565b94935050505056fea2646970667358221220019850ab23b908c5e02652c920fe65e506d4895d8d94382bab70b7fa1ae00b6664736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x841B39FC GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBEAD3F50 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBEAD3F50 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xD45E3F4A EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x31E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x841B39FC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x2E0F2625 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E0F2625 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x2FF2E9DC EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F8 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x11D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x11EA JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x399 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D6 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E3 DUP2 DUP6 DUP6 PUSH2 0x72E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x740 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x450 JUMPI PUSH32 0x360B0720D9FA9B8BAC8C66AEE32C6D152199E1FCDDE1447D98BDE22348F201BD PUSH2 0x436 TIMESTAMP PUSH2 0x76E JUMP JUMPDEST DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x447 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0xFF AND PUSH1 0xA PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x7D0 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x532 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E69766572736974795F417374616E6149545F417373616E616C6900000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AA DUP5 DUP5 PUSH2 0x8C7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x5FD JUMPI PUSH32 0x360B0720D9FA9B8BAC8C66AEE32C6D152199E1FCDDE1447D98BDE22348F201BD PUSH2 0x5DC TIMESTAMP PUSH2 0x76E JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0x727 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x610 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 NUMBER GT PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH2 0x666 DUP2 PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5541410000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA28 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x74A PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x757 DUP6 DUP3 DUP6 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x762 DUP6 DUP6 DUP6 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP3 SUB PUSH2 0x7B4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x8C2 JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 JUMPDEST PUSH0 DUP3 EQ PUSH2 0x7E3 JUMPI DUP1 DUP1 PUSH2 0x7CC SWAP1 PUSH2 0x1589 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP PUSH2 0x7BA JUMP JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x830 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH0 DUP6 EQ PUSH2 0x8BB JUMPI PUSH1 0x1 DUP3 PUSH2 0x848 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x879 JUMPI PUSH2 0x878 PUSH2 0x16F0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP5 POP PUSH2 0x834 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8D1 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP PUSH2 0x8DE DUP2 DUP6 DUP6 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH4 0x1E13380 SWAP1 POP PUSH0 PUSH2 0x7B2 DUP3 DUP6 PUSH2 0x903 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x282072 SWAP1 POP PUSH0 PUSH1 0x1 DUP3 DUP6 DUP9 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x930 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x15180 SWAP1 POP PUSH0 PUSH1 0x1 DUP3 DUP6 DUP11 PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE10 SWAP1 POP PUSH0 DUP2 DUP5 DUP12 PUSH2 0x97D SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3C SWAP1 POP PUSH0 DUP2 DUP5 DUP14 PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP14 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x9C1 DUP12 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9CA DUP11 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9D3 DUP10 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9DC DUP9 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9E5 DUP8 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x9EE DUP8 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA03 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA98 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8F SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB08 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBF1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC02 DUP5 DUP5 PUSH2 0x66C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC83 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC74 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC82 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA28 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD69 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD74 DUP4 DUP4 DUP4 PUSH2 0xD79 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE97 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE52 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF28 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF85 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFC9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFAE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFEE DUP3 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0xFF8 DUP2 DUP6 PUSH2 0xF9C JUMP JUMPDEST SWAP4 POP PUSH2 0x1008 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFD4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1034 DUP2 DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1069 DUP3 PUSH2 0x1040 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1079 DUP2 PUSH2 0x105F JUMP JUMPDEST DUP2 EQ PUSH2 0x1083 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1094 DUP2 PUSH2 0x1070 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AC DUP2 PUSH2 0x109A JUMP JUMPDEST DUP2 EQ PUSH2 0x10B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C7 DUP2 PUSH2 0x10A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1101 DUP6 DUP3 DUP7 ADD PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x110B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1138 PUSH0 DUP4 ADD DUP5 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1147 DUP2 PUSH2 0x109A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1160 PUSH0 DUP4 ADD DUP5 PUSH2 0x113E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117D JUMPI PUSH2 0x117C PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x118A DUP7 DUP3 DUP8 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x119B DUP7 DUP3 DUP8 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11AC DUP7 DUP3 DUP8 ADD PUSH2 0x10B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11CB DUP2 PUSH2 0x11B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FF JUMPI PUSH2 0x11FE PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x120C DUP5 DUP3 DUP6 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x121E DUP2 PUSH2 0x105F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1237 PUSH0 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1253 JUMPI PUSH2 0x1252 PUSH2 0x103C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1260 DUP6 DUP3 DUP7 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1271 DUP6 DUP3 DUP7 ADD PUSH2 0x1086 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x127B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12F0 DUP2 DUP7 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x12FF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x130C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1396 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1372 JUMPI PUSH2 0x1371 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1381 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x138F DUP6 PUSH2 0x1341 JUMP JUMPDEST SWAP5 POP PUSH2 0x1356 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x13AE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1469 JUMP JUMPDEST DUP2 PUSH2 0x13BB JUMPI PUSH0 SWAP1 POP PUSH2 0x1469 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x13D1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x13DB JUMPI PUSH2 0x140A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1469 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0x1314 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST POP PUSH2 0x1469 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x143F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x143A JUMPI PUSH2 0x1439 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x144C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x134D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1463 JUMPI PUSH2 0x1462 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x147A DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x1485 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP PUSH2 0x14B2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14C4 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x14CF DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14DD DUP2 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207472616E73616374696F6E732068617665206F63637572726564207965 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1555 PUSH1 0x21 DUP4 PUSH2 0xF9C JUMP JUMPDEST SWAP2 POP PUSH2 0x1560 DUP3 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1582 DUP2 PUSH2 0x1549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1593 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x15C5 JUMPI PUSH2 0x15C4 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1607 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x1612 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1622 JUMPI PUSH2 0x1621 PUSH2 0x15D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1664 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x166F DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1687 JUMPI PUSH2 0x1686 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1697 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x16A2 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x15D0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C7 DUP3 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x16D2 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16EA JUMPI PUSH2 0x16E9 PUSH2 0x1314 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1731 DUP3 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x173B DUP2 DUP6 PUSH2 0x171D JUMP JUMPDEST SWAP4 POP PUSH2 0x174B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2D00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x178B PUSH1 0x1 DUP4 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP PUSH2 0x1796 DUP3 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2000000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17D5 PUSH1 0x1 DUP4 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP PUSH2 0x17E0 DUP3 PUSH2 0x17A1 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3A00000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x181F PUSH1 0x1 DUP4 PUSH2 0x171D JUMP JUMPDEST SWAP2 POP PUSH2 0x182A DUP3 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 DUP3 DUP10 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x177F JUMP JUMPDEST SWAP2 POP PUSH2 0x1857 DUP3 DUP9 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1862 DUP3 PUSH2 0x177F JUMP JUMPDEST SWAP2 POP PUSH2 0x186E DUP3 DUP8 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1879 DUP3 PUSH2 0x17C9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1885 DUP3 DUP7 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x1890 DUP3 PUSH2 0x1813 JUMP JUMPDEST SWAP2 POP PUSH2 0x189C DUP3 DUP6 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1813 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B3 DUP3 DUP5 PUSH2 0x1727 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18D6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x18E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x113E JUMP JUMPDEST PUSH2 0x18F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x113E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD SWAP9 POP 0xAB 0x23 0xB9 ADDMOD 0xC5 0xE0 0x26 MSTORE 0xC9 KECCAK256 INVALID PUSH6 0xE506D4895D8D SWAP5 CODESIZE 0x2B 0xAB PUSH17 0xB7FA1AE00B6664736F6C63430008170033 ",
							"sourceMap": "174:3963:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3826:308:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;399:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2669:105:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:60:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2490:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2155:260;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;246:37:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;3826:308:6:-;3915:4;3932:12;3947:36;3966:4;3972:2;3976:6;3947:18;:36::i;:::-;3932:51;;3998:7;3994:108;;;4027:63;4049:30;4063:15;4049:13;:30::i;:::-;4081:4;4087:2;4027:63;;;;;;;;:::i;:::-;;;;;;;;3994:108;4119:7;4112:14;;;3826:308;;;;;:::o;357:35::-;390:2;357:35;:::o;399:71::-;390:2;452:17;;448:2;:21;;;;:::i;:::-;440:4;:30;;;;:::i;:::-;399:71;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2669:105:6:-;2726:7;2761:4;2746:20;;2669:105;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;290:60:6:-;;;;;;;;;;;;;;;;;;;:::o;3455:288::-;3526:4;3543:12;3558:26;3573:2;3577:6;3558:14;:26::i;:::-;3543:41;;3599:7;3595:116;;;3628:71;3650:30;3664:15;3650:13;:30::i;:::-;3682:12;:10;:12::i;:::-;3696:2;3628:71;;;;;;;;:::i;:::-;;;;;;;;3595:116;3728:7;3721:14;;;3455:288;;;;:::o;2490:102::-;2545:7;2572:12;:10;:12::i;:::-;2565:19;;2490:102;:::o;2155:260::-;2219:13;2268:1;2253:12;:16;2245:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2318:22;2343:15;2318:40;;2376:31;2392:14;2376:15;:31::i;:::-;2369:38;;;2155:260;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;246:37:6:-;;;;;;;;;;;;;;;;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;2839:537:6:-;2900:13;2939:1;2930:5;:10;2926:53;;2957:10;;;;;;;;;;;;;;;;;;;;;2926:53;2989:12;3004:5;2989:20;;3020:14;3045:78;3060:1;3052:4;:9;3045:78;;3078:8;;;;;:::i;:::-;;;;3109:2;3101:10;;;;;:::i;:::-;;;3045:78;;;3133:19;3165:6;3155:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3133:39;;3183:154;3199:1;3190:5;:10;3183:154;;3227:1;3217:11;;;;;:::i;:::-;;;3294:2;3286:5;:10;;;;:::i;:::-;3273:2;:24;;;;:::i;:::-;3260:39;;3243:6;3250;3243:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;3323:2;3314:11;;;;;:::i;:::-;;;3183:154;;;3361:6;3347:21;;;;;2839:537;;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;696:1374:6:-;763:13;894:21;918:8;894:32;;954:12;997:4;981:13;969:9;:25;;;;:::i;:::-;:32;;;;:::i;:::-;954:47;;1034:22;1059:7;1034:32;;1103:13;1166:1;1149:14;1132:13;1120:9;:25;;;;:::i;:::-;1119:44;;;;:::i;:::-;:48;;;;:::i;:::-;1103:64;;1198:20;1221:5;1198:28;;1253:11;1313:1;1298:12;1280:14;1268:9;:26;;;;:::i;:::-;1267:43;;;;:::i;:::-;:47;;;;:::i;:::-;1253:61;;1346:21;1370:4;1346:28;;1403:12;1447:13;1431:12;1419:9;:24;;;;:::i;:::-;1418:42;;;;:::i;:::-;1403:57;;1494:23;1520:2;1494:28;;1552:14;1599:15;1582:13;1570:9;:25;;;;:::i;:::-;1569:45;;;;:::i;:::-;1552:62;;1648:14;1677:15;1665:9;:27;;;;:::i;:::-;1648:44;;1761:28;1826:19;1840:4;1826:13;:19::i;:::-;1861:20;1875:5;1861:13;:20::i;:::-;1897:18;1911:3;1897:13;:18::i;:::-;1931:19;1945:4;1931:13;:19::i;:::-;1966:21;1980:6;1966:13;:21::i;:::-;2003;2017:6;2003:13;:21::i;:::-;1799:232;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1761:271;;2048:14;2041:21;;;;;;;;;;;;;;696:1374;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:533::-;6701:4;6739:2;6728:9;6724:18;6716:26;;6788:9;6782:4;6778:20;6774:1;6763:9;6759:17;6752:47;6816:78;6889:4;6880:6;6816:78;:::i;:::-;6808:86;;6904:72;6972:2;6961:9;6957:18;6948:6;6904:72;:::i;:::-;6986;7054:2;7043:9;7039:18;7030:6;6986:72;:::i;:::-;6532:533;;;;;;:::o;7071:180::-;7119:77;7116:1;7109:88;7216:4;7213:1;7206:15;7240:4;7237:1;7230:15;7257:102;7299:8;7346:5;7343:1;7339:13;7318:34;;7257:102;;;:::o;7365:848::-;7426:5;7433:4;7457:6;7448:15;;7481:5;7472:14;;7495:712;7516:1;7506:8;7503:15;7495:712;;;7611:4;7606:3;7602:14;7596:4;7593:24;7590:50;;;7620:18;;:::i;:::-;7590:50;7670:1;7660:8;7656:16;7653:451;;;8085:4;8078:5;8074:16;8065:25;;7653:451;8135:4;8129;8125:15;8117:23;;8165:32;8188:8;8165:32;:::i;:::-;8153:44;;7495:712;;;7365:848;;;;;;;:::o;8219:1073::-;8273:5;8464:8;8454:40;;8485:1;8476:10;;8487:5;;8454:40;8513:4;8503:36;;8530:1;8521:10;;8532:5;;8503:36;8599:4;8647:1;8642:27;;;;8683:1;8678:191;;;;8592:277;;8642:27;8660:1;8651:10;;8662:5;;;8678:191;8723:3;8713:8;8710:17;8707:43;;;8730:18;;:::i;:::-;8707:43;8779:8;8776:1;8772:16;8763:25;;8814:3;8807:5;8804:14;8801:40;;;8821:18;;:::i;:::-;8801:40;8854:5;;;8592:277;;8978:2;8968:8;8965:16;8959:3;8953:4;8950:13;8946:36;8928:2;8918:8;8915:16;8910:2;8904:4;8901:12;8897:35;8881:111;8878:246;;;9034:8;9028:4;9024:19;9015:28;;9069:3;9062:5;9059:14;9056:40;;;9076:18;;:::i;:::-;9056:40;9109:5;;8878:246;9149:42;9187:3;9177:8;9171:4;9168:1;9149:42;:::i;:::-;9134:57;;;;9223:4;9218:3;9214:14;9207:5;9204:25;9201:51;;;9232:18;;:::i;:::-;9201:51;9281:4;9274:5;9270:16;9261:25;;8219:1073;;;;;;:::o;9298:285::-;9358:5;9382:23;9400:4;9382:23;:::i;:::-;9374:31;;9426:27;9444:8;9426:27;:::i;:::-;9414:39;;9472:104;9509:66;9499:8;9493:4;9472:104;:::i;:::-;9463:113;;9298:285;;;;:::o;9589:410::-;9629:7;9652:20;9670:1;9652:20;:::i;:::-;9647:25;;9686:20;9704:1;9686:20;:::i;:::-;9681:25;;9741:1;9738;9734:9;9763:30;9781:11;9763:30;:::i;:::-;9752:41;;9942:1;9933:7;9929:15;9926:1;9923:22;9903:1;9896:9;9876:83;9853:139;;9972:18;;:::i;:::-;9853:139;9637:362;9589:410;;;;:::o;10005:220::-;10145:34;10141:1;10133:6;10129:14;10122:58;10214:3;10209:2;10201:6;10197:15;10190:28;10005:220;:::o;10231:366::-;10373:3;10394:67;10458:2;10453:3;10394:67;:::i;:::-;10387:74;;10470:93;10559:3;10470:93;:::i;:::-;10588:2;10583:3;10579:12;10572:19;;10231:366;;;:::o;10603:419::-;10769:4;10807:2;10796:9;10792:18;10784:26;;10856:9;10850:4;10846:20;10842:1;10831:9;10827:17;10820:47;10884:131;11010:4;10884:131;:::i;:::-;10876:139;;10603:419;;;:::o;11028:233::-;11067:3;11090:24;11108:5;11090:24;:::i;:::-;11081:33;;11136:66;11129:5;11126:77;11123:103;;11206:18;;:::i;:::-;11123:103;11253:1;11246:5;11242:13;11235:20;;11028:233;;;:::o;11267:180::-;11315:77;11312:1;11305:88;11412:4;11409:1;11402:15;11436:4;11433:1;11426:15;11453:185;11493:1;11510:20;11528:1;11510:20;:::i;:::-;11505:25;;11544:20;11562:1;11544:20;:::i;:::-;11539:25;;11583:1;11573:35;;11588:18;;:::i;:::-;11573:35;11630:1;11627;11623:9;11618:14;;11453:185;;;;:::o;11644:180::-;11692:77;11689:1;11682:88;11789:4;11786:1;11779:15;11813:4;11810:1;11803:15;11830:194;11870:4;11890:20;11908:1;11890:20;:::i;:::-;11885:25;;11924:20;11942:1;11924:20;:::i;:::-;11919:25;;11968:1;11965;11961:9;11953:17;;11992:1;11986:4;11983:11;11980:37;;;11997:18;;:::i;:::-;11980:37;11830:194;;;;:::o;12030:176::-;12062:1;12079:20;12097:1;12079:20;:::i;:::-;12074:25;;12113:20;12131:1;12113:20;:::i;:::-;12108:25;;12152:1;12142:35;;12157:18;;:::i;:::-;12142:35;12198:1;12195;12191:9;12186:14;;12030:176;;;;:::o;12212:191::-;12252:3;12271:20;12289:1;12271:20;:::i;:::-;12266:25;;12305:20;12323:1;12305:20;:::i;:::-;12300:25;;12348:1;12345;12341:9;12334:16;;12369:3;12366:1;12363:10;12360:36;;;12376:18;;:::i;:::-;12360:36;12212:191;;;;:::o;12409:180::-;12457:77;12454:1;12447:88;12554:4;12551:1;12544:15;12578:4;12575:1;12568:15;12595:148;12697:11;12734:3;12719:18;;12595:148;;;;:::o;12749:390::-;12855:3;12883:39;12916:5;12883:39;:::i;:::-;12938:89;13020:6;13015:3;12938:89;:::i;:::-;12931:96;;13036:65;13094:6;13089:3;13082:4;13075:5;13071:16;13036:65;:::i;:::-;13126:6;13121:3;13117:16;13110:23;;12859:280;12749:390;;;;:::o;13145:151::-;13285:3;13281:1;13273:6;13269:14;13262:27;13145:151;:::o;13302:400::-;13462:3;13483:84;13565:1;13560:3;13483:84;:::i;:::-;13476:91;;13576:93;13665:3;13576:93;:::i;:::-;13694:1;13689:3;13685:11;13678:18;;13302:400;;;:::o;13708:151::-;13848:3;13844:1;13836:6;13832:14;13825:27;13708:151;:::o;13865:400::-;14025:3;14046:84;14128:1;14123:3;14046:84;:::i;:::-;14039:91;;14139:93;14228:3;14139:93;:::i;:::-;14257:1;14252:3;14248:11;14241:18;;13865:400;;;:::o;14271:151::-;14411:3;14407:1;14399:6;14395:14;14388:27;14271:151;:::o;14428:400::-;14588:3;14609:84;14691:1;14686:3;14609:84;:::i;:::-;14602:91;;14702:93;14791:3;14702:93;:::i;:::-;14820:1;14815:3;14811:11;14804:18;;14428:400;;;:::o;14834:2405::-;15711:3;15733:95;15824:3;15815:6;15733:95;:::i;:::-;15726:102;;15845:148;15989:3;15845:148;:::i;:::-;15838:155;;16010:95;16101:3;16092:6;16010:95;:::i;:::-;16003:102;;16122:148;16266:3;16122:148;:::i;:::-;16115:155;;16287:95;16378:3;16369:6;16287:95;:::i;:::-;16280:102;;16399:148;16543:3;16399:148;:::i;:::-;16392:155;;16564:95;16655:3;16646:6;16564:95;:::i;:::-;16557:102;;16676:148;16820:3;16676:148;:::i;:::-;16669:155;;16841:95;16932:3;16923:6;16841:95;:::i;:::-;16834:102;;16953:148;17097:3;16953:148;:::i;:::-;16946:155;;17118:95;17209:3;17200:6;17118:95;:::i;:::-;17111:102;;17230:3;17223:10;;14834:2405;;;;;;;;;:::o;17245:442::-;17394:4;17432:2;17421:9;17417:18;17409:26;;17445:71;17513:1;17502:9;17498:17;17489:6;17445:71;:::i;:::-;17526:72;17594:2;17583:9;17579:18;17570:6;17526:72;:::i;:::-;17608;17676:2;17665:9;17661:18;17652:6;17608:72;:::i;:::-;17245:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1289200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DECIMALS()": "354",
								"INITIAL_SUPPLY()": "infinite",
								"NAME()": "infinite",
								"SYMBOL()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "405",
								"getLatestTransactionTimestamp()": "infinite",
								"getTransactionReceiver()": "402",
								"getTransactionSender()": "435",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_uintToString(uint256)": "infinite",
								"timestampToDate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 602,
									"end": 688,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 602,
									"end": 688,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 602,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 626,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 622,
									"end": 626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "1C"
								},
								{
									"begin": 622,
									"end": 626,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "556E69766572736974795F417374616E6149545F417373616E616C6900000000"
								},
								{
									"begin": 622,
									"end": 626,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 622,
									"end": 626,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 634,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 634,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 634,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 628,
									"end": 634,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 634,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "5541410000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 634,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 628,
									"end": 634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 647,
									"end": 680,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 653,
									"end": 663,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 390,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 452,
									"end": 469,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 452,
									"end": 469,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 448,
									"end": 450,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 448,
									"end": 469,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 448,
									"end": 469,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 448,
									"end": 469,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 448,
									"end": 469,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 448,
									"end": 469,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 448,
									"end": 469,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 448,
									"end": 469,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 440,
									"end": 444,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "7D0"
								},
								{
									"begin": 440,
									"end": 470,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 440,
									"end": 470,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 440,
									"end": 470,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 440,
									"end": 470,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 440,
									"end": 470,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 440,
									"end": 470,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 440,
									"end": 470,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 647,
									"end": 652,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 652,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 652,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 647,
									"end": 680,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 680,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 647,
									"end": 680,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 680,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 647,
									"end": 680,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7521,
									"end": 7526,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 7563,
									"end": 7567,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7545,
									"end": 7568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7607,
									"end": 7615,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7589,
									"end": 7616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7672,
									"end": 7738,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7662,
									"end": 7670,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 7635,
									"end": 7739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7461,
									"end": 7746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7792,
									"end": 7799,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7833,
									"end": 7834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7815,
									"end": 7835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7867,
									"end": 7868,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7849,
									"end": 7869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7944,
									"end": 7955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 7926,
									"end": 7956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8105,
									"end": 8106,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8096,
									"end": 8103,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8092,
									"end": 8107,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 8089,
									"end": 8090,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8086,
									"end": 8108,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8066,
									"end": 8067,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8039,
									"end": 8122,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 8135,
									"end": 8153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7800,
									"end": 8162,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7752,
									"end": 8162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8168,
									"end": 8294,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 8168,
									"end": 8294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8205,
									"end": 8212,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8245,
									"end": 8287,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8238,
									"end": 8243,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8234,
									"end": 8288,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8223,
									"end": 8288,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8223,
									"end": 8288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8168,
									"end": 8294,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8168,
									"end": 8294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8168,
									"end": 8294,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8168,
									"end": 8294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8396,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 8300,
									"end": 8396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8337,
									"end": 8344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8366,
									"end": 8390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 8384,
									"end": 8389,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8366,
									"end": 8390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 8366,
									"end": 8390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8366,
									"end": 8390,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 8366,
									"end": 8390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8355,
									"end": 8390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8355,
									"end": 8390,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8396,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8402,
									"end": 8520,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8402,
									"end": 8520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 8507,
									"end": 8512,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 8489,
									"end": 8513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8513,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 8489,
									"end": 8513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8477,
									"end": 8514,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8402,
									"end": 8520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8402,
									"end": 8520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8402,
									"end": 8520,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8748,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 8526,
									"end": 8748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8619,
									"end": 8623,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8657,
									"end": 8659,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8646,
									"end": 8655,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8642,
									"end": 8660,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8634,
									"end": 8660,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8634,
									"end": 8660,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8741,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 8738,
									"end": 8739,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8727,
									"end": 8736,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8723,
									"end": 8740,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8714,
									"end": 8720,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8741,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8670,
									"end": 8741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8741,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 8670,
									"end": 8741,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8748,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8748,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8794,
									"end": 8797,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8831,
									"end": 8832,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8813,
									"end": 8833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8813,
									"end": 8833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8808,
									"end": 8833,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8808,
									"end": 8833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8865,
									"end": 8866,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 8847,
									"end": 8867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8847,
									"end": 8867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 8867,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 8867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 8891,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8887,
									"end": 8888,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8883,
									"end": 8892,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8876,
									"end": 8892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8876,
									"end": 8892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8911,
									"end": 8914,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8908,
									"end": 8909,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8905,
									"end": 8915,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 8918,
									"end": 8936,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8918,
									"end": 8936,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8902,
									"end": 8938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 9056,
									"end": 9061,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 9038,
									"end": 9062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 9038,
									"end": 9062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9033,
									"end": 9036,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9026,
									"end": 9063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 9069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8951,
									"end": 9069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9228,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9262,
									"end": 9264,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9251,
									"end": 9260,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9247,
									"end": 9265,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9239,
									"end": 9265,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9239,
									"end": 9265,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 9343,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9332,
									"end": 9341,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9328,
									"end": 9345,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9319,
									"end": 9325,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9275,
									"end": 9346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 9275,
									"end": 9346,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 9424,
									"end": 9426,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9413,
									"end": 9422,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9409,
									"end": 9427,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9406,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9356,
									"end": 9428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 9356,
									"end": 9428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 9506,
									"end": 9508,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9495,
									"end": 9504,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9491,
									"end": 9509,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9482,
									"end": 9488,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9438,
									"end": 9510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 9438,
									"end": 9510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9075,
									"end": 9517,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9616,
									"end": 9620,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9654,
									"end": 9656,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9643,
									"end": 9652,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9639,
									"end": 9657,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9631,
									"end": 9657,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9631,
									"end": 9657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9735,
									"end": 9736,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9724,
									"end": 9733,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9720,
									"end": 9737,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9711,
									"end": 9717,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9667,
									"end": 9738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9667,
									"end": 9738,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9523,
									"end": 9745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9523,
									"end": 9745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 4137,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220019850ab23b908c5e02652c920fe65e506d4895d8d94382bab70b7fa1ae00b6664736f6c63430008170033",
									".code": [
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "841B39FC"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "BEAD3F50"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "BEAD3F50"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "D45E3F4A"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "F76F8D78"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "841B39FC"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "A3F4DF7E"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "2E0F2625"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "2E0F2625"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "2FF2E9DC"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 4137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3826,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3826,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3826,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 357,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 357,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 399,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 399,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2669,
											"end": 2774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2669,
											"end": 2774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 290,
											"end": 350,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 290,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 290,
											"end": 350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3455,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3455,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3455,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2490,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2490,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2155,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2155,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 246,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 246,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 246,
											"end": 283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3966,
											"end": 3970,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3974,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 3982,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3947,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3994,
											"end": 4102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "360B0720D9FA9B8BAC8C66AEE32C6D152199E1FCDDE1447D98BDE22348F201BD"
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4049,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4085,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4027,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4090,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3994,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 4134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 390,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 357,
											"end": 392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 399,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 390,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 452,
											"end": 469,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 448,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 448,
											"end": 469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 448,
											"end": 469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 448,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 448,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 448,
											"end": 469,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 448,
											"end": 469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 444,
											"name": "PUSH",
											"source": 6,
											"value": "7D0"
										},
										{
											"begin": 440,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 440,
											"end": 470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 440,
											"end": 470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 440,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 440,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 440,
											"end": 470,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 440,
											"end": 470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 290,
											"end": 350,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "556E69766572736974795F417374616E6149545F417373616E616C6900000000"
										},
										{
											"begin": 290,
											"end": 350,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 290,
											"end": 350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3573,
											"end": 3575,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3558,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 3584,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3558,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3606,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3595,
											"end": 3711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH",
											"source": 6,
											"value": "360B0720D9FA9B8BAC8C66AEE32C6D152199E1FCDDE1447D98BDE22348F201BD"
										},
										{
											"begin": 3650,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3650,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3680,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3650,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3682,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3682,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3698,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3628,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3699,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3711,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3595,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2572,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2572,
											"end": 2584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2265,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2245,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2245,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2358,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2392,
											"end": 2406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2376,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2376,
											"end": 2407,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2376,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "PUSH",
											"source": 6,
											"value": "5541410000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 246,
											"end": 283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 246,
											"end": 283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2940,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2926,
											"end": 2979,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2979,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2926,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3078,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3111,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3101,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3045,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3155,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3133,
											"end": 3172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3217,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3286,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3273,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3273,
											"end": 3297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3273,
											"end": 3297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3297,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3273,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3299,
											"name": "PUSH",
											"source": 6,
											"value": "F8"
										},
										{
											"begin": 3260,
											"end": 3299,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3256,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3243,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3314,
											"end": 3325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3183,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 3376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 3376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 696,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 763,
											"end": 776,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 894,
											"end": 915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 926,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 894,
											"end": 926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 954,
											"end": 966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1001,
											"name": "PUSH",
											"source": 6,
											"value": "7B2"
										},
										{
											"begin": 981,
											"end": 994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 969,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 969,
											"end": 994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 969,
											"end": 994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 969,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 969,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 969,
											"end": 994,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 969,
											"end": 994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 969,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 969,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "282072"
										},
										{
											"begin": 1034,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1103,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1149,
											"end": 1163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1120,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1120,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1119,
											"end": 1163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1119,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1163,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1119,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1119,
											"end": 1167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1119,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1167,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1119,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1103,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1103,
											"end": 1167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1314,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1294,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1268,
											"end": 1294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1268,
											"end": 1294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1294,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1268,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1267,
											"end": 1310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1267,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1310,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1267,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1267,
											"end": 1314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1267,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1314,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1267,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "E10"
										},
										{
											"begin": 1346,
											"end": 1374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1443,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1428,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1419,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1419,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1418,
											"end": 1460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1418,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1418,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 1494,
											"end": 1522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1595,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1570,
											"end": 1595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1570,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1570,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1570,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1569,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1569,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1569,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1665,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1840,
											"end": 1844,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1826,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1826,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1861,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1881,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1861,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1911,
											"end": 1914,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1897,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1945,
											"end": 1949,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1931,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1931,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1980,
											"end": 1986,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1966,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2003,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2024,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2003,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1799,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 2032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2062,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "SWAP13",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 2070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 696,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6741,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6728,
											"end": 6737,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6880,
											"end": 6886,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 6816,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6894,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 6816,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6970,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6904,
											"end": 6976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6976,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 6904,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6986,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7043,
											"end": 7052,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6986,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6986,
											"end": 7058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6986,
											"end": 7058,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 6986,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 7065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7251,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7071,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7196,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7116,
											"end": 7117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7206,
											"end": 7221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7244,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7230,
											"end": 7245,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7359,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7257,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7344,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7339,
											"end": 7352,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7433,
											"end": 7437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7463,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7472,
											"end": 7486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7472,
											"end": 7486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7506,
											"end": 7514,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7518,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7611,
											"end": 7615,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7609,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7616,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7590,
											"end": 7640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7620,
											"end": 7638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7590,
											"end": 7640,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7590,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7671,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7660,
											"end": 7668,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7656,
											"end": 7672,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 8104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7653,
											"end": 8104,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8090,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8065,
											"end": 8090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8065,
											"end": 8090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 8104,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 7653,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8129,
											"end": 8133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8125,
											"end": 8140,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8117,
											"end": 8140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8188,
											"end": 8196,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 8165,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8197,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8165,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8197,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7495,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 8213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8273,
											"end": 8278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8454,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8454,
											"end": 8494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8486,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8476,
											"end": 8486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8476,
											"end": 8486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8487,
											"end": 8492,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8454,
											"end": 8494,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8454,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8513,
											"end": 8517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8503,
											"end": 8539,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8521,
											"end": 8531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8521,
											"end": 8531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8532,
											"end": 8537,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8539,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8503,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8599,
											"end": 8603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8592,
											"end": 8869,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8660,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8651,
											"end": 8661,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8651,
											"end": 8661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8662,
											"end": 8667,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 8678,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8726,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8713,
											"end": 8721,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8727,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8750,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8707,
											"end": 8750,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8730,
											"end": 8748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8750,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 8707,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 8787,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8777,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8772,
											"end": 8788,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8788,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8814,
											"end": 8817,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 8812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8804,
											"end": 8818,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8841,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8801,
											"end": 8841,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 8821,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 8821,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8841,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 8801,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8854,
											"end": 8859,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8869,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8592,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8592,
											"end": 8869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 8980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8968,
											"end": 8976,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 8981,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8962,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 8953,
											"end": 8957,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8963,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 8982,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8930,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 8918,
											"end": 8926,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8915,
											"end": 8931,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 8912,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 8904,
											"end": 8908,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8901,
											"end": 8913,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8932,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8881,
											"end": 8992,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8878,
											"end": 9124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9034,
											"end": 9042,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9028,
											"end": 9032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9043,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9067,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9073,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9056,
											"end": 9096,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9056,
											"end": 9096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9056,
											"end": 9096,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9076,
											"end": 9094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9056,
											"end": 9096,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9056,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9109,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 9109,
											"end": 9114,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 9124,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8878,
											"end": 9124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 9187,
											"end": 9190,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9177,
											"end": 9185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9171,
											"end": 9175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9149,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9149,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9149,
											"end": 9191,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 9149,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9223,
											"end": 9227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9228,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9207,
											"end": 9212,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9204,
											"end": 9229,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9201,
											"end": 9252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9232,
											"end": 9250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 9232,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9252,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 9201,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9270,
											"end": 9286,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 9292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9583,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 9298,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9358,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 9400,
											"end": 9404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9382,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9382,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9382,
											"end": 9405,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 9382,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9374,
											"end": 9405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9444,
											"end": 9452,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9426,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 9426,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9414,
											"end": 9453,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9414,
											"end": 9453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9472,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9509,
											"end": 9575,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9499,
											"end": 9507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9493,
											"end": 9497,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9472,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 9472,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9472,
											"end": 9576,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 9472,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9583,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9999,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 9589,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9652,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9670,
											"end": 9671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9652,
											"end": 9672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9672,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 9652,
											"end": 9672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 9672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9647,
											"end": 9672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9704,
											"end": 9705,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9686,
											"end": 9706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9686,
											"end": 9706,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 9686,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 9743,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9763,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9781,
											"end": 9792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9763,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9763,
											"end": 9793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9763,
											"end": 9793,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 9763,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9752,
											"end": 9793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9933,
											"end": 9940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9929,
											"end": 9944,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9926,
											"end": 9927,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9923,
											"end": 9945,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9896,
											"end": 9905,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9876,
											"end": 9959,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 9853,
											"end": 9992,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9972,
											"end": 9990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 9992,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 9853,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9637,
											"end": 9999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9999,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9589,
											"end": 9999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10225,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10005,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10145,
											"end": 10179,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207472616E73616374696F6E732068617665206F63637572726564207965"
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10122,
											"end": 10180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10214,
											"end": 10217,
											"name": "PUSH",
											"source": 7,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10209,
											"end": 10211,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10190,
											"end": 10218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10597,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 10231,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10373,
											"end": 10376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10458,
											"end": 10460,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 10453,
											"end": 10456,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10394,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 10394,
											"end": 10461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10394,
											"end": 10461,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 10394,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10461,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10387,
											"end": 10461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10470,
											"end": 10563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10563,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10470,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10583,
											"end": 10586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10579,
											"end": 10591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 11022,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 10603,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10769,
											"end": 10773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10807,
											"end": 10809,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10796,
											"end": 10805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 10810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 10810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10856,
											"end": 10865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 10854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10846,
											"end": 10866,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10831,
											"end": 10840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10827,
											"end": 10844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10884,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 11010,
											"end": 11014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10884,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 10884,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10884,
											"end": 11015,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 10884,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10876,
											"end": 11015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10876,
											"end": 11015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 11022,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 11022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 11022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 11022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11261,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11028,
											"end": 11261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11108,
											"end": 11113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11090,
											"end": 11114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 11090,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11114,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11136,
											"end": 11202,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11126,
											"end": 11203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11123,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11123,
											"end": 11226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 11206,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11123,
											"end": 11226,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 11123,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11246,
											"end": 11251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11242,
											"end": 11255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11261,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11261,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11267,
											"end": 11447,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 11267,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11315,
											"end": 11392,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11312,
											"end": 11313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 11393,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11412,
											"end": 11416,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11409,
											"end": 11410,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11402,
											"end": 11417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11436,
											"end": 11440,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11441,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11638,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 11453,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11510,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11528,
											"end": 11529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11510,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11510,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11510,
											"end": 11530,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 11510,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11505,
											"end": 11530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11505,
											"end": 11530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11544,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11562,
											"end": 11563,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11544,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11544,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11544,
											"end": 11564,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 11544,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11573,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11573,
											"end": 11608,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11588,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 11588,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 11588,
											"end": 11606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11588,
											"end": 11606,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 11588,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11573,
											"end": 11608,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 11573,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11630,
											"end": 11631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11627,
											"end": 11628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11623,
											"end": 11632,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11632,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11638,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11824,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 11644,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11692,
											"end": 11769,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11793,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11779,
											"end": 11794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11810,
											"end": 11811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11803,
											"end": 11818,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 12024,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 11830,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 11874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11908,
											"end": 11909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11890,
											"end": 11910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11890,
											"end": 11910,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 11890,
											"end": 11910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 11910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 11910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 11942,
											"end": 11943,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 11924,
											"end": 11944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11924,
											"end": 11944,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 11924,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11919,
											"end": 11944,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11919,
											"end": 11944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 11966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11961,
											"end": 11970,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11953,
											"end": 11970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11953,
											"end": 11970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11983,
											"end": 11994,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12017,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 11980,
											"end": 12017,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 11997,
											"end": 12015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12017,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 11980,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 12024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 12024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 12024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 12024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 12024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12206,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 12030,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12062,
											"end": 12063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12097,
											"end": 12098,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12079,
											"end": 12099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12099,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 12079,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12074,
											"end": 12099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12074,
											"end": 12099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 12131,
											"end": 12132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12113,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12113,
											"end": 12133,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 12113,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12133,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12152,
											"end": 12153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12142,
											"end": 12177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12157,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12157,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12157,
											"end": 12175,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 12157,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12177,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 12142,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12195,
											"end": 12196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12186,
											"end": 12200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12206,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12403,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 12212,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12252,
											"end": 12255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12271,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12271,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12271,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12271,
											"end": 12291,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 12271,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12305,
											"end": 12325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12305,
											"end": 12325,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 12305,
											"end": 12325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12305,
											"end": 12325,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 12305,
											"end": 12325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12300,
											"end": 12325,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12300,
											"end": 12325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12348,
											"end": 12349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12346,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12341,
											"end": 12350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12334,
											"end": 12350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12334,
											"end": 12350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12369,
											"end": 12372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12366,
											"end": 12367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12363,
											"end": 12373,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12360,
											"end": 12396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12360,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 12360,
											"end": 12396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 12376,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 12376,
											"end": 12394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12394,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 12376,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12360,
											"end": 12396,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 12360,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12403,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12409,
											"end": 12589,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 12409,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12457,
											"end": 12534,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12454,
											"end": 12455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12447,
											"end": 12535,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12554,
											"end": 12558,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12544,
											"end": 12559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12578,
											"end": 12582,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12575,
											"end": 12576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12583,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12743,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 12595,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12697,
											"end": 12708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12595,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12749,
											"end": 13139,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 12749,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12855,
											"end": 12858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12883,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12883,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 12883,
											"end": 12922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12883,
											"end": 12922,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 12883,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 13020,
											"end": 13026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13015,
											"end": 13018,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 12938,
											"end": 13027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13027,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 12938,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12931,
											"end": 13027,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12931,
											"end": 13027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13094,
											"end": 13100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13089,
											"end": 13092,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13082,
											"end": 13086,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13075,
											"end": 13080,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13071,
											"end": 13087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 13036,
											"end": 13101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13036,
											"end": 13101,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13036,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13132,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13121,
											"end": 13124,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13117,
											"end": 13133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13110,
											"end": 13133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13110,
											"end": 13133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12859,
											"end": 13139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12749,
											"end": 13139,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12749,
											"end": 13139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12749,
											"end": 13139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12749,
											"end": 13139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12749,
											"end": 13139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13296,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 13145,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13285,
											"end": 13288,
											"name": "PUSH",
											"source": 7,
											"value": "2D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13281,
											"end": 13282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13269,
											"end": 13283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13289,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13302,
											"end": 13702,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 13302,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13483,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 13565,
											"end": 13566,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13560,
											"end": 13563,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 13483,
											"end": 13567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13567,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 13483,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13476,
											"end": 13567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13476,
											"end": 13567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13576,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 13665,
											"end": 13668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13576,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 13576,
											"end": 13669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13576,
											"end": 13669,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 13576,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13694,
											"end": 13695,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13689,
											"end": 13692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13685,
											"end": 13696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13678,
											"end": 13696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13678,
											"end": 13696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13302,
											"end": 13702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13302,
											"end": 13702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13302,
											"end": 13702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13302,
											"end": 13702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13708,
											"end": 13859,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 13708,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13848,
											"end": 13851,
											"name": "PUSH",
											"source": 7,
											"value": "2000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13844,
											"end": 13845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13832,
											"end": 13846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13825,
											"end": 13852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13708,
											"end": 13859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13708,
											"end": 13859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13865,
											"end": 14265,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 13865,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14025,
											"end": 14028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14046,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 14128,
											"end": 14129,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14123,
											"end": 14126,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14046,
											"end": 14130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 14046,
											"end": 14130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14046,
											"end": 14130,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 14046,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14039,
											"end": 14130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14039,
											"end": 14130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14139,
											"end": 14232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 14228,
											"end": 14231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14139,
											"end": 14232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 14139,
											"end": 14232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14139,
											"end": 14232,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 14139,
											"end": 14232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14257,
											"end": 14258,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14252,
											"end": 14255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14248,
											"end": 14259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14241,
											"end": 14259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14241,
											"end": 14259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13865,
											"end": 14265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13865,
											"end": 14265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13865,
											"end": 14265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13865,
											"end": 14265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14422,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 14271,
											"end": 14422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14411,
											"end": 14414,
											"name": "PUSH",
											"source": 7,
											"value": "3A00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14407,
											"end": 14408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14399,
											"end": 14405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14388,
											"end": 14415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14428,
											"end": 14828,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 14428,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14588,
											"end": 14591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 14691,
											"end": 14692,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14686,
											"end": 14689,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14609,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 14609,
											"end": 14693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14609,
											"end": 14693,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 14609,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14602,
											"end": 14693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14602,
											"end": 14693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 14791,
											"end": 14794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 14702,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14702,
											"end": 14795,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 14702,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14820,
											"end": 14821,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14815,
											"end": 14818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 14822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14804,
											"end": 14822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14804,
											"end": 14822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14428,
											"end": 14828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14428,
											"end": 14828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14428,
											"end": 14828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14428,
											"end": 14828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15711,
											"end": 15714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15733,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 15824,
											"end": 15827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15815,
											"end": 15821,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 15733,
											"end": 15828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 15733,
											"end": 15828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15733,
											"end": 15828,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 15733,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15726,
											"end": 15828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15845,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15845,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 15845,
											"end": 15993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15845,
											"end": 15993,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 15845,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 15993,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 15993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 16101,
											"end": 16104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16092,
											"end": 16098,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 16010,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16003,
											"end": 16105,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16003,
											"end": 16105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16122,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 16266,
											"end": 16269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16122,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 16122,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16122,
											"end": 16270,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 16122,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16115,
											"end": 16270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16115,
											"end": 16270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16287,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 16378,
											"end": 16381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16369,
											"end": 16375,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 16287,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 16287,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16287,
											"end": 16382,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 16287,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16280,
											"end": 16382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 16543,
											"end": 16546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 16399,
											"end": 16547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16399,
											"end": 16547,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 16399,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16392,
											"end": 16547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16392,
											"end": 16547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16564,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 16655,
											"end": 16658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16646,
											"end": 16652,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16564,
											"end": 16659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 16564,
											"end": 16659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16564,
											"end": 16659,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 16564,
											"end": 16659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16557,
											"end": 16659,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16557,
											"end": 16659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16676,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 16820,
											"end": 16823,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16676,
											"end": 16824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 16676,
											"end": 16824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16676,
											"end": 16824,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 16676,
											"end": 16824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16669,
											"end": 16824,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16669,
											"end": 16824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16841,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 16932,
											"end": 16935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16923,
											"end": 16929,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16841,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 16841,
											"end": 16936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16841,
											"end": 16936,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 16841,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16834,
											"end": 16936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16834,
											"end": 16936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16953,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 17097,
											"end": 17100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16953,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 16953,
											"end": 17101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16953,
											"end": 17101,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 16953,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16946,
											"end": 17101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16946,
											"end": 17101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17209,
											"end": 17212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17200,
											"end": 17206,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 17118,
											"end": 17213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17213,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 17118,
											"end": 17213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17111,
											"end": 17213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17111,
											"end": 17213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17223,
											"end": 17233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14834,
											"end": 17239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17394,
											"end": 17398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17432,
											"end": 17434,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 17421,
											"end": 17430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17417,
											"end": 17435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17409,
											"end": 17435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 17513,
											"end": 17514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17502,
											"end": 17511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17498,
											"end": 17515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17489,
											"end": 17495,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 17445,
											"end": 17516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 17445,
											"end": 17516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 17594,
											"end": 17596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17583,
											"end": 17592,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17579,
											"end": 17597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17570,
											"end": 17576,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 17526,
											"end": 17598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 17526,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 17676,
											"end": 17678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17665,
											"end": 17674,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17652,
											"end": 17658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 17608,
											"end": 17680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17608,
											"end": 17680,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 17608,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17245,
											"end": 17687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"AstanaIT_University_Assanali.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DECIMALS()": "2e0f2625",
							"INITIAL_SUPPLY()": "2ff2e9dc",
							"NAME()": "a3f4df7e",
							"SYMBOL()": "f76f8d78",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getLatestTransactionTimestamp()": "d45e3f4a",
							"getTransactionReceiver()": "841b39fc",
							"getTransactionSender()": "bead3f50",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"LatestTransactionInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTransactionTimestamp\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AstanaIT_University_Assanali.sol\":\"University_AstanaIT_Assanali\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"AstanaIT_University_Assanali.sol\":{\"keccak256\":\"0x61ac2e55a4d6688a9c2b2124d035a6bcb9c3e11f1020c715a0020388bf732b40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e1301600dbf066dfe941d8e8e0af56c9c2c3b49b636b1bb9d0d67d559828f3e\",\"dweb:/ipfs/QmPc5CKyRctF3FudyNeryLpbHrJPJjVTUpL9PFjAJrf2Pr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "AstanaIT_University_Assanali.sol:University_AstanaIT_Assanali",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "AstanaIT_University_Assanali.sol:University_AstanaIT_Assanali",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "AstanaIT_University_Assanali.sol:University_AstanaIT_Assanali",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "AstanaIT_University_Assanali.sol:University_AstanaIT_Assanali",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "AstanaIT_University_Assanali.sol:University_AstanaIT_Assanali",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"AstanaIT_University_Assanali.sol": {
				"ast": {
					"absolutePath": "AstanaIT_University_Assanali.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"University_AstanaIT_Assanali": [
							1289
						]
					},
					"id": 1290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1290,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"215:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "215:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "215:5:6"
								}
							],
							"canonicalName": "University_AstanaIT_Assanali",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1289,
							"linearizedBaseContracts": [
								1289,
								799,
								189,
								903,
								877,
								933
							],
							"name": "University_AstanaIT_Assanali",
							"nameLocation": "183:28:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "f76f8d78",
									"id": 942,
									"mutability": "constant",
									"name": "SYMBOL",
									"nameLocation": "269:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "246:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 940,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "246:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "554141",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c38aa720deffa54d2c1a7297dfd2a60bcabc577b1d2782390d7c9bba554ace44",
											"typeString": "literal_string \"UAA\""
										},
										"value": "UAA"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a3f4df7e",
									"id": 945,
									"mutability": "constant",
									"name": "NAME",
									"nameLocation": "313:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "290:60:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 943,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "290:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "556e69766572736974795f417374616e6149545f417373616e616c69",
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "320:30:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9737b1aeb89cc024e7b8e17083c302738727f5294c4066f714a972858d6f68b2",
											"typeString": "literal_string \"University_AstanaIT_Assanali\""
										},
										"value": "University_AstanaIT_Assanali"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2e0f2625",
									"id": 948,
									"mutability": "constant",
									"name": "DECIMALS",
									"nameLocation": "379:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "357:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 946,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "357:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "390:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2ff2e9dc",
									"id": 959,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "423:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "399:71:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 958,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32303030",
											"id": 950,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "440:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2000_by_1",
												"typeString": "int_const 2000"
											},
											"value": "2000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "448:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [
															{
																"id": 954,
																"name": "DECIMALS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "460:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "452:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 952,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "452:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "452:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "448:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 957,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "447:23:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "440:30:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "360b0720d9fa9b8bac8c66aee32c6d152199e1fcdde1447d98bde22348f201bd",
									"id": 967,
									"name": "LatestTransactionInfo",
									"nameLocation": "500:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "529:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "522:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 960,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "548:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "540:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "564:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "556:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:52:6"
									},
									"src": "494:80:6"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "636:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 975,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "653:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "657:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "653:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "665:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "647:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "647:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "647:33:6"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 970,
													"name": "NAME",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 971,
													"name": "SYMBOL",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 972,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 969,
												"name": "ERC20",
												"nameLocations": [
													"616:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "616:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "616:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:2:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:0:6"
									},
									"scope": 1289,
									"src": "602:86:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "778:1292:6",
										"statements": [
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "secondsInYear",
														"nameLocation": "902:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "894:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "894:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"hexValue": "3331353336303030",
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "918:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_31536000_by_1",
														"typeString": "int_const 31536000"
													},
													"value": "31536000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "894:32:6"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "year",
														"nameLocation": "962:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "954:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 999,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 994,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "969:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 995,
															"name": "secondsInYear",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "981:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "969:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31393730",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "997:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1970_by_1",
															"typeString": "int_const 1970"
														},
														"value": "1970"
													},
													"src": "969:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "954:47:6"
											},
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "secondsInMonth",
														"nameLocation": "1042:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1034:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"hexValue": "32363239373436",
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1059:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2629746_by_1",
														"typeString": "int_const 2629746"
													},
													"value": "2629746"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:32:6"
											},
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "month",
														"nameLocation": "1111:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1103:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1103:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1006,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "1120:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1007,
																		"name": "secondsInYear",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "1132:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1120:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1009,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1119:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1010,
															"name": "secondsInMonth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1149:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1119:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1166:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1119:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1103:64:6"
											},
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "secondsInDay",
														"nameLocation": "1206:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1198:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1015,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1198:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"hexValue": "3836343030",
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1221:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_86400_by_1",
														"typeString": "int_const 86400"
													},
													"value": "86400"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1198:28:6"
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "day",
														"nameLocation": "1261:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1253:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1253:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1021,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "1268:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1022,
																		"name": "secondsInMonth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "1280:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1268:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1024,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1267:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1025,
															"name": "secondsInDay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "1298:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1267:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1313:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1267:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1253:61:6"
											},
											{
												"assignments": [
													1031
												],
												"declarations": [
													{
														"constant": false,
														"id": 1031,
														"mutability": "mutable",
														"name": "secondsInHour",
														"nameLocation": "1354:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1346:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1030,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1346:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"hexValue": "33363030",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1370:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_3600_by_1",
														"typeString": "int_const 3600"
													},
													"value": "3600"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1346:28:6"
											},
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "hour",
														"nameLocation": "1411:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1403:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1403:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "1419:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1037,
																	"name": "secondsInDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "1431:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1419:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1039,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1418:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1040,
														"name": "secondsInHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1447:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1418:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1403:57:6"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "secondsInMinute",
														"nameLocation": "1502:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1494:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1494:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"hexValue": "3630",
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1520:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1494:28:6"
											},
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "minute",
														"nameLocation": "1560:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1552:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1552:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1049,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "1570:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1050,
																	"name": "secondsInHour",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "1582:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1570:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1052,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1569:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1053,
														"name": "secondsInMinute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "1599:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1569:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1552:62:6"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "second",
														"nameLocation": "1656:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1648:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1648:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1665:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1059,
														"name": "secondsInMinute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "1677:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1665:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1648:44:6"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "dateTimeString",
														"nameLocation": "1775:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "1761:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1062,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1761:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "year",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "1840:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1068,
																		"name": "_uintToString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "1826:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1826:19:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2d",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																		"typeString": "literal_string \"-\""
																	},
																	"value": "-"
																},
																{
																	"arguments": [
																		{
																			"id": 1073,
																			"name": "month",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1072,
																		"name": "_uintToString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "1861:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1861:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "2d",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1883:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																		"typeString": "literal_string \"-\""
																	},
																	"value": "-"
																},
																{
																	"arguments": [
																		{
																			"id": 1077,
																			"name": "day",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "1911:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1076,
																		"name": "_uintToString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "1897:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1897:18:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "20",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1917:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
																		"typeString": "literal_string \" \""
																	},
																	"value": " "
																},
																{
																	"arguments": [
																		{
																			"id": 1081,
																			"name": "hour",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "1945:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1080,
																		"name": "_uintToString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "1931:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1931:19:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "3a",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1952:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																		"typeString": "literal_string \":\""
																	},
																	"value": ":"
																},
																{
																	"arguments": [
																		{
																			"id": 1085,
																			"name": "minute",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "1980:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1084,
																		"name": "_uintToString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "1966:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1966:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "3a",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1989:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																		"typeString": "literal_string \":\""
																	},
																	"value": ":"
																},
																{
																	"arguments": [
																		{
																			"id": 1089,
																			"name": "second",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1057,
																			"src": "2017:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1088,
																		"name": "_uintToString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "2003:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2003:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																		"typeString": "literal_string \"-\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																		"typeString": "literal_string \"-\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
																		"typeString": "literal_string \" \""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																		"typeString": "literal_string \":\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																		"typeString": "literal_string \":\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1066,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1799:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1803:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1799:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1799:232:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1792:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1064,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1792:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:240:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1761:271:6"
											},
											{
												"expression": {
													"id": 1094,
													"name": "dateTimeString",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1063,
													"src": "2048:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 987,
												"id": 1095,
												"nodeType": "Return",
												"src": "2041:21:6"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timestampToDate",
									"nameLocation": "705:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "729:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "721:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:19:6"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "763:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "763:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:15:6"
									},
									"scope": 1289,
									"src": "696:1374:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "2234:181:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1103,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2253:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2259:6:6",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "2253:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2268:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2253:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207472616e73616374696f6e732068617665206f6363757272656420796574",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2271:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c",
																"typeString": "literal_string \"No transactions have occurred yet\""
															},
															"value": "No transactions have occurred yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33f30b665ee488cbf51020ef7ecb41b4c02ecbe3671d806b4201233e53ea0b1c",
																"typeString": "literal_string \"No transactions have occurred yet\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2245:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2245:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "2245:62:6"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "blockTimestamp",
														"nameLocation": "2326:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "2318:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2318:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"expression": {
														"id": 1112,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2343:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2349:9:6",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2343:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2318:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "blockTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "2392:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1115,
														"name": "timestampToDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2376:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1101,
												"id": 1118,
												"nodeType": "Return",
												"src": "2369:38:6"
											}
										]
									},
									"functionSelector": "d45e3f4a",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestTransactionTimestamp",
									"nameLocation": "2164:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:2:6"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2219:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2219:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:15:6"
									},
									"scope": 1289,
									"src": "2155:260:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2554:38:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1125,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2572:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1127,
												"nodeType": "Return",
												"src": "2565:19:6"
											}
										]
									},
									"functionSelector": "bead3f50",
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTransactionSender",
									"nameLocation": "2499:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:2:6"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2545:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:9:6"
									},
									"scope": 1289,
									"src": "2490:102:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "2735:39:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2761:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_University_AstanaIT_Assanali_$1289",
																"typeString": "contract University_AstanaIT_Assanali"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_University_AstanaIT_Assanali_$1289",
																"typeString": "contract University_AstanaIT_Assanali"
															}
														],
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2753:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1134,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2753:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1138,
												"nodeType": "Return",
												"src": "2746:20:6"
											}
										]
									},
									"functionSelector": "841b39fc",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTransactionReceiver",
									"nameLocation": "2678:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:2:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2726:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:9:6"
									},
									"scope": 1289,
									"src": "2669:105:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "2915:461:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1147,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "2930:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2939:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2930:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1153,
												"nodeType": "IfStatement",
												"src": "2926:53:6",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "2942:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1146,
															"id": 1151,
															"nodeType": "Return",
															"src": "2957:10:6"
														}
													]
												}
											},
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "2997:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "2989:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2989:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"id": 1156,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1142,
													"src": "3004:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2989:20:6"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "3028:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "3020:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3020:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"nodeType": "VariableDeclarationStatement",
												"src": "3020:14:6"
											},
											{
												"body": {
													"id": 1171,
													"nodeType": "Block",
													"src": "3063:60:6",
													"statements": [
														{
															"expression": {
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3078:8:6",
																"subExpression": {
																	"id": 1164,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "3078:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1166,
															"nodeType": "ExpressionStatement",
															"src": "3078:8:6"
														},
														{
															"expression": {
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1167,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "3101:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3109:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "3101:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1170,
															"nodeType": "ExpressionStatement",
															"src": "3101:10:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1161,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "3052:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3060:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3052:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "WhileStatement",
												"src": "3045:78:6"
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3146:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1217,
														"src": "3133:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1173,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3133:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"arguments": [
														{
															"id": 1177,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "3165:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3155:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1175,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3159:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3155:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3133:39:6"
											},
											{
												"body": {
													"id": 1210,
													"nodeType": "Block",
													"src": "3202:135:6",
													"statements": [
														{
															"expression": {
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1183,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "3217:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3227:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3217:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1186,
															"nodeType": "ExpressionStatement",
															"src": "3217:11:6"
														},
														{
															"expression": {
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1187,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "3243:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1189,
																	"indexExpression": {
																		"id": 1188,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "3250:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3243:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1201,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3273:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1199,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1197,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1142,
																									"src": "3286:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1198,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3294:2:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "3286:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1196,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3278:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1195,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "3278:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1200,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3278:19:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3273:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3267:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1192,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3267:5:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3267:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3260:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1190,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "3260:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3260:39:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3243:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1205,
															"nodeType": "ExpressionStatement",
															"src": "3243:56:6"
														},
														{
															"expression": {
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1206,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "3314:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3323:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "3314:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "3314:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1180,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "3190:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3199:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3190:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "WhileStatement",
												"src": "3183:154:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "3361:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3354:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1212,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3354:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3354:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1216,
												"nodeType": "Return",
												"src": "3347:21:6"
											}
										]
									},
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_uintToString",
									"nameLocation": "2848:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2870:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "2862:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:15:6"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "2900:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2900:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:15:6"
									},
									"scope": 1289,
									"src": "2839:537:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "3532:211:6",
										"statements": [
											{
												"assignments": [
													1229
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3548:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "3543:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3543:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1235,
												"initialValue": {
													"arguments": [
														{
															"id": 1232,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "3573:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "3577:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1230,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3558:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_University_AstanaIT_Assanali_$1289_$",
																"typeString": "type(contract super University_AstanaIT_Assanali)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3564:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3558:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3558:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3543:41:6"
											},
											{
												"condition": {
													"id": 1236,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1229,
													"src": "3599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "3595:116:6",
												"trueBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "3608:103:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1239,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3664:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3670:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3664:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1238,
																			"name": "_uintToString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "3650:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3650:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1242,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "3682:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3682:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1244,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "3696:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1237,
																	"name": "LatestTransactionInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "3628:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (string memory,address,address)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3628:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1246,
															"nodeType": "EmitStatement",
															"src": "3623:76:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1249,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1229,
													"src": "3728:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1227,
												"id": 1250,
												"nodeType": "Return",
												"src": "3721:14:6"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3464:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1224,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3508:8:6"
									},
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3481:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3473:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3493:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3485:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:28:6"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3526:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3526:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:6:6"
									},
									"scope": 1289,
									"src": "3455:288:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "3921:213:6",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3937:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1287,
														"src": "3932:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"arguments": [
														{
															"id": 1268,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "3966:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "3972:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "3976:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1266,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3947:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_University_AstanaIT_Assanali_$1289_$",
																"typeString": "type(contract super University_AstanaIT_Assanali)"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3953:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "3947:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3947:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3932:51:6"
											},
											{
												"condition": {
													"id": 1273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1265,
													"src": "3998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "3994:108:6",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "4007:95:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1276,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4063:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4069:9:6",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4063:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1275,
																			"name": "_uintToString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "4049:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4049:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "4081:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1280,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "4087:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1274,
																	"name": "LatestTransactionInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "4027:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (string memory,address,address)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4027:63:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "EmitStatement",
															"src": "4022:68:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1285,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1265,
													"src": "4119:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1286,
												"nodeType": "Return",
												"src": "4112:14:6"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3835:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3897:8:6"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3848:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3870:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3862:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3882:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3874:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:42:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3915:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3915:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3914:6:6"
									},
									"scope": 1289,
									"src": "3826:308:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1290,
							"src": "174:3963:6",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820,
								967
							]
						}
					],
					"src": "33:4104:6"
				},
				"id": 6
			}
		}
	}
}